"C:\Program Files\Java\jdk1.8.0_102\bin\java.exe" -DbenchmarkClasses= -DwarmUpSeconds=1 -DmeasurementIterations=1 -DnumberOfBenchmarkForks=1 -DwarmUpIterations=1 -DrunThreadCount=1 -Dfile.encoding=UTF-8 -classpath "C:\Program Files\Java\jdk1.8.0_102\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_102\jre\lib\deploy.jar;C:\Program Files\Java\jdk1.8.0_102\jre\lib\ext\access-bridge-64.jar;C:\Program Files\Java\jdk1.8.0_102\jre\lib\ext\cldrdata.jar;C:\Program Files\Java\jdk1.8.0_102\jre\lib\ext\dnsns.jar;C:\Program Files\Java\jdk1.8.0_102\jre\lib\ext\jaccess.jar;C:\Program Files\Java\jdk1.8.0_102\jre\lib\ext\jfxrt.jar;C:\Program Files\Java\jdk1.8.0_102\jre\lib\ext\localedata.jar;C:\Program Files\Java\jdk1.8.0_102\jre\lib\ext\nashorn.jar;C:\Program Files\Java\jdk1.8.0_102\jre\lib\ext\sunec.jar;C:\Program Files\Java\jdk1.8.0_102\jre\lib\ext\sunjce_provider.jar;C:\Program Files\Java\jdk1.8.0_102\jre\lib\ext\sunmscapi.jar;C:\Program Files\Java\jdk1.8.0_102\jre\lib\ext\sunpkcs11.jar;C:\Program Files\Java\jdk1.8.0_102\jre\lib\ext\zipfs.jar;C:\Program Files\Java\jdk1.8.0_102\jre\lib\javaws.jar;C:\Program Files\Java\jdk1.8.0_102\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_102\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_102\jre\lib\jfxswt.jar;C:\Program Files\Java\jdk1.8.0_102\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_102\jre\lib\management-agent.jar;C:\Program Files\Java\jdk1.8.0_102\jre\lib\plugin.jar;C:\Program Files\Java\jdk1.8.0_102\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_102\jre\lib\rt.jar;C:\workspace\gocypher-cybench-java-core\gocypher-cybench-jvm\target\test-classes;C:\workspace\gocypher-cybench-java-core\gocypher-cybench-jvm\target\classes;C:\Users\slabs\.m2\repository\org\openjdk\jmh\jmh-generator-annprocess\1.26\jmh-generator-annprocess-1.26.jar;C:\Users\slabs\.m2\repository\org\openjdk\jmh\jmh-core\1.26\jmh-core-1.26.jar;C:\Users\slabs\.m2\repository\net\sf\jopt-simple\jopt-simple\4.6\jopt-simple-4.6.jar;C:\Users\slabs\.m2\repository\org\apache\commons\commons-math3\3.2\commons-math3-3.2.jar;C:\Users\slabs\.m2\repository\org\slf4j\slf4j-api\1.7.30\slf4j-api-1.7.30.jar;C:\Users\slabs\.m2\repository\org\slf4j\slf4j-log4j12\1.7.30\slf4j-log4j12-1.7.30.jar;C:\Users\slabs\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;C:\Users\slabs\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.11.2\jackson-core-2.11.2.jar;C:\Users\slabs\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.11.2\jackson-databind-2.11.2.jar;C:\Users\slabs\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.11.2\jackson-annotations-2.11.2.jar;C:\Users\slabs\.m2\repository\com\gocypher\cybench\client\gocypher-cybench-runner\1.0.0\gocypher-cybench-runner-1.0.0.jar;C:\Users\slabs\.m2\repository\com\github\oshi\oshi-core\5.2.5\oshi-core-5.2.5.jar;C:\Users\slabs\.m2\repository\net\java\dev\jna\jna\5.6.0\jna-5.6.0.jar;C:\Users\slabs\.m2\repository\net\java\dev\jna\jna-platform\5.6.0\jna-platform-5.6.0.jar;C:\Users\slabs\.m2\repository\org\reflections\reflections\0.9.12\reflections-0.9.12.jar;C:\Users\slabs\.m2\repository\org\javassist\javassist\3.26.0-GA\javassist-3.26.0-GA.jar;C:\Users\slabs\.m2\repository\com\gocypher\cybench\client\gocypher-cybench-core\1.0.0\gocypher-cybench-core-1.0.0.jar;C:\Users\slabs\.m2\repository\org\apache\httpcomponents\httpclient\4.5.10\httpclient-4.5.10.jar;C:\Users\slabs\.m2\repository\org\apache\httpcomponents\httpcore\4.4.12\httpcore-4.4.12.jar;C:\Users\slabs\.m2\repository\commons-logging\commons-logging\1.2\commons-logging-1.2.jar;C:\Users\slabs\.m2\repository\commons-codec\commons-codec\1.11\commons-codec-1.11.jar;C:\Users\slabs\.m2\repository\org\jhardware\jHardware\0.8.6\jHardware-0.8.6.jar;C:\Users\slabs\.m2\repository\com\profesorfalken\WMI4Java\1.6.2\WMI4Java-1.6.2.jar;C:\Users\slabs\.m2\repository\com\profesorfalken\jPowerShell\2.0\jPowerShell-2.0.jar;C:\Users\slabs\.m2\repository\com\profesorfalken\jSensors\2.1\jSensors-2.1.jar;C:\Users\slabs\.m2\repository\com\jcabi\jcabi-manifests\1.1\jcabi-manifests-1.1.jar;C:\Users\slabs\.m2\repository\com\jcabi\jcabi-log\0.14\jcabi-log-0.14.jar;C:\Users\slabs\.m2\repository\org\junit\jupiter\junit-jupiter\5.7.0\junit-jupiter-5.7.0.jar;C:\Users\slabs\.m2\repository\org\junit\jupiter\junit-jupiter-api\5.7.0\junit-jupiter-api-5.7.0.jar;C:\Users\slabs\.m2\repository\org\apiguardian\apiguardian-api\1.1.0\apiguardian-api-1.1.0.jar;C:\Users\slabs\.m2\repository\org\opentest4j\opentest4j\1.2.0\opentest4j-1.2.0.jar;C:\Users\slabs\.m2\repository\org\junit\platform\junit-platform-commons\1.7.0\junit-platform-commons-1.7.0.jar;C:\Users\slabs\.m2\repository\org\junit\jupiter\junit-jupiter-params\5.7.0\junit-jupiter-params-5.7.0.jar;C:\Users\slabs\.m2\repository\org\junit\jupiter\junit-jupiter-engine\5.7.0\junit-jupiter-engine-5.7.0.jar;C:\Users\slabs\.m2\repository\org\junit\platform\junit-platform-engine\1.7.0\junit-platform-engine-1.7.0.jar;C:\workspace\CyBench-Intellij\build\idea-sandbox\plugins\CyBench-Intellij\lib\accessors-smart-1.2.jar;C:\workspace\CyBench-Intellij\build\idea-sandbox\plugins\CyBench-Intellij\lib\asm-5.0.4.jar;C:\workspace\CyBench-Intellij\build\idea-sandbox\plugins\CyBench-Intellij\lib\commons-codec-1.11.jar;C:\workspace\CyBench-Intellij\build\idea-sandbox\plugins\CyBench-Intellij\lib\commons-logging-1.2.jar;C:\workspace\CyBench-Intellij\build\idea-sandbox\plugins\CyBench-Intellij\lib\commons-math3-3.2.jar;C:\workspace\CyBench-Intellij\build\idea-sandbox\plugins\CyBench-Intellij\lib\gocypher-cybench-core-1.0.0.jar;C:\workspace\CyBench-Intellij\build\idea-sandbox\plugins\CyBench-Intellij\lib\gocypher-cybench-runner-1.0.0.jar;C:\workspace\CyBench-Intellij\build\idea-sandbox\plugins\CyBench-Intellij\lib\httpclient-4.5.10.jar;C:\workspace\CyBench-Intellij\build\idea-sandbox\plugins\CyBench-Intellij\lib\httpcore-4.4.12.jar;C:\workspace\CyBench-Intellij\build\idea-sandbox\plugins\CyBench-Intellij\lib\jackson-annotations-2.11.2.jar;C:\workspace\CyBench-Intellij\build\idea-sandbox\plugins\CyBench-Intellij\lib\jackson-core-2.11.2.jar;C:\workspace\CyBench-Intellij\build\idea-sandbox\plugins\CyBench-Intellij\lib\jackson-databind-2.11.2.jar;C:\workspace\CyBench-Intellij\build\idea-sandbox\plugins\CyBench-Intellij\lib\javassist-3.26.0-GA.jar;C:\workspace\CyBench-Intellij\build\idea-sandbox\plugins\CyBench-Intellij\lib\jcabi-log-0.14.jar;C:\workspace\CyBench-Intellij\build\idea-sandbox\plugins\CyBench-Intellij\lib\jcabi-manifests-1.1.jar;C:\workspace\CyBench-Intellij\build\idea-sandbox\plugins\CyBench-Intellij\lib\jettison-1.4.1.jar;C:\workspace\CyBench-Intellij\build\idea-sandbox\plugins\CyBench-Intellij\lib\jHardware-0.8.6.jar;C:\workspace\CyBench-Intellij\build\idea-sandbox\plugins\CyBench-Intellij\lib\jmh-core-1.26.jar;C:\workspace\CyBench-Intellij\build\idea-sandbox\plugins\CyBench-Intellij\lib\jna-5.6.0.jar;C:\workspace\CyBench-Intellij\build\idea-sandbox\plugins\CyBench-Intellij\lib\jna-platform-5.6.0.jar;C:\workspace\CyBench-Intellij\build\idea-sandbox\plugins\CyBench-Intellij\lib\jopt-simple-4.6.jar;C:\workspace\CyBench-Intellij\build\idea-sandbox\plugins\CyBench-Intellij\lib\jPowerShell-2.0.jar;C:\workspace\CyBench-Intellij\build\idea-sandbox\plugins\CyBench-Intellij\lib\jSensors-2.1.jar;C:\workspace\CyBench-Intellij\build\idea-sandbox\plugins\CyBench-Intellij\lib\json-20200518.jar;C:\workspace\CyBench-Intellij\build\idea-sandbox\plugins\CyBench-Intellij\lib\json-path-2.4.0.jar;C:\workspace\CyBench-Intellij\build\idea-sandbox\plugins\CyBench-Intellij\lib\json-smart-2.3.jar;C:\workspace\CyBench-Intellij\build\idea-sandbox\plugins\CyBench-Intellij\lib\log4j-1.2.17.jar;C:\workspace\CyBench-Intellij\build\idea-sandbox\plugins\CyBench-Intellij\lib\oshi-core-5.2.5.jar;C:\workspace\CyBench-Intellij\build\idea-sandbox\plugins\CyBench-Intellij\lib\reflections-0.9.12.jar;C:\workspace\CyBench-Intellij\build\idea-sandbox\plugins\CyBench-Intellij\lib\slf4j-api-1.7.30.jar;C:\workspace\CyBench-Intellij\build\idea-sandbox\plugins\CyBench-Intellij\lib\slf4j-log4j12-1.7.30.jar;C:\workspace\CyBench-Intellij\build\idea-sandbox\plugins\CyBench-Intellij\lib\WMI4Java-1.6.2.jar" com.gocypher.cybench.launcher.BenchmarkRunner
SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/C:/Users/slabs/.m2/repository/org/slf4j/slf4j-log4j12/1.7.30/slf4j-log4j12-1.7.30.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/C:/workspace/CyBench-Intellij/build/idea-sandbox/plugins/CyBench-Intellij/lib/slf4j-log4j12-1.7.30.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
2020-11-05 09:52:46,989 INFO  [main!BenchmarkRunner] - -----------------------------------------------------------------------------------------
2020-11-05 09:52:46,989 INFO  [main!BenchmarkRunner] -                                  Starting CyBench benchmarks
2020-11-05 09:52:46,989 INFO  [main!BenchmarkRunner] - -----------------------------------------------------------------------------------------
2020-11-05 09:52:46,989 ERROR [main!ConfigurationHandler] - Configuration file provided not found, will try to use default configuration file.
2020-11-05 09:52:46,989 ERROR [main!ConfigurationHandler] - ALERT: Default configuration file is missing, try re-downloading the project or use our documentation to create your own configuration file
2020-11-05 09:52:46,989 INFO  [main!BenchmarkRunner] - Collecting hardware, software information...
2020-11-05 09:52:47,052 INFO  [main!CollectSystemInformation] - Looking for Processor info OSHI...
2020-11-05 09:52:47,052 WARN  [main!FileUtil] - Configuration conflict: there is more than one oshi.properties file on the classpath
2020-11-05 09:52:47,776 WARN  [main!FileUtil] - Configuration conflict: there is more than one oshi.architecture.properties file on the classpath
2020-11-05 09:52:47,776 INFO  [main!CollectSystemInformation] - Looking for Memory properties OSHI...
2020-11-05 09:52:47,785 INFO  [main!CollectSystemInformation] - Looking for GraphicsCard properties OSHI...
2020-11-05 09:52:47,890 INFO  [main!CollectSystemInformation] - Looking for Disk properties OSHI...
2020-11-05 09:52:52,004 INFO  [main!CollectSystemInformation] - Looking for OS properties OSHI...
2020-11-05 09:52:52,366 INFO  [main!CollectSystemInformation] - Looking for Memory properties JHardware...
2020-11-05 09:52:53,845 INFO  [main!CollectSystemInformation] - Looking for Bios properties JHardware...
2020-11-05 09:52:54,040 INFO  [main!CollectSystemInformation] - Looking for Motherboard properties JHardware...
2020-11-05 09:52:54,264 INFO  [main!BenchmarkRunner] - Collecting JVM properties...
2020-11-05 09:52:54,264 INFO  [main!CollectSystemInformation] - JVM memory properties...
2020-11-05 09:52:54,267 INFO  [main!CollectSystemInformation] - JVM system properties...
2020-11-05 09:52:54,267 INFO  [main!BenchmarkRunner] - Executing benchmarks...
2020-11-05 09:52:54,268 INFO  [main!BenchmarkRunner] - _______________________ BENCHMARK TESTS FOUND _________________________________
2020-11-05 09:52:54,273 INFO  [main!BenchmarkRunner] - Execute all benchmarks found on the classpath and configure default ones....
2020-11-05 09:52:54,391 INFO  [main!Reflections] - Reflections took 107 ms to scan 6 urls, producing 27 keys and 95 values
2020-11-05 09:52:54,441 INFO  [main!SecurityUtils] - Computing hash for class com/gocypher/cybench/jmh/jvm/client/tests/IOAsyncFileSeekBenchmarks.class, classloader sun.misc.Launcher$AppClassLoader@61bbe9ba
2020-11-05 09:52:54,442 INFO  [main!SecurityUtils] - Computed hash f1b86362497eecdc9897234fded079 for class com/gocypher/cybench/jmh/jvm/client/tests/IOAsyncFileSeekBenchmarks.class, classloader sun.misc.Launcher$AppClassLoader@61bbe9ba
2020-11-05 09:52:54,443 INFO  [main!SecurityUtils] - Computing hash for class com/gocypher/cybench/jmh/jvm/test/BenchmarksTest.class, classloader sun.misc.Launcher$AppClassLoader@61bbe9ba
2020-11-05 09:52:54,443 INFO  [main!SecurityUtils] - Computed hash 29f43ae19d19891ac4a6d9751f1bdb3 for class com/gocypher/cybench/jmh/jvm/test/BenchmarksTest.class, classloader sun.misc.Launcher$AppClassLoader@61bbe9ba
2020-11-05 09:52:54,443 INFO  [main!SecurityUtils] - Computing hash for class com/gocypher/cybench/jmh/jvm/client/tests/IOSyncFileSeekBenchmarks.class, classloader sun.misc.Launcher$AppClassLoader@61bbe9ba
2020-11-05 09:52:54,444 INFO  [main!SecurityUtils] - Computed hash fd5ebd66ee33823a81834e9ca0dd4e17 for class com/gocypher/cybench/jmh/jvm/client/tests/IOSyncFileSeekBenchmarks.class, classloader sun.misc.Launcher$AppClassLoader@61bbe9ba
2020-11-05 09:52:54,444 INFO  [main!SecurityUtils] - Computing hash for class com/gocypher/cybench/jmh/jvm/client/tests/NumberBenchmarks.class, classloader sun.misc.Launcher$AppClassLoader@61bbe9ba
2020-11-05 09:52:54,445 INFO  [main!SecurityUtils] - Computed hash 99f656e4f2bc83ef64372c47baea5cd9 for class com/gocypher/cybench/jmh/jvm/client/tests/NumberBenchmarks.class, classloader sun.misc.Launcher$AppClassLoader@61bbe9ba
2020-11-05 09:52:54,445 INFO  [main!SecurityUtils] - Computing hash for class com/gocypher/cybench/jmh/jvm/client/tests/IOSyncAPIComparisonBenchmarks.class, classloader sun.misc.Launcher$AppClassLoader@61bbe9ba
2020-11-05 09:52:54,445 INFO  [main!SecurityUtils] - Computed hash 11852e7a111db542c18a29adcf263b1 for class com/gocypher/cybench/jmh/jvm/client/tests/IOSyncAPIComparisonBenchmarks.class, classloader sun.misc.Launcher$AppClassLoader@61bbe9ba
2020-11-05 09:52:54,446 INFO  [main!SecurityUtils] - Computing hash for class com/gocypher/cybench/jmh/jvm/client/tests/StringBenchmarks.class, classloader sun.misc.Launcher$AppClassLoader@61bbe9ba
2020-11-05 09:52:54,446 INFO  [main!SecurityUtils] - Computed hash 3e9f946e1f649a758bf0893fb2671 for class com/gocypher/cybench/jmh/jvm/client/tests/StringBenchmarks.class, classloader sun.misc.Launcher$AppClassLoader@61bbe9ba
2020-11-05 09:52:54,446 INFO  [main!SecurityUtils] - Computing hash for class com/gocypher/cybench/jmh/jvm/client/tests/IOAsyncAPIComparisonBenchmarks.class, classloader sun.misc.Launcher$AppClassLoader@61bbe9ba
2020-11-05 09:52:54,447 INFO  [main!SecurityUtils] - Computed hash e246fff0838da5f8dab79c8d4c3fb1ef for class com/gocypher/cybench/jmh/jvm/client/tests/IOAsyncAPIComparisonBenchmarks.class, classloader sun.misc.Launcher$AppClassLoader@61bbe9ba
2020-11-05 09:52:54,509 INFO  [main!Manifests] - 62 attributes loaded from 78 stream(s) in 48ms, 62 saved, 1069 ignored: ["Agent-Class", "Ant-Version", "Archiver-Version", "Automatic-Module-Name", "Bnd-LastModified", "Build-Date", "Build-Jdk", "Build-Jdk-Spec", "Build-Revision", "Build-Time", "Built-By", "Bundle-ActivationPolicy", "Bundle-Category", "Bundle-Description", "Bundle-Developers", "Bundle-DocURL", "Bundle-License", "Bundle-ManifestVersion", "Bundle-Name", "Bundle-NativeCode", "Bundle-RequiredExecutionEnvironment", "Bundle-SCM", "Bundle-SymbolicName", "Bundle-Vendor", "Bundle-Version", "Class-Path", "Copyright", "Created-By", "Export-Package", "Extension-Name", "Fragment-Host", "Git-Revision", "Ignore-Package", "Implementation-Build", "Implementation-Build-Date", "Implementation-Title", "Implementation-URL", "Implementation-Vendor", "Implementation-Vendor-Id", "Implementation-Version", "Import-Package", "Include-Resource", "JCabi-Build", "JCabi-Date", "JCabi-Version", "Main-Class", "Manifest-Version", "Multi-Release", "Os-Arch", "Os-Name", "Os-Version", "Premain-Class", "Private-Package", "Require-Bundle", "Require-Capability", "Specification-Title", "Specification-Vendor", "Specification-Version", "Tool", "X-Compile-Source-JDK", "X-Compile-Target-JDK", "url"]
# JMH version: 1.26
# VM version: JDK 1.8.0_102, Java HotSpot(TM) 64-Bit Server VM, 25.102-b14
# VM invoker: C:\Program Files\Java\jdk1.8.0_102\jre\bin\java.exe
# VM options: -DbenchmarkClasses= -DwarmUpSeconds=1 -DmeasurementIterations=1 -DnumberOfBenchmarkForks=1 -DwarmUpIterations=1 -DrunThreadCount=1 -Dfile.encoding=UTF-8
# Warmup: 1 iterations, 1 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.gocypher.cybench.jmh.jvm.client.tests.NumberBenchmarks.generateAndAddAtomicNumbers

# Run progress: 0,00% complete, ETA 00:02:01
# Fork: 1 of 1
# Preparing profilers: SafepointsProfiler
# Profilers consume stdout from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 22000786,690 ops/s
Iteration   1: 27365737,359 ops/s
                 ·gc.alloc.rate:                   1786,491 MB/sec
                 ·gc.alloc.rate.norm:              71,939 B/op
                 ·gc.churn.PS_Eden_Space:          1779,139 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     71,643 B/op
                 ·gc.churn.PS_Survivor_Space:      0,050 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 0,002 B/op
                 ·gc.count:                        92,000 counts
                 ·gc.time:                         74,000 ms
                 ·rt.safepointSyncTime:            0,031 ms
                 ·rt.safepointTime:                1,448 ms
                 ·rt.safepoints:                   108,000 counts
                 ·rt.sync.contendedLockAttempts:   83,000 locks
                 ·rt.sync.fatMonitors:             128,000 monitors
                 ·rt.sync.futileWakeups:           6,000 counts
                 ·rt.sync.monitorDeflations:       57,000 monitors
                 ·rt.sync.monitorInflations:       59,000 monitors
                 ·rt.sync.notifications:           20,000 counts
                 ·rt.sync.parks:                   34,000 counts
                 ·threads.alive:                   6,000 threads
                 ·threads.daemon:                  5,000 threads
                 ·threads.started:                 10,000 threads

# Processing profiler results: SafepointsProfiler


Result "com.gocypher.cybench.jmh.jvm.client.tests.NumberBenchmarks.generateAndAddAtomicNumbers":
  27365737,359 ops/s

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.NumberBenchmarks.generateAndAddAtomicNumbers:·gc.alloc.rate":
  1786,491 MB/sec

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.NumberBenchmarks.generateAndAddAtomicNumbers:·gc.alloc.rate.norm":
  71,939 B/op

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.NumberBenchmarks.generateAndAddAtomicNumbers:·gc.churn.PS_Eden_Space":
  1779,139 MB/sec

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.NumberBenchmarks.generateAndAddAtomicNumbers:·gc.churn.PS_Eden_Space.norm":
  71,643 B/op

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.NumberBenchmarks.generateAndAddAtomicNumbers:·gc.churn.PS_Survivor_Space":
  0,050 MB/sec

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.NumberBenchmarks.generateAndAddAtomicNumbers:·gc.churn.PS_Survivor_Space.norm":
  0,002 B/op

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.NumberBenchmarks.generateAndAddAtomicNumbers:·gc.count":
  92,000 counts

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.NumberBenchmarks.generateAndAddAtomicNumbers:·gc.time":
  74,000 ms

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.NumberBenchmarks.generateAndAddAtomicNumbers:·rt.safepointSyncTime":
  0,031 ms

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.NumberBenchmarks.generateAndAddAtomicNumbers:·rt.safepointTime":
  1,448 ms

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.NumberBenchmarks.generateAndAddAtomicNumbers:·rt.safepoints":
  108,000 counts

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.NumberBenchmarks.generateAndAddAtomicNumbers:·rt.sync.contendedLockAttempts":
  83,000 locks

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.NumberBenchmarks.generateAndAddAtomicNumbers:·rt.sync.fatMonitors":
  128,000 monitors

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.NumberBenchmarks.generateAndAddAtomicNumbers:·rt.sync.futileWakeups":
  6,000 counts

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.NumberBenchmarks.generateAndAddAtomicNumbers:·rt.sync.monitorDeflations":
  57,000 monitors

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.NumberBenchmarks.generateAndAddAtomicNumbers:·rt.sync.monitorInflations":
  59,000 monitors

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.NumberBenchmarks.generateAndAddAtomicNumbers:·rt.sync.notifications":
  20,000 counts

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.NumberBenchmarks.generateAndAddAtomicNumbers:·rt.sync.parks":
  34,000 counts

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.NumberBenchmarks.generateAndAddAtomicNumbers:·safepoints.interval":
  11166,000 ms

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.NumberBenchmarks.generateAndAddAtomicNumbers:·safepoints.pause":
  88,363 ±(99.9%) 0,001 ms [Sum]
  (min, avg, max) = (0,175, 0,950, 1,518), stdev = 0,248
  CI (99.9%): [88,363, 88,363] (assumes normal distribution)

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.NumberBenchmarks.generateAndAddAtomicNumbers:·safepoints.ttsp":
  2,519 ±(99.9%) 0,001 ms [Sum]
  (min, avg, max) = (0,017, 0,027, 0,106), stdev = 0,013
  CI (99.9%): [2,519, 2,519] (assumes normal distribution)

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.NumberBenchmarks.generateAndAddAtomicNumbers:·threads.alive":
  6,000 threads

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.NumberBenchmarks.generateAndAddAtomicNumbers:·threads.daemon":
  5,000 threads

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.NumberBenchmarks.generateAndAddAtomicNumbers:·threads.started":
  10,000 threads


# JMH version: 1.26
# VM version: JDK 1.8.0_102, Java HotSpot(TM) 64-Bit Server VM, 25.102-b14
# VM invoker: C:\Program Files\Java\jdk1.8.0_102\jre\bin\java.exe
# VM options: -DbenchmarkClasses= -DwarmUpSeconds=1 -DmeasurementIterations=1 -DnumberOfBenchmarkForks=1 -DwarmUpIterations=1 -DrunThreadCount=1 -Dfile.encoding=UTF-8
# Warmup: 1 iterations, 1 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.gocypher.cybench.jmh.jvm.client.tests.NumberBenchmarks.generateAndAddBigDecimalNumbers

# Run progress: 9,09% complete, ETA 00:02:27
# Fork: 1 of 1
# Preparing profilers: SafepointsProfiler
# Profilers consume stdout from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 20275893,287 ops/s
Iteration   1: 29318853,977 ops/s
                 ·gc.alloc.rate:                   4253,882 MB/sec
                 ·gc.alloc.rate.norm:              159,987 B/op
                 ·gc.churn.PS_Eden_Space:          4238,245 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     159,399 B/op
                 ·gc.churn.PS_Survivor_Space:      0,074 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 0,003 B/op
                 ·gc.count:                        85,000 counts
                 ·gc.time:                         68,000 ms
                 ·rt.safepointSyncTime:            0,030 ms
                 ·rt.safepointTime:                1,482 ms
                 ·rt.safepoints:                   103,000 counts
                 ·rt.sync.contendedLockAttempts:   54,000 locks
                 ·rt.sync.fatMonitors:             128,000 monitors
                 ·rt.sync.futileWakeups:           4,000 counts
                 ·rt.sync.monitorDeflations:       57,000 monitors
                 ·rt.sync.monitorInflations:       59,000 monitors
                 ·rt.sync.notifications:           23,000 counts
                 ·rt.sync.parks:                   35,000 counts
                 ·threads.alive:                   6,000 threads
                 ·threads.daemon:                  5,000 threads
                 ·threads.started:                 10,000 threads

# Processing profiler results: SafepointsProfiler


Result "com.gocypher.cybench.jmh.jvm.client.tests.NumberBenchmarks.generateAndAddBigDecimalNumbers":
  29318853,977 ops/s

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.NumberBenchmarks.generateAndAddBigDecimalNumbers:·gc.alloc.rate":
  4253,882 MB/sec

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.NumberBenchmarks.generateAndAddBigDecimalNumbers:·gc.alloc.rate.norm":
  159,987 B/op

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.NumberBenchmarks.generateAndAddBigDecimalNumbers:·gc.churn.PS_Eden_Space":
  4238,245 MB/sec

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.NumberBenchmarks.generateAndAddBigDecimalNumbers:·gc.churn.PS_Eden_Space.norm":
  159,399 B/op

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.NumberBenchmarks.generateAndAddBigDecimalNumbers:·gc.churn.PS_Survivor_Space":
  0,074 MB/sec

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.NumberBenchmarks.generateAndAddBigDecimalNumbers:·gc.churn.PS_Survivor_Space.norm":
  0,003 B/op

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.NumberBenchmarks.generateAndAddBigDecimalNumbers:·gc.count":
  85,000 counts

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.NumberBenchmarks.generateAndAddBigDecimalNumbers:·gc.time":
  68,000 ms

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.NumberBenchmarks.generateAndAddBigDecimalNumbers:·rt.safepointSyncTime":
  0,030 ms

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.NumberBenchmarks.generateAndAddBigDecimalNumbers:·rt.safepointTime":
  1,482 ms

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.NumberBenchmarks.generateAndAddBigDecimalNumbers:·rt.safepoints":
  103,000 counts

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.NumberBenchmarks.generateAndAddBigDecimalNumbers:·rt.sync.contendedLockAttempts":
  54,000 locks

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.NumberBenchmarks.generateAndAddBigDecimalNumbers:·rt.sync.fatMonitors":
  128,000 monitors

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.NumberBenchmarks.generateAndAddBigDecimalNumbers:·rt.sync.futileWakeups":
  4,000 counts

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.NumberBenchmarks.generateAndAddBigDecimalNumbers:·rt.sync.monitorDeflations":
  57,000 monitors

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.NumberBenchmarks.generateAndAddBigDecimalNumbers:·rt.sync.monitorInflations":
  59,000 monitors

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.NumberBenchmarks.generateAndAddBigDecimalNumbers:·rt.sync.notifications":
  23,000 counts

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.NumberBenchmarks.generateAndAddBigDecimalNumbers:·rt.sync.parks":
  35,000 counts

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.NumberBenchmarks.generateAndAddBigDecimalNumbers:·safepoints.interval":
  11166,000 ms

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.NumberBenchmarks.generateAndAddBigDecimalNumbers:·safepoints.pause":
  81,762 ±(99.9%) 0,001 ms [Sum]
  (min, avg, max) = (0,230, 0,951, 1,700), stdev = 0,255
  CI (99.9%): [81,762, 81,762] (assumes normal distribution)

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.NumberBenchmarks.generateAndAddBigDecimalNumbers:·safepoints.ttsp":
  2,517 ±(99.9%) 0,001 ms [Sum]
  (min, avg, max) = (0,017, 0,029, 0,063), stdev = 0,012
  CI (99.9%): [2,517, 2,517] (assumes normal distribution)

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.NumberBenchmarks.generateAndAddBigDecimalNumbers:·threads.alive":
  6,000 threads

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.NumberBenchmarks.generateAndAddBigDecimalNumbers:·threads.daemon":
  5,000 threads

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.NumberBenchmarks.generateAndAddBigDecimalNumbers:·threads.started":
  10,000 threads


# JMH version: 1.26
# VM version: JDK 1.8.0_102, Java HotSpot(TM) 64-Bit Server VM, 25.102-b14
# VM invoker: C:\Program Files\Java\jdk1.8.0_102\jre\bin\java.exe
# VM options: -DbenchmarkClasses= -DwarmUpSeconds=1 -DmeasurementIterations=1 -DnumberOfBenchmarkForks=1 -DwarmUpIterations=1 -DrunThreadCount=1 -Dfile.encoding=UTF-8
# Warmup: 1 iterations, 1 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.gocypher.cybench.jmh.jvm.client.tests.NumberBenchmarks.generateAndAddDoubleNumbers

# Run progress: 18,17% complete, ETA 00:02:13
# Fork: 1 of 1
# Preparing profilers: SafepointsProfiler
# Profilers consume stdout from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 25128638,126 ops/s
Iteration   1: 25441349,420 ops/s
                 ·gc.alloc.rate:                   555,309 MB/sec
                 ·gc.alloc.rate.norm:              24,049 B/op
                 ·gc.churn.PS_Eden_Space:          550,743 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     23,851 B/op
                 ·gc.churn.PS_Survivor_Space:      0,039 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 0,002 B/op
                 ·gc.count:                        111,000 counts
                 ·gc.time:                         85,000 ms
                 ·rt.safepointSyncTime:            0,038 ms
                 ·rt.safepointTime:                1,614 ms
                 ·rt.safepoints:                   128,000 counts
                 ·rt.sync.contendedLockAttempts:   49,000 locks
                 ·rt.sync.fatMonitors:             128,000 monitors
                 ·rt.sync.futileWakeups:           6,000 counts
                 ·rt.sync.monitorDeflations:       57,000 monitors
                 ·rt.sync.monitorInflations:       59,000 monitors
                 ·rt.sync.notifications:           19,000 counts
                 ·rt.sync.parks:                   32,000 counts
                 ·threads.alive:                   6,000 threads
                 ·threads.daemon:                  5,000 threads
                 ·threads.started:                 10,000 threads

# Processing profiler results: SafepointsProfiler


Result "com.gocypher.cybench.jmh.jvm.client.tests.NumberBenchmarks.generateAndAddDoubleNumbers":
  25441349,420 ops/s

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.NumberBenchmarks.generateAndAddDoubleNumbers:·gc.alloc.rate":
  555,309 MB/sec

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.NumberBenchmarks.generateAndAddDoubleNumbers:·gc.alloc.rate.norm":
  24,049 B/op

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.NumberBenchmarks.generateAndAddDoubleNumbers:·gc.churn.PS_Eden_Space":
  550,743 MB/sec

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.NumberBenchmarks.generateAndAddDoubleNumbers:·gc.churn.PS_Eden_Space.norm":
  23,851 B/op

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.NumberBenchmarks.generateAndAddDoubleNumbers:·gc.churn.PS_Survivor_Space":
  0,039 MB/sec

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.NumberBenchmarks.generateAndAddDoubleNumbers:·gc.churn.PS_Survivor_Space.norm":
  0,002 B/op

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.NumberBenchmarks.generateAndAddDoubleNumbers:·gc.count":
  111,000 counts

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.NumberBenchmarks.generateAndAddDoubleNumbers:·gc.time":
  85,000 ms

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.NumberBenchmarks.generateAndAddDoubleNumbers:·rt.safepointSyncTime":
  0,038 ms

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.NumberBenchmarks.generateAndAddDoubleNumbers:·rt.safepointTime":
  1,614 ms

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.NumberBenchmarks.generateAndAddDoubleNumbers:·rt.safepoints":
  128,000 counts

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.NumberBenchmarks.generateAndAddDoubleNumbers:·rt.sync.contendedLockAttempts":
  49,000 locks

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.NumberBenchmarks.generateAndAddDoubleNumbers:·rt.sync.fatMonitors":
  128,000 monitors

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.NumberBenchmarks.generateAndAddDoubleNumbers:·rt.sync.futileWakeups":
  6,000 counts

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.NumberBenchmarks.generateAndAddDoubleNumbers:·rt.sync.monitorDeflations":
  57,000 monitors

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.NumberBenchmarks.generateAndAddDoubleNumbers:·rt.sync.monitorInflations":
  59,000 monitors

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.NumberBenchmarks.generateAndAddDoubleNumbers:·rt.sync.notifications":
  19,000 counts

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.NumberBenchmarks.generateAndAddDoubleNumbers:·rt.sync.parks":
  32,000 counts

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.NumberBenchmarks.generateAndAddDoubleNumbers:·safepoints.interval":
  11161,000 ms

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.NumberBenchmarks.generateAndAddDoubleNumbers:·safepoints.pause":
  102,600 ±(99.9%) 0,001 ms [Sum]
  (min, avg, max) = (0,162, 0,916, 1,479), stdev = 0,254
  CI (99.9%): [102,600, 102,600] (assumes normal distribution)

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.NumberBenchmarks.generateAndAddDoubleNumbers:·safepoints.ttsp":
  3,237 ±(99.9%) 0,001 ms [Sum]
  (min, avg, max) = (0,016, 0,029, 0,075), stdev = 0,011
  CI (99.9%): [3,237, 3,237] (assumes normal distribution)

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.NumberBenchmarks.generateAndAddDoubleNumbers:·threads.alive":
  6,000 threads

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.NumberBenchmarks.generateAndAddDoubleNumbers:·threads.daemon":
  5,000 threads

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.NumberBenchmarks.generateAndAddDoubleNumbers:·threads.started":
  10,000 threads


# JMH version: 1.26
# VM version: JDK 1.8.0_102, Java HotSpot(TM) 64-Bit Server VM, 25.102-b14
# VM invoker: C:\Program Files\Java\jdk1.8.0_102\jre\bin\java.exe
# VM options: -DbenchmarkClasses= -DwarmUpSeconds=1 -DmeasurementIterations=1 -DnumberOfBenchmarkForks=1 -DwarmUpIterations=1 -DrunThreadCount=1 -Dfile.encoding=UTF-8
# Warmup: 1 iterations, 1 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.gocypher.cybench.jmh.jvm.client.tests.NumberBenchmarks.generateAndLogarithmDoubleNumbers

# Run progress: 27,26% complete, ETA 00:01:58
# Fork: 1 of 1
# Preparing profilers: SafepointsProfiler
# Profilers consume stdout from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 22361314,759 ops/s
Iteration   1: 22510137,694 ops/s
                 ·gc.alloc.rate:                   490,108 MB/sec
                 ·gc.alloc.rate.norm:              24,000 B/op
                 ·gc.churn.PS_Eden_Space:          487,744 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     23,884 B/op
                 ·gc.churn.PS_Survivor_Space:      0,024 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 0,001 B/op
                 ·gc.count:                        105,000 counts
                 ·gc.time:                         82,000 ms
                 ·rt.safepointSyncTime:            0,034 ms
                 ·rt.safepointTime:                1,494 ms
                 ·rt.safepoints:                   120,000 counts
                 ·rt.sync.contendedLockAttempts:   64,000 locks
                 ·rt.sync.fatMonitors:             128,000 monitors
                 ·rt.sync.futileWakeups:           5,000 counts
                 ·rt.sync.monitorDeflations:       57,000 monitors
                 ·rt.sync.monitorInflations:       59,000 monitors
                 ·rt.sync.notifications:           18,000 counts
                 ·rt.sync.parks:                   28,000 counts
                 ·threads.alive:                   6,000 threads
                 ·threads.daemon:                  5,000 threads
                 ·threads.started:                 10,000 threads

# Processing profiler results: SafepointsProfiler


Result "com.gocypher.cybench.jmh.jvm.client.tests.NumberBenchmarks.generateAndLogarithmDoubleNumbers":
  22510137,694 ops/s

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.NumberBenchmarks.generateAndLogarithmDoubleNumbers:·gc.alloc.rate":
  490,108 MB/sec

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.NumberBenchmarks.generateAndLogarithmDoubleNumbers:·gc.alloc.rate.norm":
  24,000 B/op

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.NumberBenchmarks.generateAndLogarithmDoubleNumbers:·gc.churn.PS_Eden_Space":
  487,744 MB/sec

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.NumberBenchmarks.generateAndLogarithmDoubleNumbers:·gc.churn.PS_Eden_Space.norm":
  23,884 B/op

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.NumberBenchmarks.generateAndLogarithmDoubleNumbers:·gc.churn.PS_Survivor_Space":
  0,024 MB/sec

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.NumberBenchmarks.generateAndLogarithmDoubleNumbers:·gc.churn.PS_Survivor_Space.norm":
  0,001 B/op

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.NumberBenchmarks.generateAndLogarithmDoubleNumbers:·gc.count":
  105,000 counts

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.NumberBenchmarks.generateAndLogarithmDoubleNumbers:·gc.time":
  82,000 ms

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.NumberBenchmarks.generateAndLogarithmDoubleNumbers:·rt.safepointSyncTime":
  0,034 ms

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.NumberBenchmarks.generateAndLogarithmDoubleNumbers:·rt.safepointTime":
  1,494 ms

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.NumberBenchmarks.generateAndLogarithmDoubleNumbers:·rt.safepoints":
  120,000 counts

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.NumberBenchmarks.generateAndLogarithmDoubleNumbers:·rt.sync.contendedLockAttempts":
  64,000 locks

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.NumberBenchmarks.generateAndLogarithmDoubleNumbers:·rt.sync.fatMonitors":
  128,000 monitors

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.NumberBenchmarks.generateAndLogarithmDoubleNumbers:·rt.sync.futileWakeups":
  5,000 counts

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.NumberBenchmarks.generateAndLogarithmDoubleNumbers:·rt.sync.monitorDeflations":
  57,000 monitors

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.NumberBenchmarks.generateAndLogarithmDoubleNumbers:·rt.sync.monitorInflations":
  59,000 monitors

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.NumberBenchmarks.generateAndLogarithmDoubleNumbers:·rt.sync.notifications":
  18,000 counts

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.NumberBenchmarks.generateAndLogarithmDoubleNumbers:·rt.sync.parks":
  28,000 counts

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.NumberBenchmarks.generateAndLogarithmDoubleNumbers:·safepoints.interval":
  11160,000 ms

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.NumberBenchmarks.generateAndLogarithmDoubleNumbers:·safepoints.pause":
  99,521 ±(99.9%) 0,001 ms [Sum]
  (min, avg, max) = (0,256, 0,939, 1,466), stdev = 0,252
  CI (99.9%): [99,521, 99,521] (assumes normal distribution)

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.NumberBenchmarks.generateAndLogarithmDoubleNumbers:·safepoints.ttsp":
  2,973 ±(99.9%) 0,001 ms [Sum]
  (min, avg, max) = (0,015, 0,028, 0,066), stdev = 0,010
  CI (99.9%): [2,973, 2,973] (assumes normal distribution)

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.NumberBenchmarks.generateAndLogarithmDoubleNumbers:·threads.alive":
  6,000 threads

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.NumberBenchmarks.generateAndLogarithmDoubleNumbers:·threads.daemon":
  5,000 threads

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.NumberBenchmarks.generateAndLogarithmDoubleNumbers:·threads.started":
  10,000 threads


# JMH version: 1.26
# VM version: JDK 1.8.0_102, Java HotSpot(TM) 64-Bit Server VM, 25.102-b14
# VM invoker: C:\Program Files\Java\jdk1.8.0_102\jre\bin\java.exe
# VM options: -DbenchmarkClasses= -DwarmUpSeconds=1 -DmeasurementIterations=1 -DnumberOfBenchmarkForks=1 -DwarmUpIterations=1 -DrunThreadCount=1 -Dfile.encoding=UTF-8
# Warmup: 1 iterations, 1 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.gocypher.cybench.jmh.jvm.client.tests.NumberBenchmarks.generateAndPowerDoubleNumbers

# Run progress: 36,35% complete, ETA 00:01:43
# Fork: 1 of 1
# Preparing profilers: SafepointsProfiler
# Profilers consume stdout from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 11673221,429 ops/s
Iteration   1: 11797494,031 ops/s
                 ·gc.alloc.rate:                   256,944 MB/sec
                 ·gc.alloc.rate.norm:              24,000 B/op
                 ·gc.churn.PS_Eden_Space:          256,204 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     23,931 B/op
                 ·gc.churn.PS_Survivor_Space:      0,024 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 0,002 B/op
                 ·gc.count:                        66,000 counts
                 ·gc.time:                         54,000 ms
                 ·rt.safepointSyncTime:            0,025 ms
                 ·rt.safepointTime:                1,205 ms
                 ·rt.safepoints:                   77,000 counts
                 ·rt.sync.contendedLockAttempts:   96,000 locks
                 ·rt.sync.fatMonitors:             128,000 monitors
                 ·rt.sync.futileWakeups:           7,000 counts
                 ·rt.sync.monitorDeflations:       57,000 monitors
                 ·rt.sync.monitorInflations:       59,000 monitors
                 ·rt.sync.notifications:           17,000 counts
                 ·rt.sync.parks:                   29,000 counts
                 ·threads.alive:                   6,000 threads
                 ·threads.daemon:                  5,000 threads
                 ·threads.started:                 10,000 threads

# Processing profiler results: SafepointsProfiler


Result "com.gocypher.cybench.jmh.jvm.client.tests.NumberBenchmarks.generateAndPowerDoubleNumbers":
  11797494,031 ops/s

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.NumberBenchmarks.generateAndPowerDoubleNumbers:·gc.alloc.rate":
  256,944 MB/sec

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.NumberBenchmarks.generateAndPowerDoubleNumbers:·gc.alloc.rate.norm":
  24,000 B/op

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.NumberBenchmarks.generateAndPowerDoubleNumbers:·gc.churn.PS_Eden_Space":
  256,204 MB/sec

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.NumberBenchmarks.generateAndPowerDoubleNumbers:·gc.churn.PS_Eden_Space.norm":
  23,931 B/op

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.NumberBenchmarks.generateAndPowerDoubleNumbers:·gc.churn.PS_Survivor_Space":
  0,024 MB/sec

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.NumberBenchmarks.generateAndPowerDoubleNumbers:·gc.churn.PS_Survivor_Space.norm":
  0,002 B/op

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.NumberBenchmarks.generateAndPowerDoubleNumbers:·gc.count":
  66,000 counts

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.NumberBenchmarks.generateAndPowerDoubleNumbers:·gc.time":
  54,000 ms

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.NumberBenchmarks.generateAndPowerDoubleNumbers:·rt.safepointSyncTime":
  0,025 ms

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.NumberBenchmarks.generateAndPowerDoubleNumbers:·rt.safepointTime":
  1,205 ms

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.NumberBenchmarks.generateAndPowerDoubleNumbers:·rt.safepoints":
  77,000 counts

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.NumberBenchmarks.generateAndPowerDoubleNumbers:·rt.sync.contendedLockAttempts":
  96,000 locks

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.NumberBenchmarks.generateAndPowerDoubleNumbers:·rt.sync.fatMonitors":
  128,000 monitors

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.NumberBenchmarks.generateAndPowerDoubleNumbers:·rt.sync.futileWakeups":
  7,000 counts

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.NumberBenchmarks.generateAndPowerDoubleNumbers:·rt.sync.monitorDeflations":
  57,000 monitors

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.NumberBenchmarks.generateAndPowerDoubleNumbers:·rt.sync.monitorInflations":
  59,000 monitors

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.NumberBenchmarks.generateAndPowerDoubleNumbers:·rt.sync.notifications":
  17,000 counts

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.NumberBenchmarks.generateAndPowerDoubleNumbers:·rt.sync.parks":
  29,000 counts

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.NumberBenchmarks.generateAndPowerDoubleNumbers:·safepoints.interval":
  11183,000 ms

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.NumberBenchmarks.generateAndPowerDoubleNumbers:·safepoints.pause":
  65,136 ±(99.9%) 0,001 ms [Sum]
  (min, avg, max) = (0,112, 0,972, 1,642), stdev = 0,301
  CI (99.9%): [65,136, 65,136] (assumes normal distribution)

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.NumberBenchmarks.generateAndPowerDoubleNumbers:·safepoints.ttsp":
  2,004 ±(99.9%) 0,001 ms [Sum]
  (min, avg, max) = (0,016, 0,030, 0,060), stdev = 0,011
  CI (99.9%): [2,004, 2,004] (assumes normal distribution)

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.NumberBenchmarks.generateAndPowerDoubleNumbers:·threads.alive":
  6,000 threads

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.NumberBenchmarks.generateAndPowerDoubleNumbers:·threads.daemon":
  5,000 threads

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.NumberBenchmarks.generateAndPowerDoubleNumbers:·threads.started":
  10,000 threads


# JMH version: 1.26
# VM version: JDK 1.8.0_102, Java HotSpot(TM) 64-Bit Server VM, 25.102-b14
# VM invoker: C:\Program Files\Java\jdk1.8.0_102\jre\bin\java.exe
# VM options: -DbenchmarkClasses= -DwarmUpSeconds=1 -DmeasurementIterations=1 -DnumberOfBenchmarkForks=1 -DwarmUpIterations=1 -DrunThreadCount=1 -Dfile.encoding=UTF-8
# Warmup: 1 iterations, 1 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.gocypher.cybench.jmh.jvm.client.tests.StringBenchmarks.findRegexCompiled

# Run progress: 45,44% complete, ETA 00:01:28
# Fork: 1 of 1
# Preparing profilers: SafepointsProfiler
# Profilers consume stdout from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 5337957,944 ops/s
Iteration   1: 5790760,160 ops/s
                 ·gc.alloc.rate:                 ≈ 10⁻³ MB/sec
                 ·gc.alloc.rate.norm:            ≈ 10⁻⁴ B/op
                 ·gc.count:                      ≈ 0 counts
                 ·rt.safepointSyncTime:          0,004 ms
                 ·rt.safepointTime:              0,418 ms
                 ·rt.safepoints:                 9,000 counts
                 ·rt.sync.contendedLockAttempts: 51,000 locks
                 ·rt.sync.fatMonitors:           128,000 monitors
                 ·rt.sync.futileWakeups:         7,000 counts
                 ·rt.sync.monitorDeflations:     52,000 monitors
                 ·rt.sync.monitorInflations:     54,000 monitors
                 ·rt.sync.notifications:         10,000 counts
                 ·rt.sync.parks:                 24,000 counts
                 ·threads.alive:                 6,000 threads
                 ·threads.daemon:                5,000 threads
                 ·threads.started:               10,000 threads

# Processing profiler results: SafepointsProfiler


Result "com.gocypher.cybench.jmh.jvm.client.tests.StringBenchmarks.findRegexCompiled":
  5790760,160 ops/s

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.StringBenchmarks.findRegexCompiled:·gc.alloc.rate":
  ≈ 10⁻³ MB/sec

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.StringBenchmarks.findRegexCompiled:·gc.alloc.rate.norm":
  ≈ 10⁻⁴ B/op

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.StringBenchmarks.findRegexCompiled:·gc.count":
  ≈ 0 counts

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.StringBenchmarks.findRegexCompiled:·rt.safepointSyncTime":
  0,004 ms

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.StringBenchmarks.findRegexCompiled:·rt.safepointTime":
  0,418 ms

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.StringBenchmarks.findRegexCompiled:·rt.safepoints":
  9,000 counts

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.StringBenchmarks.findRegexCompiled:·rt.sync.contendedLockAttempts":
  51,000 locks

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.StringBenchmarks.findRegexCompiled:·rt.sync.fatMonitors":
  128,000 monitors

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.StringBenchmarks.findRegexCompiled:·rt.sync.futileWakeups":
  7,000 counts

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.StringBenchmarks.findRegexCompiled:·rt.sync.monitorDeflations":
  52,000 monitors

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.StringBenchmarks.findRegexCompiled:·rt.sync.monitorInflations":
  54,000 monitors

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.StringBenchmarks.findRegexCompiled:·rt.sync.notifications":
  10,000 counts

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.StringBenchmarks.findRegexCompiled:·rt.sync.parks":
  24,000 counts

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.StringBenchmarks.findRegexCompiled:·safepoints.interval":
  11159,000 ms

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.StringBenchmarks.findRegexCompiled:·safepoints.pause":
  0,164 ms

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.StringBenchmarks.findRegexCompiled:·safepoints.ttsp":
  0,072 ms

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.StringBenchmarks.findRegexCompiled:·threads.alive":
  6,000 threads

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.StringBenchmarks.findRegexCompiled:·threads.daemon":
  5,000 threads

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.StringBenchmarks.findRegexCompiled:·threads.started":
  10,000 threads


# JMH version: 1.26
# VM version: JDK 1.8.0_102, Java HotSpot(TM) 64-Bit Server VM, 25.102-b14
# VM invoker: C:\Program Files\Java\jdk1.8.0_102\jre\bin\java.exe
# VM options: -DbenchmarkClasses= -DwarmUpSeconds=1 -DmeasurementIterations=1 -DnumberOfBenchmarkForks=1 -DwarmUpIterations=1 -DrunThreadCount=1 -Dfile.encoding=UTF-8
# Warmup: 1 iterations, 1 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.gocypher.cybench.jmh.jvm.client.tests.StringBenchmarks.findRegexUnCompiled

# Run progress: 54,52% complete, ETA 00:01:13
# Fork: 1 of 1
# Preparing profilers: SafepointsProfiler
# Profilers consume stdout from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 703919,079 ops/s
Iteration   1: 918375,473 ops/s
                 ·gc.alloc.rate:                   2639,620 MB/sec
                 ·gc.alloc.rate.norm:              3168,000 B/op
                 ·gc.churn.PS_Eden_Space:          2632,043 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     3158,907 B/op
                 ·gc.churn.PS_Survivor_Space:      0,101 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 0,121 B/op
                 ·gc.count:                        81,000 counts
                 ·gc.time:                         65,000 ms
                 ·rt.safepointSyncTime:            0,031 ms
                 ·rt.safepointTime:                1,407 ms
                 ·rt.safepoints:                   99,000 counts
                 ·rt.sync.contendedLockAttempts:   67,000 locks
                 ·rt.sync.fatMonitors:             128,000 monitors
                 ·rt.sync.futileWakeups:           8,000 counts
                 ·rt.sync.monitorDeflations:       57,000 monitors
                 ·rt.sync.monitorInflations:       59,000 monitors
                 ·rt.sync.notifications:           12,000 counts
                 ·rt.sync.parks:                   23,000 counts
                 ·threads.alive:                   6,000 threads
                 ·threads.daemon:                  5,000 threads
                 ·threads.started:                 10,000 threads

# Processing profiler results: SafepointsProfiler


Result "com.gocypher.cybench.jmh.jvm.client.tests.StringBenchmarks.findRegexUnCompiled":
  918375,473 ops/s

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.StringBenchmarks.findRegexUnCompiled:·gc.alloc.rate":
  2639,620 MB/sec

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.StringBenchmarks.findRegexUnCompiled:·gc.alloc.rate.norm":
  3168,000 B/op

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.StringBenchmarks.findRegexUnCompiled:·gc.churn.PS_Eden_Space":
  2632,043 MB/sec

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.StringBenchmarks.findRegexUnCompiled:·gc.churn.PS_Eden_Space.norm":
  3158,907 B/op

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.StringBenchmarks.findRegexUnCompiled:·gc.churn.PS_Survivor_Space":
  0,101 MB/sec

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.StringBenchmarks.findRegexUnCompiled:·gc.churn.PS_Survivor_Space.norm":
  0,121 B/op

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.StringBenchmarks.findRegexUnCompiled:·gc.count":
  81,000 counts

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.StringBenchmarks.findRegexUnCompiled:·gc.time":
  65,000 ms

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.StringBenchmarks.findRegexUnCompiled:·rt.safepointSyncTime":
  0,031 ms

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.StringBenchmarks.findRegexUnCompiled:·rt.safepointTime":
  1,407 ms

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.StringBenchmarks.findRegexUnCompiled:·rt.safepoints":
  99,000 counts

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.StringBenchmarks.findRegexUnCompiled:·rt.sync.contendedLockAttempts":
  67,000 locks

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.StringBenchmarks.findRegexUnCompiled:·rt.sync.fatMonitors":
  128,000 monitors

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.StringBenchmarks.findRegexUnCompiled:·rt.sync.futileWakeups":
  8,000 counts

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.StringBenchmarks.findRegexUnCompiled:·rt.sync.monitorDeflations":
  57,000 monitors

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.StringBenchmarks.findRegexUnCompiled:·rt.sync.monitorInflations":
  59,000 monitors

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.StringBenchmarks.findRegexUnCompiled:·rt.sync.notifications":
  12,000 counts

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.StringBenchmarks.findRegexUnCompiled:·rt.sync.parks":
  23,000 counts

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.StringBenchmarks.findRegexUnCompiled:·safepoints.interval":
  11187,000 ms

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.StringBenchmarks.findRegexUnCompiled:·safepoints.pause":
  78,342 ±(99.9%) 0,001 ms [Sum]
  (min, avg, max) = (0,259, 0,955, 2,228), stdev = 0,297
  CI (99.9%): [78,342, 78,342] (assumes normal distribution)

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.StringBenchmarks.findRegexUnCompiled:·safepoints.ttsp":
  2,565 ±(99.9%) 0,001 ms [Sum]
  (min, avg, max) = (0,017, 0,031, 0,085), stdev = 0,014
  CI (99.9%): [2,565, 2,565] (assumes normal distribution)

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.StringBenchmarks.findRegexUnCompiled:·threads.alive":
  6,000 threads

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.StringBenchmarks.findRegexUnCompiled:·threads.daemon":
  5,000 threads

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.StringBenchmarks.findRegexUnCompiled:·threads.started":
  10,000 threads


# JMH version: 1.26
# VM version: JDK 1.8.0_102, Java HotSpot(TM) 64-Bit Server VM, 25.102-b14
# VM invoker: C:\Program Files\Java\jdk1.8.0_102\jre\bin\java.exe
# VM options: -DbenchmarkClasses= -DwarmUpSeconds=1 -DmeasurementIterations=1 -DnumberOfBenchmarkForks=1 -DwarmUpIterations=1 -DrunThreadCount=1 -Dfile.encoding=UTF-8
# Warmup: 1 iterations, 1 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.gocypher.cybench.jmh.jvm.client.tests.StringBenchmarks.stringBufferConcatMultiChars

# Run progress: 63,61% complete, ETA 00:00:59
# Fork: 1 of 1
# Preparing profilers: SafepointsProfiler
# Profilers consume stdout from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 476198,019 ops/s
Iteration   1: 948118,511 ops/s
                 ·gc.alloc.rate:                   7218,318 MB/sec
                 ·gc.alloc.rate.norm:              8392,000 B/op
                 ·gc.churn.PS_Eden_Space:          7164,038 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     8328,895 B/op
                 ·gc.churn.PS_Survivor_Space:      0,086 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 0,100 B/op
                 ·gc.count:                        95,000 counts
                 ·gc.time:                         81,000 ms
                 ·rt.safepointSyncTime:            0,038 ms
                 ·rt.safepointTime:                1,627 ms
                 ·rt.safepoints:                   114,000 counts
                 ·rt.sync.contendedLockAttempts:   43,000 locks
                 ·rt.sync.fatMonitors:             128,000 monitors
                 ·rt.sync.futileWakeups:           9,000 counts
                 ·rt.sync.monitorDeflations:       58,000 monitors
                 ·rt.sync.monitorInflations:       60,000 monitors
                 ·rt.sync.notifications:           23,000 counts
                 ·rt.sync.parks:                   38,000 counts
                 ·threads.alive:                   6,000 threads
                 ·threads.daemon:                  5,000 threads
                 ·threads.started:                 10,000 threads

# Processing profiler results: SafepointsProfiler


Result "com.gocypher.cybench.jmh.jvm.client.tests.StringBenchmarks.stringBufferConcatMultiChars":
  948118,511 ops/s

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.StringBenchmarks.stringBufferConcatMultiChars:·gc.alloc.rate":
  7218,318 MB/sec

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.StringBenchmarks.stringBufferConcatMultiChars:·gc.alloc.rate.norm":
  8392,000 B/op

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.StringBenchmarks.stringBufferConcatMultiChars:·gc.churn.PS_Eden_Space":
  7164,038 MB/sec

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.StringBenchmarks.stringBufferConcatMultiChars:·gc.churn.PS_Eden_Space.norm":
  8328,895 B/op

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.StringBenchmarks.stringBufferConcatMultiChars:·gc.churn.PS_Survivor_Space":
  0,086 MB/sec

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.StringBenchmarks.stringBufferConcatMultiChars:·gc.churn.PS_Survivor_Space.norm":
  0,100 B/op

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.StringBenchmarks.stringBufferConcatMultiChars:·gc.count":
  95,000 counts

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.StringBenchmarks.stringBufferConcatMultiChars:·gc.time":
  81,000 ms

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.StringBenchmarks.stringBufferConcatMultiChars:·rt.safepointSyncTime":
  0,038 ms

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.StringBenchmarks.stringBufferConcatMultiChars:·rt.safepointTime":
  1,627 ms

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.StringBenchmarks.stringBufferConcatMultiChars:·rt.safepoints":
  114,000 counts

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.StringBenchmarks.stringBufferConcatMultiChars:·rt.sync.contendedLockAttempts":
  43,000 locks

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.StringBenchmarks.stringBufferConcatMultiChars:·rt.sync.fatMonitors":
  128,000 monitors

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.StringBenchmarks.stringBufferConcatMultiChars:·rt.sync.futileWakeups":
  9,000 counts

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.StringBenchmarks.stringBufferConcatMultiChars:·rt.sync.monitorDeflations":
  58,000 monitors

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.StringBenchmarks.stringBufferConcatMultiChars:·rt.sync.monitorInflations":
  60,000 monitors

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.StringBenchmarks.stringBufferConcatMultiChars:·rt.sync.notifications":
  23,000 counts

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.StringBenchmarks.stringBufferConcatMultiChars:·rt.sync.parks":
  38,000 counts

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.StringBenchmarks.stringBufferConcatMultiChars:·safepoints.interval":
  11185,000 ms

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.StringBenchmarks.stringBufferConcatMultiChars:·safepoints.pause":
  98,341 ±(99.9%) 0,001 ms [Sum]
  (min, avg, max) = (0,355, 1,024, 1,561), stdev = 0,259
  CI (99.9%): [98,341, 98,341] (assumes normal distribution)

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.StringBenchmarks.stringBufferConcatMultiChars:·safepoints.ttsp":
  3,077 ±(99.9%) 0,001 ms [Sum]
  (min, avg, max) = (0,018, 0,032, 0,084), stdev = 0,012
  CI (99.9%): [3,077, 3,077] (assumes normal distribution)

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.StringBenchmarks.stringBufferConcatMultiChars:·threads.alive":
  6,000 threads

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.StringBenchmarks.stringBufferConcatMultiChars:·threads.daemon":
  5,000 threads

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.StringBenchmarks.stringBufferConcatMultiChars:·threads.started":
  10,000 threads


# JMH version: 1.26
# VM version: JDK 1.8.0_102, Java HotSpot(TM) 64-Bit Server VM, 25.102-b14
# VM invoker: C:\Program Files\Java\jdk1.8.0_102\jre\bin\java.exe
# VM options: -DbenchmarkClasses= -DwarmUpSeconds=1 -DmeasurementIterations=1 -DnumberOfBenchmarkForks=1 -DwarmUpIterations=1 -DrunThreadCount=1 -Dfile.encoding=UTF-8
# Warmup: 1 iterations, 1 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.gocypher.cybench.jmh.jvm.client.tests.StringBenchmarks.stringBufferReplaceAll

# Run progress: 72,70% complete, ETA 00:00:44
# Fork: 1 of 1
# Preparing profilers: SafepointsProfiler
# Profilers consume stdout from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 176319,597 ops/s
Iteration   1: 201948,507 ops/s
                 ·gc.alloc.rate:                   1088,201 MB/sec
                 ·gc.alloc.rate.norm:              5939,155 B/op
                 ·gc.churn.PS_Eden_Space:          1082,268 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     5906,773 B/op
                 ·gc.churn.PS_Survivor_Space:      0,048 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 0,260 B/op
                 ·gc.count:                        94,000 counts
                 ·gc.time:                         78,000 ms
                 ·rt.safepointSyncTime:            0,033 ms
                 ·rt.safepointTime:                1,687 ms
                 ·rt.safepoints:                   109,000 counts
                 ·rt.sync.contendedLockAttempts:   47,000 locks
                 ·rt.sync.fatMonitors:             128,000 monitors
                 ·rt.sync.futileWakeups:           1,000 counts
                 ·rt.sync.monitorDeflations:       57,000 monitors
                 ·rt.sync.monitorInflations:       59,000 monitors
                 ·rt.sync.notifications:           19,000 counts
                 ·rt.sync.parks:                   25,000 counts
                 ·threads.alive:                   6,000 threads
                 ·threads.daemon:                  5,000 threads
                 ·threads.started:                 10,000 threads

# Processing profiler results: SafepointsProfiler


Result "com.gocypher.cybench.jmh.jvm.client.tests.StringBenchmarks.stringBufferReplaceAll":
  201948,507 ops/s

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.StringBenchmarks.stringBufferReplaceAll:·gc.alloc.rate":
  1088,201 MB/sec

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.StringBenchmarks.stringBufferReplaceAll:·gc.alloc.rate.norm":
  5939,155 B/op

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.StringBenchmarks.stringBufferReplaceAll:·gc.churn.PS_Eden_Space":
  1082,268 MB/sec

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.StringBenchmarks.stringBufferReplaceAll:·gc.churn.PS_Eden_Space.norm":
  5906,773 B/op

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.StringBenchmarks.stringBufferReplaceAll:·gc.churn.PS_Survivor_Space":
  0,048 MB/sec

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.StringBenchmarks.stringBufferReplaceAll:·gc.churn.PS_Survivor_Space.norm":
  0,260 B/op

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.StringBenchmarks.stringBufferReplaceAll:·gc.count":
  94,000 counts

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.StringBenchmarks.stringBufferReplaceAll:·gc.time":
  78,000 ms

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.StringBenchmarks.stringBufferReplaceAll:·rt.safepointSyncTime":
  0,033 ms

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.StringBenchmarks.stringBufferReplaceAll:·rt.safepointTime":
  1,687 ms

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.StringBenchmarks.stringBufferReplaceAll:·rt.safepoints":
  109,000 counts

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.StringBenchmarks.stringBufferReplaceAll:·rt.sync.contendedLockAttempts":
  47,000 locks

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.StringBenchmarks.stringBufferReplaceAll:·rt.sync.fatMonitors":
  128,000 monitors

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.StringBenchmarks.stringBufferReplaceAll:·rt.sync.futileWakeups":
  1,000 counts

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.StringBenchmarks.stringBufferReplaceAll:·rt.sync.monitorDeflations":
  57,000 monitors

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.StringBenchmarks.stringBufferReplaceAll:·rt.sync.monitorInflations":
  59,000 monitors

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.StringBenchmarks.stringBufferReplaceAll:·rt.sync.notifications":
  19,000 counts

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.StringBenchmarks.stringBufferReplaceAll:·rt.sync.parks":
  25,000 counts

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.StringBenchmarks.stringBufferReplaceAll:·safepoints.interval":
  11173,000 ms

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.StringBenchmarks.stringBufferReplaceAll:·safepoints.pause":
  137,296 ±(99.9%) 0,001 ms [Sum]
  (min, avg, max) = (0,262, 1,415, 35,389), stdev = 3,552
  CI (99.9%): [137,296, 137,296] (assumes normal distribution)

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.StringBenchmarks.stringBufferReplaceAll:·safepoints.ttsp":
  3,004 ±(99.9%) 0,001 ms [Sum]
  (min, avg, max) = (0,018, 0,031, 0,120), stdev = 0,015
  CI (99.9%): [3,004, 3,004] (assumes normal distribution)

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.StringBenchmarks.stringBufferReplaceAll:·threads.alive":
  6,000 threads

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.StringBenchmarks.stringBufferReplaceAll:·threads.daemon":
  5,000 threads

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.StringBenchmarks.stringBufferReplaceAll:·threads.started":
  10,000 threads


# JMH version: 1.26
# VM version: JDK 1.8.0_102, Java HotSpot(TM) 64-Bit Server VM, 25.102-b14
# VM invoker: C:\Program Files\Java\jdk1.8.0_102\jre\bin\java.exe
# VM options: -DbenchmarkClasses= -DwarmUpSeconds=1 -DmeasurementIterations=1 -DnumberOfBenchmarkForks=1 -DwarmUpIterations=1 -DrunThreadCount=1 -Dfile.encoding=UTF-8
# Warmup: 1 iterations, 1 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.gocypher.cybench.jmh.jvm.client.tests.StringBenchmarks.stringConcatMultiChars

# Run progress: 81,78% complete, ETA 00:00:29
# Fork: 1 of 1
# Preparing profilers: SafepointsProfiler
# Profilers consume stdout from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 510150,402 ops/s
Iteration   1: 1453678,964 ops/s
                 ·gc.alloc.rate:                   9673,792 MB/sec
                 ·gc.alloc.rate.norm:              7332,666 B/op
                 ·gc.churn.PS_Eden_Space:          9624,103 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     7295,002 B/op
                 ·gc.churn.PS_Survivor_Space:      0,113 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 0,086 B/op
                 ·gc.count:                        102,000 counts
                 ·gc.time:                         87,000 ms
                 ·rt.safepointSyncTime:            0,039 ms
                 ·rt.safepointTime:                1,742 ms
                 ·rt.safepoints:                   122,000 counts
                 ·rt.sync.contendedLockAttempts:   60,000 locks
                 ·rt.sync.fatMonitors:             128,000 monitors
                 ·rt.sync.futileWakeups:           7,000 counts
                 ·rt.sync.monitorDeflations:       57,000 monitors
                 ·rt.sync.monitorInflations:       59,000 monitors
                 ·rt.sync.notifications:           26,000 counts
                 ·rt.sync.parks:                   39,000 counts
                 ·threads.alive:                   6,000 threads
                 ·threads.daemon:                  5,000 threads
                 ·threads.started:                 10,000 threads

# Processing profiler results: SafepointsProfiler


Result "com.gocypher.cybench.jmh.jvm.client.tests.StringBenchmarks.stringConcatMultiChars":
  1453678,964 ops/s

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.StringBenchmarks.stringConcatMultiChars:·gc.alloc.rate":
  9673,792 MB/sec

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.StringBenchmarks.stringConcatMultiChars:·gc.alloc.rate.norm":
  7332,666 B/op

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.StringBenchmarks.stringConcatMultiChars:·gc.churn.PS_Eden_Space":
  9624,103 MB/sec

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.StringBenchmarks.stringConcatMultiChars:·gc.churn.PS_Eden_Space.norm":
  7295,002 B/op

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.StringBenchmarks.stringConcatMultiChars:·gc.churn.PS_Survivor_Space":
  0,113 MB/sec

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.StringBenchmarks.stringConcatMultiChars:·gc.churn.PS_Survivor_Space.norm":
  0,086 B/op

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.StringBenchmarks.stringConcatMultiChars:·gc.count":
  102,000 counts

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.StringBenchmarks.stringConcatMultiChars:·gc.time":
  87,000 ms

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.StringBenchmarks.stringConcatMultiChars:·rt.safepointSyncTime":
  0,039 ms

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.StringBenchmarks.stringConcatMultiChars:·rt.safepointTime":
  1,742 ms

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.StringBenchmarks.stringConcatMultiChars:·rt.safepoints":
  122,000 counts

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.StringBenchmarks.stringConcatMultiChars:·rt.sync.contendedLockAttempts":
  60,000 locks

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.StringBenchmarks.stringConcatMultiChars:·rt.sync.fatMonitors":
  128,000 monitors

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.StringBenchmarks.stringConcatMultiChars:·rt.sync.futileWakeups":
  7,000 counts

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.StringBenchmarks.stringConcatMultiChars:·rt.sync.monitorDeflations":
  57,000 monitors

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.StringBenchmarks.stringConcatMultiChars:·rt.sync.monitorInflations":
  59,000 monitors

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.StringBenchmarks.stringConcatMultiChars:·rt.sync.notifications":
  26,000 counts

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.StringBenchmarks.stringConcatMultiChars:·rt.sync.parks":
  39,000 counts

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.StringBenchmarks.stringConcatMultiChars:·safepoints.interval":
  11169,000 ms

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.StringBenchmarks.stringConcatMultiChars:·safepoints.pause":
  103,726 ±(99.9%) 0,001 ms [Sum]
  (min, avg, max) = (0,131, 1,007, 1,456), stdev = 0,245
  CI (99.9%): [103,726, 103,726] (assumes normal distribution)

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.StringBenchmarks.stringConcatMultiChars:·safepoints.ttsp":
  3,279 ±(99.9%) 0,001 ms [Sum]
  (min, avg, max) = (0,017, 0,032, 0,071), stdev = 0,013
  CI (99.9%): [3,279, 3,279] (assumes normal distribution)

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.StringBenchmarks.stringConcatMultiChars:·threads.alive":
  6,000 threads

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.StringBenchmarks.stringConcatMultiChars:·threads.daemon":
  5,000 threads

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.StringBenchmarks.stringConcatMultiChars:·threads.started":
  10,000 threads


# JMH version: 1.26
# VM version: JDK 1.8.0_102, Java HotSpot(TM) 64-Bit Server VM, 25.102-b14
# VM invoker: C:\Program Files\Java\jdk1.8.0_102\jre\bin\java.exe
# VM options: -DbenchmarkClasses= -DwarmUpSeconds=1 -DmeasurementIterations=1 -DnumberOfBenchmarkForks=1 -DwarmUpIterations=1 -DrunThreadCount=1 -Dfile.encoding=UTF-8
# Warmup: 1 iterations, 1 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Throughput, ops/time
# Benchmark: com.gocypher.cybench.jmh.jvm.client.tests.StringBenchmarks.stringReplaceAll

# Run progress: 90,87% complete, ETA 00:00:14
# Fork: 1 of 1
# Preparing profilers: SafepointsProfiler
# Profilers consume stdout from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: 51657,484 ops/s
Iteration   1: 69265,528 ops/s
                 ·gc.alloc.rate:                   3476,226 MB/sec
                 ·gc.alloc.rate.norm:              55312,006 B/op
                 ·gc.churn.PS_Eden_Space:          3470,819 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     55225,968 B/op
                 ·gc.churn.PS_Survivor_Space:      0,110 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 1,750 B/op
                 ·gc.count:                        98,000 counts
                 ·gc.time:                         78,000 ms
                 ·rt.safepointSyncTime:            0,038 ms
                 ·rt.safepointTime:                1,635 ms
                 ·rt.safepoints:                   115,000 counts
                 ·rt.sync.contendedLockAttempts:   27,000 locks
                 ·rt.sync.fatMonitors:             128,000 monitors
                 ·rt.sync.futileWakeups:           2,000 counts
                 ·rt.sync.monitorDeflations:       57,000 monitors
                 ·rt.sync.monitorInflations:       59,000 monitors
                 ·rt.sync.notifications:           23,000 counts
                 ·rt.sync.parks:                   27,000 counts
                 ·threads.alive:                   6,000 threads
                 ·threads.daemon:                  5,000 threads
                 ·threads.started:                 10,000 threads

# Processing profiler results: SafepointsProfiler


Result "com.gocypher.cybench.jmh.jvm.client.tests.StringBenchmarks.stringReplaceAll":
  69265,528 ops/s

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.StringBenchmarks.stringReplaceAll:·gc.alloc.rate":
  3476,226 MB/sec

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.StringBenchmarks.stringReplaceAll:·gc.alloc.rate.norm":
  55312,006 B/op

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.StringBenchmarks.stringReplaceAll:·gc.churn.PS_Eden_Space":
  3470,819 MB/sec

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.StringBenchmarks.stringReplaceAll:·gc.churn.PS_Eden_Space.norm":
  55225,968 B/op

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.StringBenchmarks.stringReplaceAll:·gc.churn.PS_Survivor_Space":
  0,110 MB/sec

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.StringBenchmarks.stringReplaceAll:·gc.churn.PS_Survivor_Space.norm":
  1,750 B/op

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.StringBenchmarks.stringReplaceAll:·gc.count":
  98,000 counts

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.StringBenchmarks.stringReplaceAll:·gc.time":
  78,000 ms

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.StringBenchmarks.stringReplaceAll:·rt.safepointSyncTime":
  0,038 ms

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.StringBenchmarks.stringReplaceAll:·rt.safepointTime":
  1,635 ms

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.StringBenchmarks.stringReplaceAll:·rt.safepoints":
  115,000 counts

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.StringBenchmarks.stringReplaceAll:·rt.sync.contendedLockAttempts":
  27,000 locks

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.StringBenchmarks.stringReplaceAll:·rt.sync.fatMonitors":
  128,000 monitors

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.StringBenchmarks.stringReplaceAll:·rt.sync.futileWakeups":
  2,000 counts

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.StringBenchmarks.stringReplaceAll:·rt.sync.monitorDeflations":
  57,000 monitors

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.StringBenchmarks.stringReplaceAll:·rt.sync.monitorInflations":
  59,000 monitors

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.StringBenchmarks.stringReplaceAll:·rt.sync.notifications":
  23,000 counts

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.StringBenchmarks.stringReplaceAll:·rt.sync.parks":
  27,000 counts

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.StringBenchmarks.stringReplaceAll:·safepoints.interval":
  11166,000 ms

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.StringBenchmarks.stringReplaceAll:·safepoints.pause":
  101,733 ±(99.9%) 0,001 ms [Sum]
  (min, avg, max) = (0,290, 1,017, 7,135), stdev = 0,680
  CI (99.9%): [101,733, 101,733] (assumes normal distribution)

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.StringBenchmarks.stringReplaceAll:·safepoints.ttsp":
  3,230 ±(99.9%) 0,001 ms [Sum]
  (min, avg, max) = (0,017, 0,032, 0,089), stdev = 0,012
  CI (99.9%): [3,230, 3,230] (assumes normal distribution)

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.StringBenchmarks.stringReplaceAll:·threads.alive":
  6,000 threads

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.StringBenchmarks.stringReplaceAll:·threads.daemon":
  5,000 threads

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.StringBenchmarks.stringReplaceAll:·threads.started":
  10,000 threads


# JMH version: 1.26
# VM version: JDK 1.8.0_102, Java HotSpot(TM) 64-Bit Server VM, 25.102-b14
# VM invoker: C:\Program Files\Java\jdk1.8.0_102\jre\bin\java.exe
# VM options: -DbenchmarkClasses= -DwarmUpSeconds=1 -DmeasurementIterations=1 -DnumberOfBenchmarkForks=1 -DwarmUpIterations=1 -DrunThreadCount=1 -Dfile.encoding=UTF-8
# Warmup: 1 iterations, 1 s each
# Measurement: 1 iterations, single-shot each
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncAPIComparisonBenchmarks.copyFileUsingBufferedStreamAndHugeChunks

# Run progress: 99,96% complete, ETA 00:00:00
# Fork: 1 of 1
# Preparing profilers: SafepointsProfiler
# Profilers consume stdout from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/C:/Users/slabs/.m2/repository/org/slf4j/slf4j-log4j12/1.7.30/slf4j-log4j12-1.7.30.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/C:/workspace/CyBench-Intellij/build/idea-sandbox/plugins/CyBench-Intellij/lib/slf4j-log4j12-1.7.30.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
2020-11-05 09:55:39,455 INFO  [com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncAPIComparisonBenchmarks.copyFileUsingBufferedStreamAndHugeChunks-jmh-worker-1!IOAsyncAPIComparisonBenchmarks] -
-->Will generate binary file for tests...
2020-11-05 09:55:56,182 INFO  [com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncAPIComparisonBenchmarks.copyFileUsingBufferedStreamAndHugeChunks-jmh-worker-1!IOAsyncAPIComparisonBenchmarks] -
-->Generated file binary.bin for processing, size(B):1073741824
2020-11-05 09:55:56,185 INFO  [com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncAPIComparisonBenchmarks.copyFileUsingBufferedStreamAndHugeChunks-jmh-worker-1!IOAsyncAPIComparisonBenchmarks] -
 Will setup for iteration...
2020-11-05 09:56:00,158 INFO  [com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncAPIComparisonBenchmarks.copyFileUsingBufferedStreamAndHugeChunks-jmh-worker-1!IOAsyncAPIComparisonBenchmarks] -
==>Iteration clean up successful!
3899,412 ms/op
Iteration   1: 2020-11-05 09:56:01,328 INFO  [com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncAPIComparisonBenchmarks.copyFileUsingBufferedStreamAndHugeChunks-jmh-worker-1!IOAsyncAPIComparisonBenchmarks] -
 Will setup for iteration...
2020-11-05 09:56:04,951 INFO  [com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncAPIComparisonBenchmarks.copyFileUsingBufferedStreamAndHugeChunks-jmh-worker-1!IOAsyncAPIComparisonBenchmarks] -
==>Iteration clean up successful!
2020-11-05 09:56:04,952 INFO  [com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncAPIComparisonBenchmarks.copyFileUsingBufferedStreamAndHugeChunks-jmh-worker-1!IOAsyncAPIComparisonBenchmarks] -
==>Generated files were closed successfully!
3547,143 ms/op
                 ·gc.alloc.rate:                 15,468 MB/sec
                 ·gc.alloc.rate.norm:            67155344,000 B/op
                 ·gc.count:                      ≈ 0 counts
                 ·rt.safepointSyncTime:          0,025 ms
                 ·rt.safepointTime:              1,378 ms
                 ·rt.safepoints:                 88,000 counts
                 ·rt.sync.contendedLockAttempts: 52,000 locks
                 ·rt.sync.fatMonitors:           128,000 monitors
                 ·rt.sync.futileWakeups:         5,000 counts
                 ·rt.sync.monitorDeflations:     60,000 monitors
                 ·rt.sync.monitorInflations:     62,000 monitors
                 ·rt.sync.notifications:         12,000 counts
                 ·rt.sync.parks:                 22,000 counts
                 ·threads.alive:                 6,000 threads
                 ·threads.daemon:                5,000 threads
                 ·threads.started:               10,000 threads

# Processing profiler results: SafepointsProfiler


Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncAPIComparisonBenchmarks.copyFileUsingBufferedStreamAndHugeChunks:·gc.alloc.rate":
  15,468 MB/sec

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncAPIComparisonBenchmarks.copyFileUsingBufferedStreamAndHugeChunks:·gc.alloc.rate.norm":
  67155344,000 B/op

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncAPIComparisonBenchmarks.copyFileUsingBufferedStreamAndHugeChunks:·gc.count":
  ≈ 0 counts

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncAPIComparisonBenchmarks.copyFileUsingBufferedStreamAndHugeChunks:·rt.safepointSyncTime":
  0,025 ms

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncAPIComparisonBenchmarks.copyFileUsingBufferedStreamAndHugeChunks:·rt.safepointTime":
  1,378 ms

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncAPIComparisonBenchmarks.copyFileUsingBufferedStreamAndHugeChunks:·rt.safepoints":
  88,000 counts

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncAPIComparisonBenchmarks.copyFileUsingBufferedStreamAndHugeChunks:·rt.sync.contendedLockAttempts":
  52,000 locks

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncAPIComparisonBenchmarks.copyFileUsingBufferedStreamAndHugeChunks:·rt.sync.fatMonitors":
  128,000 monitors

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncAPIComparisonBenchmarks.copyFileUsingBufferedStreamAndHugeChunks:·rt.sync.futileWakeups":
  5,000 counts

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncAPIComparisonBenchmarks.copyFileUsingBufferedStreamAndHugeChunks:·rt.sync.monitorDeflations":
  60,000 monitors

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncAPIComparisonBenchmarks.copyFileUsingBufferedStreamAndHugeChunks:·rt.sync.monitorInflations":
  62,000 monitors

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncAPIComparisonBenchmarks.copyFileUsingBufferedStreamAndHugeChunks:·rt.sync.notifications":
  12,000 counts

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncAPIComparisonBenchmarks.copyFileUsingBufferedStreamAndHugeChunks:·rt.sync.parks":
  22,000 counts

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncAPIComparisonBenchmarks.copyFileUsingBufferedStreamAndHugeChunks:·safepoints.interval":
  4787,000 ms

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncAPIComparisonBenchmarks.copyFileUsingBufferedStreamAndHugeChunks:·safepoints.pause":
  11,571 ±(99.9%) 0,001 ms [Sum]
  (min, avg, max) = (0,064, 3,857, 11,420), stdev = 6,549
  CI (99.9%): [11,571, 11,571] (assumes normal distribution)

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncAPIComparisonBenchmarks.copyFileUsingBufferedStreamAndHugeChunks:·safepoints.ttsp":
  0,067 ±(99.9%) 0,001 ms [Sum]
  (min, avg, max) = (0,013, 0,022, 0,034), stdev = 0,011
  CI (99.9%): [0,067, 0,067] (assumes normal distribution)

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncAPIComparisonBenchmarks.copyFileUsingBufferedStreamAndHugeChunks:·threads.alive":
  6,000 threads

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncAPIComparisonBenchmarks.copyFileUsingBufferedStreamAndHugeChunks:·threads.daemon":
  5,000 threads

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncAPIComparisonBenchmarks.copyFileUsingBufferedStreamAndHugeChunks:·threads.started":
  10,000 threads


# JMH version: 1.26
# VM version: JDK 1.8.0_102, Java HotSpot(TM) 64-Bit Server VM, 25.102-b14
# VM invoker: C:\Program Files\Java\jdk1.8.0_102\jre\bin\java.exe
# VM options: -DbenchmarkClasses= -DwarmUpSeconds=1 -DmeasurementIterations=1 -DnumberOfBenchmarkForks=1 -DwarmUpIterations=1 -DrunThreadCount=1 -Dfile.encoding=UTF-8
# Warmup: 1 iterations, 1 s each
# Measurement: 1 iterations, single-shot each
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncAPIComparisonBenchmarks.copyFileUsingBufferedStreamAndSmallChunks

# Run progress: 99,96% complete, ETA 00:00:00
# Fork: 1 of 1
# Preparing profilers: SafepointsProfiler
# Profilers consume stdout from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/C:/Users/slabs/.m2/repository/org/slf4j/slf4j-log4j12/1.7.30/slf4j-log4j12-1.7.30.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/C:/workspace/CyBench-Intellij/build/idea-sandbox/plugins/CyBench-Intellij/lib/slf4j-log4j12-1.7.30.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
2020-11-05 09:56:07,699 INFO  [com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncAPIComparisonBenchmarks.copyFileUsingBufferedStreamAndSmallChunks-jmh-worker-1!IOAsyncAPIComparisonBenchmarks] -
-->Will generate binary file for tests...
2020-11-05 09:56:07,701 INFO  [com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncAPIComparisonBenchmarks.copyFileUsingBufferedStreamAndSmallChunks-jmh-worker-1!IOUtils] - Data file for tests exists, a new one will not be created
2020-11-05 09:56:07,703 INFO  [com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncAPIComparisonBenchmarks.copyFileUsingBufferedStreamAndSmallChunks-jmh-worker-1!IOAsyncAPIComparisonBenchmarks] -
-->Generated file binary.bin for processing, size(B):1073741824
2020-11-05 09:56:07,710 INFO  [com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncAPIComparisonBenchmarks.copyFileUsingBufferedStreamAndSmallChunks-jmh-worker-1!IOAsyncAPIComparisonBenchmarks] -
 Will setup for iteration...
2020-11-05 09:56:11,129 INFO  [com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncAPIComparisonBenchmarks.copyFileUsingBufferedStreamAndSmallChunks-jmh-worker-1!IOAsyncAPIComparisonBenchmarks] -
==>Iteration clean up successful!
2557,431 ms/op
Iteration   1: 2020-11-05 09:56:12,311 INFO  [com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncAPIComparisonBenchmarks.copyFileUsingBufferedStreamAndSmallChunks-jmh-worker-1!IOAsyncAPIComparisonBenchmarks] -
 Will setup for iteration...
2020-11-05 09:56:16,029 INFO  [com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncAPIComparisonBenchmarks.copyFileUsingBufferedStreamAndSmallChunks-jmh-worker-1!IOAsyncAPIComparisonBenchmarks] -
==>Iteration clean up successful!
2020-11-05 09:56:16,030 INFO  [com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncAPIComparisonBenchmarks.copyFileUsingBufferedStreamAndSmallChunks-jmh-worker-1!IOAsyncAPIComparisonBenchmarks] -
==>Generated files were closed successfully!
2766,384 ms/op
                 ·gc.alloc.rate:                 0,010 MB/sec
                 ·gc.alloc.rate.norm:            44512,000 B/op
                 ·gc.count:                      ≈ 0 counts
                 ·rt.safepointSyncTime:          0,006 ms
                 ·rt.safepointTime:              0,580 ms
                 ·rt.safepoints:                 13,000 counts
                 ·rt.sync.contendedLockAttempts: 44,000 locks
                 ·rt.sync.fatMonitors:           128,000 monitors
                 ·rt.sync.futileWakeups:         3,000 counts
                 ·rt.sync.monitorDeflations:     55,000 monitors
                 ·rt.sync.monitorInflations:     57,000 monitors
                 ·rt.sync.notifications:         11,000 counts
                 ·rt.sync.parks:                 18,000 counts
                 ·threads.alive:                 6,000 threads
                 ·threads.daemon:                5,000 threads
                 ·threads.started:               10,000 threads

# Processing profiler results: SafepointsProfiler


Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncAPIComparisonBenchmarks.copyFileUsingBufferedStreamAndSmallChunks:·gc.alloc.rate":
  0,010 MB/sec

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncAPIComparisonBenchmarks.copyFileUsingBufferedStreamAndSmallChunks:·gc.alloc.rate.norm":
  44512,000 B/op

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncAPIComparisonBenchmarks.copyFileUsingBufferedStreamAndSmallChunks:·gc.count":
  ≈ 0 counts

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncAPIComparisonBenchmarks.copyFileUsingBufferedStreamAndSmallChunks:·rt.safepointSyncTime":
  0,006 ms

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncAPIComparisonBenchmarks.copyFileUsingBufferedStreamAndSmallChunks:·rt.safepointTime":
  0,580 ms

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncAPIComparisonBenchmarks.copyFileUsingBufferedStreamAndSmallChunks:·rt.safepoints":
  13,000 counts

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncAPIComparisonBenchmarks.copyFileUsingBufferedStreamAndSmallChunks:·rt.sync.contendedLockAttempts":
  44,000 locks

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncAPIComparisonBenchmarks.copyFileUsingBufferedStreamAndSmallChunks:·rt.sync.fatMonitors":
  128,000 monitors

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncAPIComparisonBenchmarks.copyFileUsingBufferedStreamAndSmallChunks:·rt.sync.futileWakeups":
  3,000 counts

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncAPIComparisonBenchmarks.copyFileUsingBufferedStreamAndSmallChunks:·rt.sync.monitorDeflations":
  55,000 monitors

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncAPIComparisonBenchmarks.copyFileUsingBufferedStreamAndSmallChunks:·rt.sync.monitorInflations":
  57,000 monitors

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncAPIComparisonBenchmarks.copyFileUsingBufferedStreamAndSmallChunks:·rt.sync.notifications":
  11,000 counts

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncAPIComparisonBenchmarks.copyFileUsingBufferedStreamAndSmallChunks:·rt.sync.parks":
  18,000 counts

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncAPIComparisonBenchmarks.copyFileUsingBufferedStreamAndSmallChunks:·safepoints.interval":
  4890,000 ms

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncAPIComparisonBenchmarks.copyFileUsingBufferedStreamAndSmallChunks:·safepoints.pause":
  0,415 ±(99.9%) 0,001 ms [Sum]
  (min, avg, max) = (0,091, 0,138, 0,190), stdev = 0,050
  CI (99.9%): [0,415, 0,415] (assumes normal distribution)

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncAPIComparisonBenchmarks.copyFileUsingBufferedStreamAndSmallChunks:·safepoints.ttsp":
  0,276 ±(99.9%) 0,001 ms [Sum]
  (min, avg, max) = (0,048, 0,092, 0,137), stdev = 0,045
  CI (99.9%): [0,276, 0,276] (assumes normal distribution)

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncAPIComparisonBenchmarks.copyFileUsingBufferedStreamAndSmallChunks:·threads.alive":
  6,000 threads

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncAPIComparisonBenchmarks.copyFileUsingBufferedStreamAndSmallChunks:·threads.daemon":
  5,000 threads

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncAPIComparisonBenchmarks.copyFileUsingBufferedStreamAndSmallChunks:·threads.started":
  10,000 threads


# JMH version: 1.26
# VM version: JDK 1.8.0_102, Java HotSpot(TM) 64-Bit Server VM, 25.102-b14
# VM invoker: C:\Program Files\Java\jdk1.8.0_102\jre\bin\java.exe
# VM options: -DbenchmarkClasses= -DwarmUpSeconds=1 -DmeasurementIterations=1 -DnumberOfBenchmarkForks=1 -DwarmUpIterations=1 -DrunThreadCount=1 -Dfile.encoding=UTF-8
# Warmup: 1 iterations, 1 s each
# Measurement: 1 iterations, single-shot each
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncAPIComparisonBenchmarks.copyFileUsingDirectBufferedStreamAndHugeChunks

# Run progress: 99,96% complete, ETA 00:00:00
# Fork: 1 of 1
# Preparing profilers: SafepointsProfiler
# Profilers consume stdout from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/C:/Users/slabs/.m2/repository/org/slf4j/slf4j-log4j12/1.7.30/slf4j-log4j12-1.7.30.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/C:/workspace/CyBench-Intellij/build/idea-sandbox/plugins/CyBench-Intellij/lib/slf4j-log4j12-1.7.30.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
2020-11-05 09:56:18,719 INFO  [com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncAPIComparisonBenchmarks.copyFileUsingDirectBufferedStreamAndHugeChunks-jmh-worker-1!IOAsyncAPIComparisonBenchmarks] -
-->Will generate binary file for tests...
2020-11-05 09:56:18,722 INFO  [com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncAPIComparisonBenchmarks.copyFileUsingDirectBufferedStreamAndHugeChunks-jmh-worker-1!IOUtils] - Data file for tests exists, a new one will not be created
2020-11-05 09:56:18,724 INFO  [com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncAPIComparisonBenchmarks.copyFileUsingDirectBufferedStreamAndHugeChunks-jmh-worker-1!IOAsyncAPIComparisonBenchmarks] -
-->Generated file binary.bin for processing, size(B):1073741824
2020-11-05 09:56:18,731 INFO  [com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncAPIComparisonBenchmarks.copyFileUsingDirectBufferedStreamAndHugeChunks-jmh-worker-1!IOAsyncAPIComparisonBenchmarks] -
 Will setup for iteration...
2020-11-05 09:56:23,120 INFO  [com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncAPIComparisonBenchmarks.copyFileUsingDirectBufferedStreamAndHugeChunks-jmh-worker-1!IOAsyncAPIComparisonBenchmarks] -
==>Iteration clean up successful!
4313,202 ms/op
Iteration   1: 2020-11-05 09:56:24,318 INFO  [com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncAPIComparisonBenchmarks.copyFileUsingDirectBufferedStreamAndHugeChunks-jmh-worker-1!IOAsyncAPIComparisonBenchmarks] -
 Will setup for iteration...
2020-11-05 09:56:29,216 INFO  [com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncAPIComparisonBenchmarks.copyFileUsingDirectBufferedStreamAndHugeChunks-jmh-worker-1!IOAsyncAPIComparisonBenchmarks] -
==>Iteration clean up successful!
2020-11-05 09:56:29,216 INFO  [com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncAPIComparisonBenchmarks.copyFileUsingDirectBufferedStreamAndHugeChunks-jmh-worker-1!IOAsyncAPIComparisonBenchmarks] -
==>Generated files were closed successfully!
4823,277 ms/op
                 ·gc.alloc.rate:                 59,183 MB/sec
                 ·gc.alloc.rate.norm:            335574152,000 B/op
                 ·gc.count:                      ≈ 0 counts
                 ·rt.safepointSyncTime:          0,003 ms
                 ·rt.safepointTime:              0,708 ms
                 ·rt.safepoints:                 11,000 counts
                 ·rt.sync.contendedLockAttempts: 31,000 locks
                 ·rt.sync.fatMonitors:           128,000 monitors
                 ·rt.sync.futileWakeups:         1,000 counts
                 ·rt.sync.monitorDeflations:     53,000 monitors
                 ·rt.sync.monitorInflations:     55,000 monitors
                 ·rt.sync.notifications:         10,000 counts
                 ·rt.sync.parks:                 13,000 counts
                 ·threads.alive:                 6,000 threads
                 ·threads.daemon:                5,000 threads
                 ·threads.started:               10,000 threads

# Processing profiler results: SafepointsProfiler


Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncAPIComparisonBenchmarks.copyFileUsingDirectBufferedStreamAndHugeChunks:·gc.alloc.rate":
  59,183 MB/sec

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncAPIComparisonBenchmarks.copyFileUsingDirectBufferedStreamAndHugeChunks:·gc.alloc.rate.norm":
  335574152,000 B/op

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncAPIComparisonBenchmarks.copyFileUsingDirectBufferedStreamAndHugeChunks:·gc.count":
  ≈ 0 counts

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncAPIComparisonBenchmarks.copyFileUsingDirectBufferedStreamAndHugeChunks:·rt.safepointSyncTime":
  0,003 ms

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncAPIComparisonBenchmarks.copyFileUsingDirectBufferedStreamAndHugeChunks:·rt.safepointTime":
  0,708 ms

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncAPIComparisonBenchmarks.copyFileUsingDirectBufferedStreamAndHugeChunks:·rt.safepoints":
  11,000 counts

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncAPIComparisonBenchmarks.copyFileUsingDirectBufferedStreamAndHugeChunks:·rt.sync.contendedLockAttempts":
  31,000 locks

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncAPIComparisonBenchmarks.copyFileUsingDirectBufferedStreamAndHugeChunks:·rt.sync.fatMonitors":
  128,000 monitors

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncAPIComparisonBenchmarks.copyFileUsingDirectBufferedStreamAndHugeChunks:·rt.sync.futileWakeups":
  1,000 counts

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncAPIComparisonBenchmarks.copyFileUsingDirectBufferedStreamAndHugeChunks:·rt.sync.monitorDeflations":
  53,000 monitors

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncAPIComparisonBenchmarks.copyFileUsingDirectBufferedStreamAndHugeChunks:·rt.sync.monitorInflations":
  55,000 monitors

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncAPIComparisonBenchmarks.copyFileUsingDirectBufferedStreamAndHugeChunks:·rt.sync.notifications":
  10,000 counts

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncAPIComparisonBenchmarks.copyFileUsingDirectBufferedStreamAndHugeChunks:·rt.sync.parks":
  13,000 counts

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncAPIComparisonBenchmarks.copyFileUsingDirectBufferedStreamAndHugeChunks:·safepoints.interval":
  6085,000 ms

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncAPIComparisonBenchmarks.copyFileUsingDirectBufferedStreamAndHugeChunks:·safepoints.pause":
  49,256 ±(99.9%) 0,001 ms [Sum]
  (min, avg, max) = (0,057, 12,314, 38,863), stdev = 18,330
  CI (99.9%): [49,256, 49,256] (assumes normal distribution)

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncAPIComparisonBenchmarks.copyFileUsingDirectBufferedStreamAndHugeChunks:·safepoints.ttsp":
  0,101 ±(99.9%) 0,001 ms [Sum]
  (min, avg, max) = (0,017, 0,025, 0,038), stdev = 0,010
  CI (99.9%): [0,101, 0,101] (assumes normal distribution)

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncAPIComparisonBenchmarks.copyFileUsingDirectBufferedStreamAndHugeChunks:·threads.alive":
  6,000 threads

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncAPIComparisonBenchmarks.copyFileUsingDirectBufferedStreamAndHugeChunks:·threads.daemon":
  5,000 threads

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncAPIComparisonBenchmarks.copyFileUsingDirectBufferedStreamAndHugeChunks:·threads.started":
  10,000 threads


# JMH version: 1.26
# VM version: JDK 1.8.0_102, Java HotSpot(TM) 64-Bit Server VM, 25.102-b14
# VM invoker: C:\Program Files\Java\jdk1.8.0_102\jre\bin\java.exe
# VM options: -DbenchmarkClasses= -DwarmUpSeconds=1 -DmeasurementIterations=1 -DnumberOfBenchmarkForks=1 -DwarmUpIterations=1 -DrunThreadCount=1 -Dfile.encoding=UTF-8
# Warmup: 1 iterations, 1 s each
# Measurement: 1 iterations, single-shot each
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncAPIComparisonBenchmarks.copyFileUsingDirectBufferedStreamAndSmallChunks

# Run progress: 99,96% complete, ETA 00:00:00
# Fork: 1 of 1
# Preparing profilers: SafepointsProfiler
# Profilers consume stdout from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/C:/Users/slabs/.m2/repository/org/slf4j/slf4j-log4j12/1.7.30/slf4j-log4j12-1.7.30.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/C:/workspace/CyBench-Intellij/build/idea-sandbox/plugins/CyBench-Intellij/lib/slf4j-log4j12-1.7.30.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
2020-11-05 09:56:31,941 INFO  [com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncAPIComparisonBenchmarks.copyFileUsingDirectBufferedStreamAndSmallChunks-jmh-worker-1!IOAsyncAPIComparisonBenchmarks] -
-->Will generate binary file for tests...
2020-11-05 09:56:31,943 INFO  [com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncAPIComparisonBenchmarks.copyFileUsingDirectBufferedStreamAndSmallChunks-jmh-worker-1!IOUtils] - Data file for tests exists, a new one will not be created
2020-11-05 09:56:31,945 INFO  [com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncAPIComparisonBenchmarks.copyFileUsingDirectBufferedStreamAndSmallChunks-jmh-worker-1!IOAsyncAPIComparisonBenchmarks] -
-->Generated file binary.bin for processing, size(B):1073741824
2020-11-05 09:56:31,951 INFO  [com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncAPIComparisonBenchmarks.copyFileUsingDirectBufferedStreamAndSmallChunks-jmh-worker-1!IOAsyncAPIComparisonBenchmarks] -
 Will setup for iteration...
2020-11-05 09:56:35,938 INFO  [com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncAPIComparisonBenchmarks.copyFileUsingDirectBufferedStreamAndSmallChunks-jmh-worker-1!IOAsyncAPIComparisonBenchmarks] -
==>Iteration clean up successful!
3331,974 ms/op
Iteration   1: 2020-11-05 09:56:37,120 INFO  [com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncAPIComparisonBenchmarks.copyFileUsingDirectBufferedStreamAndSmallChunks-jmh-worker-1!IOAsyncAPIComparisonBenchmarks] -
 Will setup for iteration...
2020-11-05 09:56:40,766 INFO  [com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncAPIComparisonBenchmarks.copyFileUsingDirectBufferedStreamAndSmallChunks-jmh-worker-1!IOAsyncAPIComparisonBenchmarks] -
==>Iteration clean up successful!
2020-11-05 09:56:40,767 INFO  [com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncAPIComparisonBenchmarks.copyFileUsingDirectBufferedStreamAndSmallChunks-jmh-worker-1!IOAsyncAPIComparisonBenchmarks] -
==>Generated files were closed successfully!
2689,110 ms/op
                 ·gc.alloc.rate:                 0,012 MB/sec
                 ·gc.alloc.rate.norm:            50408,000 B/op
                 ·gc.count:                      ≈ 0 counts
                 ·rt.safepointSyncTime:          0,007 ms
                 ·rt.safepointTime:              0,578 ms
                 ·rt.safepoints:                 15,000 counts
                 ·rt.sync.contendedLockAttempts: 25,000 locks
                 ·rt.sync.fatMonitors:           128,000 monitors
                 ·rt.sync.futileWakeups:         7,000 counts
                 ·rt.sync.monitorDeflations:     55,000 monitors
                 ·rt.sync.monitorInflations:     57,000 monitors
                 ·rt.sync.notifications:         10,000 counts
                 ·rt.sync.parks:                 22,000 counts
                 ·threads.alive:                 6,000 threads
                 ·threads.daemon:                5,000 threads
                 ·threads.started:               10,000 threads

# Processing profiler results: SafepointsProfiler


Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncAPIComparisonBenchmarks.copyFileUsingDirectBufferedStreamAndSmallChunks:·gc.alloc.rate":
  0,012 MB/sec

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncAPIComparisonBenchmarks.copyFileUsingDirectBufferedStreamAndSmallChunks:·gc.alloc.rate.norm":
  50408,000 B/op

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncAPIComparisonBenchmarks.copyFileUsingDirectBufferedStreamAndSmallChunks:·gc.count":
  ≈ 0 counts

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncAPIComparisonBenchmarks.copyFileUsingDirectBufferedStreamAndSmallChunks:·rt.safepointSyncTime":
  0,007 ms

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncAPIComparisonBenchmarks.copyFileUsingDirectBufferedStreamAndSmallChunks:·rt.safepointTime":
  0,578 ms

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncAPIComparisonBenchmarks.copyFileUsingDirectBufferedStreamAndSmallChunks:·rt.safepoints":
  15,000 counts

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncAPIComparisonBenchmarks.copyFileUsingDirectBufferedStreamAndSmallChunks:·rt.sync.contendedLockAttempts":
  25,000 locks

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncAPIComparisonBenchmarks.copyFileUsingDirectBufferedStreamAndSmallChunks:·rt.sync.fatMonitors":
  128,000 monitors

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncAPIComparisonBenchmarks.copyFileUsingDirectBufferedStreamAndSmallChunks:·rt.sync.futileWakeups":
  7,000 counts

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncAPIComparisonBenchmarks.copyFileUsingDirectBufferedStreamAndSmallChunks:·rt.sync.monitorDeflations":
  55,000 monitors

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncAPIComparisonBenchmarks.copyFileUsingDirectBufferedStreamAndSmallChunks:·rt.sync.monitorInflations":
  57,000 monitors

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncAPIComparisonBenchmarks.copyFileUsingDirectBufferedStreamAndSmallChunks:·rt.sync.notifications":
  10,000 counts

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncAPIComparisonBenchmarks.copyFileUsingDirectBufferedStreamAndSmallChunks:·rt.sync.parks":
  22,000 counts

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncAPIComparisonBenchmarks.copyFileUsingDirectBufferedStreamAndSmallChunks:·safepoints.interval":
  4799,000 ms

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncAPIComparisonBenchmarks.copyFileUsingDirectBufferedStreamAndSmallChunks:·safepoints.pause":
  0,617 ±(99.9%) 0,001 ms [Sum]
  (min, avg, max) = (0,056, 0,154, 0,238), stdev = 0,078
  CI (99.9%): [0,617, 0,617] (assumes normal distribution)

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncAPIComparisonBenchmarks.copyFileUsingDirectBufferedStreamAndSmallChunks:·safepoints.ttsp":
  0,319 ±(99.9%) 0,001 ms [Sum]
  (min, avg, max) = (0,015, 0,080, 0,135), stdev = 0,050
  CI (99.9%): [0,319, 0,319] (assumes normal distribution)

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncAPIComparisonBenchmarks.copyFileUsingDirectBufferedStreamAndSmallChunks:·threads.alive":
  6,000 threads

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncAPIComparisonBenchmarks.copyFileUsingDirectBufferedStreamAndSmallChunks:·threads.daemon":
  5,000 threads

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncAPIComparisonBenchmarks.copyFileUsingDirectBufferedStreamAndSmallChunks:·threads.started":
  10,000 threads


# JMH version: 1.26
# VM version: JDK 1.8.0_102, Java HotSpot(TM) 64-Bit Server VM, 25.102-b14
# VM invoker: C:\Program Files\Java\jdk1.8.0_102\jre\bin\java.exe
# VM options: -DbenchmarkClasses= -DwarmUpSeconds=1 -DmeasurementIterations=1 -DnumberOfBenchmarkForks=1 -DwarmUpIterations=1 -DrunThreadCount=1 -Dfile.encoding=UTF-8
# Warmup: 1 iterations, 1 s each
# Measurement: 1 iterations, single-shot each
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncAPIComparisonBenchmarks.copyFileUsingFileStreamAndHugeChunks

# Run progress: 99,96% complete, ETA 00:00:00
# Fork: 1 of 1
# Preparing profilers: SafepointsProfiler
# Profilers consume stdout from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/C:/Users/slabs/.m2/repository/org/slf4j/slf4j-log4j12/1.7.30/slf4j-log4j12-1.7.30.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/C:/workspace/CyBench-Intellij/build/idea-sandbox/plugins/CyBench-Intellij/lib/slf4j-log4j12-1.7.30.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
2020-11-05 09:56:43,390 INFO  [com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncAPIComparisonBenchmarks.copyFileUsingFileStreamAndHugeChunks-jmh-worker-1!IOAsyncAPIComparisonBenchmarks] -
-->Will generate binary file for tests...
2020-11-05 09:56:43,392 INFO  [com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncAPIComparisonBenchmarks.copyFileUsingFileStreamAndHugeChunks-jmh-worker-1!IOUtils] - Data file for tests exists, a new one will not be created
2020-11-05 09:56:43,394 INFO  [com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncAPIComparisonBenchmarks.copyFileUsingFileStreamAndHugeChunks-jmh-worker-1!IOAsyncAPIComparisonBenchmarks] -
-->Generated file binary.bin for processing, size(B):1073741824
2020-11-05 09:56:43,401 INFO  [com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncAPIComparisonBenchmarks.copyFileUsingFileStreamAndHugeChunks-jmh-worker-1!IOAsyncAPIComparisonBenchmarks] -
 Will setup for iteration...
2020-11-05 09:56:48,149 INFO  [com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncAPIComparisonBenchmarks.copyFileUsingFileStreamAndHugeChunks-jmh-worker-1!IOAsyncAPIComparisonBenchmarks] -
==>Iteration clean up successful!
4658,443 ms/op
Iteration   1: 2020-11-05 09:56:49,333 INFO  [com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncAPIComparisonBenchmarks.copyFileUsingFileStreamAndHugeChunks-jmh-worker-1!IOAsyncAPIComparisonBenchmarks] -
 Will setup for iteration...
2020-11-05 09:56:53,992 INFO  [com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncAPIComparisonBenchmarks.copyFileUsingFileStreamAndHugeChunks-jmh-worker-1!IOAsyncAPIComparisonBenchmarks] -
==>Iteration clean up successful!
2020-11-05 09:56:53,993 INFO  [com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncAPIComparisonBenchmarks.copyFileUsingFileStreamAndHugeChunks-jmh-worker-1!IOAsyncAPIComparisonBenchmarks] -
==>Generated files were closed successfully!
4584,674 ms/op
                 ·gc.alloc.rate:                 12,371 MB/sec
                 ·gc.alloc.rate.norm:            67137848,000 B/op
                 ·gc.count:                      ≈ 0 counts
                 ·rt.safepointSyncTime:          0,097 ms
                 ·rt.safepointTime:              0,794 ms
                 ·rt.safepoints:                 14,000 counts
                 ·rt.sync.contendedLockAttempts: 36,000 locks
                 ·rt.sync.fatMonitors:           128,000 monitors
                 ·rt.sync.futileWakeups:         4,000 counts
                 ·rt.sync.monitorDeflations:     53,000 monitors
                 ·rt.sync.monitorInflations:     55,000 monitors
                 ·rt.sync.notifications:         10,000 counts
                 ·rt.sync.parks:                 18,000 counts
                 ·threads.alive:                 6,000 threads
                 ·threads.daemon:                5,000 threads
                 ·threads.started:               10,000 threads

# Processing profiler results: SafepointsProfiler


Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncAPIComparisonBenchmarks.copyFileUsingFileStreamAndHugeChunks:·gc.alloc.rate":
  12,371 MB/sec

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncAPIComparisonBenchmarks.copyFileUsingFileStreamAndHugeChunks:·gc.alloc.rate.norm":
  67137848,000 B/op

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncAPIComparisonBenchmarks.copyFileUsingFileStreamAndHugeChunks:·gc.count":
  ≈ 0 counts

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncAPIComparisonBenchmarks.copyFileUsingFileStreamAndHugeChunks:·rt.safepointSyncTime":
  0,097 ms

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncAPIComparisonBenchmarks.copyFileUsingFileStreamAndHugeChunks:·rt.safepointTime":
  0,794 ms

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncAPIComparisonBenchmarks.copyFileUsingFileStreamAndHugeChunks:·rt.safepoints":
  14,000 counts

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncAPIComparisonBenchmarks.copyFileUsingFileStreamAndHugeChunks:·rt.sync.contendedLockAttempts":
  36,000 locks

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncAPIComparisonBenchmarks.copyFileUsingFileStreamAndHugeChunks:·rt.sync.fatMonitors":
  128,000 monitors

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncAPIComparisonBenchmarks.copyFileUsingFileStreamAndHugeChunks:·rt.sync.futileWakeups":
  4,000 counts

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncAPIComparisonBenchmarks.copyFileUsingFileStreamAndHugeChunks:·rt.sync.monitorDeflations":
  53,000 monitors

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncAPIComparisonBenchmarks.copyFileUsingFileStreamAndHugeChunks:·rt.sync.monitorInflations":
  55,000 monitors

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncAPIComparisonBenchmarks.copyFileUsingFileStreamAndHugeChunks:·rt.sync.notifications":
  10,000 counts

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncAPIComparisonBenchmarks.copyFileUsingFileStreamAndHugeChunks:·rt.sync.parks":
  18,000 counts

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncAPIComparisonBenchmarks.copyFileUsingFileStreamAndHugeChunks:·safepoints.interval":
  5841,000 ms

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncAPIComparisonBenchmarks.copyFileUsingFileStreamAndHugeChunks:·safepoints.pause":
  47,773 ±(99.9%) 0,001 ms [Sum]
  (min, avg, max) = (0,081, 9,555, 36,831), stdev = 15,907
  CI (99.9%): [47,773, 47,773] (assumes normal distribution)

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncAPIComparisonBenchmarks.copyFileUsingFileStreamAndHugeChunks:·safepoints.ttsp":
  0,251 ±(99.9%) 0,001 ms [Sum]
  (min, avg, max) = (0,023, 0,050, 0,105), stdev = 0,035
  CI (99.9%): [0,251, 0,251] (assumes normal distribution)

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncAPIComparisonBenchmarks.copyFileUsingFileStreamAndHugeChunks:·threads.alive":
  6,000 threads

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncAPIComparisonBenchmarks.copyFileUsingFileStreamAndHugeChunks:·threads.daemon":
  5,000 threads

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncAPIComparisonBenchmarks.copyFileUsingFileStreamAndHugeChunks:·threads.started":
  10,000 threads


# JMH version: 1.26
# VM version: JDK 1.8.0_102, Java HotSpot(TM) 64-Bit Server VM, 25.102-b14
# VM invoker: C:\Program Files\Java\jdk1.8.0_102\jre\bin\java.exe
# VM options: -DbenchmarkClasses= -DwarmUpSeconds=1 -DmeasurementIterations=1 -DnumberOfBenchmarkForks=1 -DwarmUpIterations=1 -DrunThreadCount=1 -Dfile.encoding=UTF-8
# Warmup: 1 iterations, 1 s each
# Measurement: 1 iterations, single-shot each
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncAPIComparisonBenchmarks.copyFileUsingFileStreamAndSmallChunks

# Run progress: 99,97% complete, ETA 00:00:00
# Fork: 1 of 1
# Preparing profilers: SafepointsProfiler
# Profilers consume stdout from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/C:/Users/slabs/.m2/repository/org/slf4j/slf4j-log4j12/1.7.30/slf4j-log4j12-1.7.30.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/C:/workspace/CyBench-Intellij/build/idea-sandbox/plugins/CyBench-Intellij/lib/slf4j-log4j12-1.7.30.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
2020-11-05 09:56:56,585 INFO  [com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncAPIComparisonBenchmarks.copyFileUsingFileStreamAndSmallChunks-jmh-worker-1!IOAsyncAPIComparisonBenchmarks] -
-->Will generate binary file for tests...
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
2020-11-05 09:56:56,588 INFO  [com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncAPIComparisonBenchmarks.copyFileUsingFileStreamAndSmallChunks-jmh-worker-1!IOUtils] - Data file for tests exists, a new one will not be created
2020-11-05 09:56:56,589 INFO  [com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncAPIComparisonBenchmarks.copyFileUsingFileStreamAndSmallChunks-jmh-worker-1!IOAsyncAPIComparisonBenchmarks] -
-->Generated file binary.bin for processing, size(B):1073741824
2020-11-05 09:56:56,595 INFO  [com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncAPIComparisonBenchmarks.copyFileUsingFileStreamAndSmallChunks-jmh-worker-1!IOAsyncAPIComparisonBenchmarks] -
 Will setup for iteration...
2020-11-05 09:57:01,148 INFO  [com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncAPIComparisonBenchmarks.copyFileUsingFileStreamAndSmallChunks-jmh-worker-1!IOAsyncAPIComparisonBenchmarks] -
==>Iteration clean up successful!
4122,481 ms/op
Iteration   1: 2020-11-05 09:57:02,320 INFO  [com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncAPIComparisonBenchmarks.copyFileUsingFileStreamAndSmallChunks-jmh-worker-1!IOAsyncAPIComparisonBenchmarks] -
 Will setup for iteration...
2020-11-05 09:57:05,999 INFO  [com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncAPIComparisonBenchmarks.copyFileUsingFileStreamAndSmallChunks-jmh-worker-1!IOAsyncAPIComparisonBenchmarks] -
==>Iteration clean up successful!
2020-11-05 09:57:05,999 INFO  [com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncAPIComparisonBenchmarks.copyFileUsingFileStreamAndSmallChunks-jmh-worker-1!IOAsyncAPIComparisonBenchmarks] -
==>Generated files were closed successfully!
3596,647 ms/op
                 ·gc.alloc.rate:                 0,008 MB/sec
                 ·gc.alloc.rate.norm:            33168,000 B/op
                 ·gc.count:                      ≈ 0 counts
                 ·rt.safepointSyncTime:          0,017 ms
                 ·rt.safepointTime:              0,566 ms
                 ·rt.safepoints:                 11,000 counts
                 ·rt.sync.contendedLockAttempts: 59,000 locks
                 ·rt.sync.fatMonitors:           128,000 monitors
                 ·rt.sync.futileWakeups:         8,000 counts
                 ·rt.sync.monitorDeflations:     54,000 monitors
                 ·rt.sync.monitorInflations:     56,000 monitors
                 ·rt.sync.notifications:         10,000 counts
                 ·rt.sync.parks:                 20,000 counts
                 ·threads.alive:                 6,000 threads
                 ·threads.daemon:                5,000 threads
                 ·threads.started:               10,000 threads

# Processing profiler results: SafepointsProfiler


Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncAPIComparisonBenchmarks.copyFileUsingFileStreamAndSmallChunks:·gc.alloc.rate":
  0,008 MB/sec

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncAPIComparisonBenchmarks.copyFileUsingFileStreamAndSmallChunks:·gc.alloc.rate.norm":
  33168,000 B/op

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncAPIComparisonBenchmarks.copyFileUsingFileStreamAndSmallChunks:·gc.count":
  ≈ 0 counts

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncAPIComparisonBenchmarks.copyFileUsingFileStreamAndSmallChunks:·rt.safepointSyncTime":
  0,017 ms

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncAPIComparisonBenchmarks.copyFileUsingFileStreamAndSmallChunks:·rt.safepointTime":
  0,566 ms

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncAPIComparisonBenchmarks.copyFileUsingFileStreamAndSmallChunks:·rt.safepoints":
  11,000 counts

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncAPIComparisonBenchmarks.copyFileUsingFileStreamAndSmallChunks:·rt.sync.contendedLockAttempts":
  59,000 locks

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncAPIComparisonBenchmarks.copyFileUsingFileStreamAndSmallChunks:·rt.sync.fatMonitors":
  128,000 monitors

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncAPIComparisonBenchmarks.copyFileUsingFileStreamAndSmallChunks:·rt.sync.futileWakeups":
  8,000 counts

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncAPIComparisonBenchmarks.copyFileUsingFileStreamAndSmallChunks:·rt.sync.monitorDeflations":
  54,000 monitors

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncAPIComparisonBenchmarks.copyFileUsingFileStreamAndSmallChunks:·rt.sync.monitorInflations":
  56,000 monitors

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncAPIComparisonBenchmarks.copyFileUsingFileStreamAndSmallChunks:·rt.sync.notifications":
  10,000 counts

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncAPIComparisonBenchmarks.copyFileUsingFileStreamAndSmallChunks:·rt.sync.parks":
  20,000 counts

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncAPIComparisonBenchmarks.copyFileUsingFileStreamAndSmallChunks:·safepoints.interval":
  4836,000 ms

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncAPIComparisonBenchmarks.copyFileUsingFileStreamAndSmallChunks:·safepoints.pause":
  10,261 ±(99.9%) 0,001 ms [Sum]
  (min, avg, max) = (0,057, 2,565, 9,945), stdev = 4,920
  CI (99.9%): [10,261, 10,261] (assumes normal distribution)

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncAPIComparisonBenchmarks.copyFileUsingFileStreamAndSmallChunks:·safepoints.ttsp":
  0,264 ±(99.9%) 0,001 ms [Sum]
  (min, avg, max) = (0,018, 0,066, 0,101), stdev = 0,035
  CI (99.9%): [0,264, 0,264] (assumes normal distribution)

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncAPIComparisonBenchmarks.copyFileUsingFileStreamAndSmallChunks:·threads.alive":
  6,000 threads

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncAPIComparisonBenchmarks.copyFileUsingFileStreamAndSmallChunks:·threads.daemon":
  5,000 threads

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncAPIComparisonBenchmarks.copyFileUsingFileStreamAndSmallChunks:·threads.started":
  10,000 threads


# JMH version: 1.26
# VM version: JDK 1.8.0_102, Java HotSpot(TM) 64-Bit Server VM, 25.102-b14
# VM invoker: C:\Program Files\Java\jdk1.8.0_102\jre\bin\java.exe
# VM options: -DbenchmarkClasses= -DwarmUpSeconds=1 -DmeasurementIterations=1 -DnumberOfBenchmarkForks=1 -DwarmUpIterations=1 -DrunThreadCount=1 -Dfile.encoding=UTF-8
# Warmup: 1 iterations, 1 s each
# Measurement: 1 iterations, single-shot each
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncAPIComparisonBenchmarks.copyFileUsingMappedByteBuffer

# Run progress: 99,97% complete, ETA 00:00:00
# Fork: 1 of 1
# Preparing profilers: SafepointsProfiler
# Profilers consume stdout from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/C:/Users/slabs/.m2/repository/org/slf4j/slf4j-log4j12/1.7.30/slf4j-log4j12-1.7.30.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/C:/workspace/CyBench-Intellij/build/idea-sandbox/plugins/CyBench-Intellij/lib/slf4j-log4j12-1.7.30.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
2020-11-05 09:57:08,588 INFO  [com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncAPIComparisonBenchmarks.copyFileUsingMappedByteBuffer-jmh-worker-1!IOAsyncAPIComparisonBenchmarks] -
-->Will generate binary file for tests...
2020-11-05 09:57:08,591 INFO  [com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncAPIComparisonBenchmarks.copyFileUsingMappedByteBuffer-jmh-worker-1!IOUtils] - Data file for tests exists, a new one will not be created
2020-11-05 09:57:08,592 INFO  [com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncAPIComparisonBenchmarks.copyFileUsingMappedByteBuffer-jmh-worker-1!IOAsyncAPIComparisonBenchmarks] -
-->Generated file binary.bin for processing, size(B):1073741824
2020-11-05 09:57:08,598 INFO  [com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncAPIComparisonBenchmarks.copyFileUsingMappedByteBuffer-jmh-worker-1!IOAsyncAPIComparisonBenchmarks] -
 Will setup for iteration...
2020-11-05 09:57:10,508 INFO  [com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncAPIComparisonBenchmarks.copyFileUsingMappedByteBuffer-jmh-worker-1!IOAsyncAPIComparisonBenchmarks] -
==>Iteration clean up successful!
1908,485 ms/op
Iteration   1: 2020-11-05 09:57:11,703 INFO  [com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncAPIComparisonBenchmarks.copyFileUsingMappedByteBuffer-jmh-worker-1!IOAsyncAPIComparisonBenchmarks] -
 Will setup for iteration...
2020-11-05 09:57:13,255 INFO  [com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncAPIComparisonBenchmarks.copyFileUsingMappedByteBuffer-jmh-worker-1!IOAsyncAPIComparisonBenchmarks] -
==>Iteration clean up successful!
2020-11-05 09:57:13,255 INFO  [com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncAPIComparisonBenchmarks.copyFileUsingMappedByteBuffer-jmh-worker-1!IOAsyncAPIComparisonBenchmarks] -
==>Generated files were closed successfully!
1466,142 ms/op
                 ·gc.alloc.rate:                 497,528 MB/sec
                 ·gc.alloc.rate.norm:            1073770536,000 B/op
                 ·gc.count:                      ≈ 0 counts
                 ·rt.safepointSyncTime:          0,011 ms
                 ·rt.safepointTime:              0,567 ms
                 ·rt.safepoints:                 13,000 counts
                 ·rt.sync.contendedLockAttempts: 76,000 locks
                 ·rt.sync.fatMonitors:           128,000 monitors
                 ·rt.sync.futileWakeups:         6,000 counts
                 ·rt.sync.monitorDeflations:     53,000 monitors
                 ·rt.sync.monitorInflations:     55,000 monitors
                 ·rt.sync.notifications:         10,000 counts
                 ·rt.sync.parks:                 21,000 counts
                 ·threads.alive:                 6,000 threads
                 ·threads.daemon:                5,000 threads
                 ·threads.started:               10,000 threads

# Processing profiler results: SafepointsProfiler


Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncAPIComparisonBenchmarks.copyFileUsingMappedByteBuffer:·gc.alloc.rate":
  497,528 MB/sec

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncAPIComparisonBenchmarks.copyFileUsingMappedByteBuffer:·gc.alloc.rate.norm":
  1073770536,000 B/op

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncAPIComparisonBenchmarks.copyFileUsingMappedByteBuffer:·gc.count":
  ≈ 0 counts

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncAPIComparisonBenchmarks.copyFileUsingMappedByteBuffer:·rt.safepointSyncTime":
  0,011 ms

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncAPIComparisonBenchmarks.copyFileUsingMappedByteBuffer:·rt.safepointTime":
  0,567 ms

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncAPIComparisonBenchmarks.copyFileUsingMappedByteBuffer:·rt.safepoints":
  13,000 counts

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncAPIComparisonBenchmarks.copyFileUsingMappedByteBuffer:·rt.sync.contendedLockAttempts":
  76,000 locks

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncAPIComparisonBenchmarks.copyFileUsingMappedByteBuffer:·rt.sync.fatMonitors":
  128,000 monitors

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncAPIComparisonBenchmarks.copyFileUsingMappedByteBuffer:·rt.sync.futileWakeups":
  6,000 counts

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncAPIComparisonBenchmarks.copyFileUsingMappedByteBuffer:·rt.sync.monitorDeflations":
  53,000 monitors

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncAPIComparisonBenchmarks.copyFileUsingMappedByteBuffer:·rt.sync.monitorInflations":
  55,000 monitors

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncAPIComparisonBenchmarks.copyFileUsingMappedByteBuffer:·rt.sync.notifications":
  10,000 counts

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncAPIComparisonBenchmarks.copyFileUsingMappedByteBuffer:·rt.sync.parks":
  21,000 counts

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncAPIComparisonBenchmarks.copyFileUsingMappedByteBuffer:·safepoints.interval":
  2735,000 ms

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncAPIComparisonBenchmarks.copyFileUsingMappedByteBuffer:·safepoints.pause":
  7,105 ±(99.9%) 0,001 ms [Sum]
  (min, avg, max) = (0,123, 2,368, 6,439), stdev = 3,532
  CI (99.9%): [7,105, 7,105] (assumes normal distribution)

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncAPIComparisonBenchmarks.copyFileUsingMappedByteBuffer:·safepoints.ttsp":
  0,697 ±(99.9%) 0,001 ms [Sum]
  (min, avg, max) = (0,036, 0,232, 0,485), stdev = 0,230
  CI (99.9%): [0,697, 0,697] (assumes normal distribution)

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncAPIComparisonBenchmarks.copyFileUsingMappedByteBuffer:·threads.alive":
  6,000 threads

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncAPIComparisonBenchmarks.copyFileUsingMappedByteBuffer:·threads.daemon":
  5,000 threads

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncAPIComparisonBenchmarks.copyFileUsingMappedByteBuffer:·threads.started":
  10,000 threads


# JMH version: 1.26
# VM version: JDK 1.8.0_102, Java HotSpot(TM) 64-Bit Server VM, 25.102-b14
# VM invoker: C:\Program Files\Java\jdk1.8.0_102\jre\bin\java.exe
# VM options: -DbenchmarkClasses= -DwarmUpSeconds=1 -DmeasurementIterations=1 -DnumberOfBenchmarkForks=1 -DwarmUpIterations=1 -DrunThreadCount=1 -Dfile.encoding=UTF-8
# Warmup: 1 iterations, 1 s each
# Measurement: 1 iterations, single-shot each
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncFileSeekBenchmarks.seekAndCopyFileUsingHugeChunks

# Run progress: 99,97% complete, ETA 00:00:00
# Fork: 1 of 1
# Preparing profilers: SafepointsProfiler
# Profilers consume stdout from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/C:/Users/slabs/.m2/repository/org/slf4j/slf4j-log4j12/1.7.30/slf4j-log4j12-1.7.30.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/C:/workspace/CyBench-Intellij/build/idea-sandbox/plugins/CyBench-Intellij/lib/slf4j-log4j12-1.7.30.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
2020-11-05 09:57:16,055 INFO  [com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncFileSeekBenchmarks.seekAndCopyFileUsingHugeChunks-jmh-worker-1!IOAsyncFileSeekBenchmarks] -
-->Will generate binary file for tests...
2020-11-05 09:57:16,057 INFO  [com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncFileSeekBenchmarks.seekAndCopyFileUsingHugeChunks-jmh-worker-1!IOUtils] - Data file for tests exists, a new one will not be created
2020-11-05 09:57:16,059 INFO  [com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncFileSeekBenchmarks.seekAndCopyFileUsingHugeChunks-jmh-worker-1!IOAsyncFileSeekBenchmarks] -
-->Generated file binary.bin for processing, size(B):1073741824
2020-11-05 09:57:16,060 INFO  [com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncFileSeekBenchmarks.seekAndCopyFileUsingHugeChunks-jmh-worker-1!IOAsyncFileSeekBenchmarks] - Will generate an array of random numbers for file positions
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
2020-11-05 09:57:16,207 INFO  [com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncFileSeekBenchmarks.seekAndCopyFileUsingHugeChunks-jmh-worker-1!IOAsyncFileSeekBenchmarks] - Generated all prerequisites!
2020-11-05 09:57:16,208 INFO  [com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncFileSeekBenchmarks.seekAndCopyFileUsingHugeChunks-jmh-worker-1!IOAsyncFileSeekBenchmarks] -
 Will setup for iteration...
2020-11-05 09:57:19,390 INFO  [com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncFileSeekBenchmarks.seekAndCopyFileUsingHugeChunks-jmh-worker-1!IOAsyncFileSeekBenchmarks] -
==>Iteration clean up successful!
2512,274 ms/op
Iteration   1: 2020-11-05 09:57:20,547 INFO  [com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncFileSeekBenchmarks.seekAndCopyFileUsingHugeChunks-jmh-worker-1!IOAsyncFileSeekBenchmarks] -
 Will setup for iteration...
2020-11-05 09:57:23,180 INFO  [com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncFileSeekBenchmarks.seekAndCopyFileUsingHugeChunks-jmh-worker-1!IOAsyncFileSeekBenchmarks] -
==>Iteration clean up successful!
2020-11-05 09:57:23,180 INFO  [com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncFileSeekBenchmarks.seekAndCopyFileUsingHugeChunks-jmh-worker-1!IOAsyncFileSeekBenchmarks] -
==>Generated files were closed successfully!
2082,241 ms/op
                 ·gc.alloc.rate:                   331,421 MB/sec
                 ·gc.alloc.rate.norm:              1090546664,000 B/op
                 ·gc.churn.PS_Eden_Space:          313,791 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     1032533248,000 B/op
                 ·gc.churn.PS_Survivor_Space:      0,030 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 98304,000 B/op
                 ·gc.count:                        2,000 counts
                 ·gc.time:                         2,000 ms
                 ·rt.safepointSyncTime:            0,011 ms
                 ·rt.safepointTime:                0,762 ms
                 ·rt.safepoints:                   22,000 counts
                 ·rt.sync.contendedLockAttempts:   38,000 locks
                 ·rt.sync.fatMonitors:             128,000 monitors
                 ·rt.sync.futileWakeups:           3,000 counts
                 ·rt.sync.monitorDeflations:       54,000 monitors
                 ·rt.sync.monitorInflations:       56,000 monitors
                 ·rt.sync.notifications:           12,000 counts
                 ·rt.sync.parks:                   21,000 counts
                 ·threads.alive:                   6,000 threads
                 ·threads.daemon:                  5,000 threads
                 ·threads.started:                 10,000 threads

# Processing profiler results: SafepointsProfiler


Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncFileSeekBenchmarks.seekAndCopyFileUsingHugeChunks:·gc.alloc.rate":
  331,421 MB/sec

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncFileSeekBenchmarks.seekAndCopyFileUsingHugeChunks:·gc.alloc.rate.norm":
  1090546664,000 B/op

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncFileSeekBenchmarks.seekAndCopyFileUsingHugeChunks:·gc.churn.PS_Eden_Space":
  313,791 MB/sec

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncFileSeekBenchmarks.seekAndCopyFileUsingHugeChunks:·gc.churn.PS_Eden_Space.norm":
  1032533248,000 B/op

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncFileSeekBenchmarks.seekAndCopyFileUsingHugeChunks:·gc.churn.PS_Survivor_Space":
  0,030 MB/sec

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncFileSeekBenchmarks.seekAndCopyFileUsingHugeChunks:·gc.churn.PS_Survivor_Space.norm":
  98304,000 B/op

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncFileSeekBenchmarks.seekAndCopyFileUsingHugeChunks:·gc.count":
  2,000 counts

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncFileSeekBenchmarks.seekAndCopyFileUsingHugeChunks:·gc.time":
  2,000 ms

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncFileSeekBenchmarks.seekAndCopyFileUsingHugeChunks:·rt.safepointSyncTime":
  0,011 ms

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncFileSeekBenchmarks.seekAndCopyFileUsingHugeChunks:·rt.safepointTime":
  0,762 ms

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncFileSeekBenchmarks.seekAndCopyFileUsingHugeChunks:·rt.safepoints":
  22,000 counts

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncFileSeekBenchmarks.seekAndCopyFileUsingHugeChunks:·rt.sync.contendedLockAttempts":
  38,000 locks

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncFileSeekBenchmarks.seekAndCopyFileUsingHugeChunks:·rt.sync.fatMonitors":
  128,000 monitors

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncFileSeekBenchmarks.seekAndCopyFileUsingHugeChunks:·rt.sync.futileWakeups":
  3,000 counts

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncFileSeekBenchmarks.seekAndCopyFileUsingHugeChunks:·rt.sync.monitorDeflations":
  54,000 monitors

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncFileSeekBenchmarks.seekAndCopyFileUsingHugeChunks:·rt.sync.monitorInflations":
  56,000 monitors

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncFileSeekBenchmarks.seekAndCopyFileUsingHugeChunks:·rt.sync.notifications":
  12,000 counts

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncFileSeekBenchmarks.seekAndCopyFileUsingHugeChunks:·rt.sync.parks":
  21,000 counts

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncFileSeekBenchmarks.seekAndCopyFileUsingHugeChunks:·safepoints.interval":
  3787,000 ms

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncFileSeekBenchmarks.seekAndCopyFileUsingHugeChunks:·safepoints.pause":
  2,779 ±(99.9%) 0,001 ms [Sum]
  (min, avg, max) = (0,072, 0,556, 1,169), stdev = 0,464
  CI (99.9%): [2,779, 2,779] (assumes normal distribution)

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncFileSeekBenchmarks.seekAndCopyFileUsingHugeChunks:·safepoints.ttsp":
  0,545 ±(99.9%) 0,001 ms [Sum]
  (min, avg, max) = (0,018, 0,109, 0,378), stdev = 0,152
  CI (99.9%): [0,545, 0,545] (assumes normal distribution)

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncFileSeekBenchmarks.seekAndCopyFileUsingHugeChunks:·threads.alive":
  6,000 threads

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncFileSeekBenchmarks.seekAndCopyFileUsingHugeChunks:·threads.daemon":
  5,000 threads

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncFileSeekBenchmarks.seekAndCopyFileUsingHugeChunks:·threads.started":
  10,000 threads


# JMH version: 1.26
# VM version: JDK 1.8.0_102, Java HotSpot(TM) 64-Bit Server VM, 25.102-b14
# VM invoker: C:\Program Files\Java\jdk1.8.0_102\jre\bin\java.exe
# VM options: -DbenchmarkClasses= -DwarmUpSeconds=1 -DmeasurementIterations=1 -DnumberOfBenchmarkForks=1 -DwarmUpIterations=1 -DrunThreadCount=1 -Dfile.encoding=UTF-8
# Warmup: 1 iterations, 1 s each
# Measurement: 1 iterations, single-shot each
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncFileSeekBenchmarks.seekAndCopyFileUsingSmallChunks

# Run progress: 99,97% complete, ETA 00:00:00
# Fork: 1 of 1
# Preparing profilers: SafepointsProfiler
# Profilers consume stdout from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/C:/Users/slabs/.m2/repository/org/slf4j/slf4j-log4j12/1.7.30/slf4j-log4j12-1.7.30.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/C:/workspace/CyBench-Intellij/build/idea-sandbox/plugins/CyBench-Intellij/lib/slf4j-log4j12-1.7.30.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
2020-11-05 09:57:25,827 INFO  [com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncFileSeekBenchmarks.seekAndCopyFileUsingSmallChunks-jmh-worker-1!IOAsyncFileSeekBenchmarks] -
-->Will generate binary file for tests...
2020-11-05 09:57:25,829 INFO  [com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncFileSeekBenchmarks.seekAndCopyFileUsingSmallChunks-jmh-worker-1!IOUtils] - Data file for tests exists, a new one will not be created
2020-11-05 09:57:25,830 INFO  [com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncFileSeekBenchmarks.seekAndCopyFileUsingSmallChunks-jmh-worker-1!IOAsyncFileSeekBenchmarks] -
-->Generated file binary.bin for processing, size(B):1073741824
2020-11-05 09:57:25,831 INFO  [com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncFileSeekBenchmarks.seekAndCopyFileUsingSmallChunks-jmh-worker-1!IOAsyncFileSeekBenchmarks] - Will generate an array of random numbers for file positions
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
2020-11-05 09:57:25,900 INFO  [com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncFileSeekBenchmarks.seekAndCopyFileUsingSmallChunks-jmh-worker-1!IOAsyncFileSeekBenchmarks] - Generated all prerequisites!
2020-11-05 09:57:25,900 INFO  [com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncFileSeekBenchmarks.seekAndCopyFileUsingSmallChunks-jmh-worker-1!IOAsyncFileSeekBenchmarks] -
 Will setup for iteration...
2020-11-05 09:57:31,722 INFO  [com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncFileSeekBenchmarks.seekAndCopyFileUsingSmallChunks-jmh-worker-1!IOAsyncFileSeekBenchmarks] -
==>Iteration clean up successful!
5172,925 ms/op
Iteration   1: 2020-11-05 09:57:32,900 INFO  [com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncFileSeekBenchmarks.seekAndCopyFileUsingSmallChunks-jmh-worker-1!IOAsyncFileSeekBenchmarks] -
 Will setup for iteration...
2020-11-05 09:57:38,242 INFO  [com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncFileSeekBenchmarks.seekAndCopyFileUsingSmallChunks-jmh-worker-1!IOAsyncFileSeekBenchmarks] -
==>Iteration clean up successful!
2020-11-05 09:57:38,243 INFO  [com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncFileSeekBenchmarks.seekAndCopyFileUsingSmallChunks-jmh-worker-1!IOAsyncFileSeekBenchmarks] -
==>Generated files were closed successfully!
4702,973 ms/op
                 ·gc.alloc.rate:                   176,308 MB/sec
                 ·gc.alloc.rate.norm:              1082654408,000 B/op
                 ·gc.churn.PS_Eden_Space:          173,405 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     1064828928,000 B/op
                 ·gc.churn.PS_Survivor_Space:      0,016 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 98304,000 B/op
                 ·gc.count:                        24,000 counts
                 ·gc.time:                         21,000 ms
                 ·rt.safepointSyncTime:            0,018 ms
                 ·rt.safepointTime:                1,055 ms
                 ·rt.safepoints:                   53,000 counts
                 ·rt.sync.contendedLockAttempts:   63,000 locks
                 ·rt.sync.fatMonitors:             128,000 monitors
                 ·rt.sync.futileWakeups:           9,000 counts
                 ·rt.sync.monitorDeflations:       58,000 monitors
                 ·rt.sync.monitorInflations:       60,000 monitors
                 ·rt.sync.notifications:           12,000 counts
                 ·rt.sync.parks:                   28,000 counts
                 ·threads.alive:                   6,000 threads
                 ·threads.daemon:                  5,000 threads
                 ·threads.started:                 10,000 threads

# Processing profiler results: SafepointsProfiler


Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncFileSeekBenchmarks.seekAndCopyFileUsingSmallChunks:·gc.alloc.rate":
  176,308 MB/sec

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncFileSeekBenchmarks.seekAndCopyFileUsingSmallChunks:·gc.alloc.rate.norm":
  1082654408,000 B/op

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncFileSeekBenchmarks.seekAndCopyFileUsingSmallChunks:·gc.churn.PS_Eden_Space":
  173,405 MB/sec

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncFileSeekBenchmarks.seekAndCopyFileUsingSmallChunks:·gc.churn.PS_Eden_Space.norm":
  1064828928,000 B/op

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncFileSeekBenchmarks.seekAndCopyFileUsingSmallChunks:·gc.churn.PS_Survivor_Space":
  0,016 MB/sec

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncFileSeekBenchmarks.seekAndCopyFileUsingSmallChunks:·gc.churn.PS_Survivor_Space.norm":
  98304,000 B/op

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncFileSeekBenchmarks.seekAndCopyFileUsingSmallChunks:·gc.count":
  24,000 counts

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncFileSeekBenchmarks.seekAndCopyFileUsingSmallChunks:·gc.time":
  21,000 ms

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncFileSeekBenchmarks.seekAndCopyFileUsingSmallChunks:·rt.safepointSyncTime":
  0,018 ms

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncFileSeekBenchmarks.seekAndCopyFileUsingSmallChunks:·rt.safepointTime":
  1,055 ms

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncFileSeekBenchmarks.seekAndCopyFileUsingSmallChunks:·rt.safepoints":
  53,000 counts

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncFileSeekBenchmarks.seekAndCopyFileUsingSmallChunks:·rt.sync.contendedLockAttempts":
  63,000 locks

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncFileSeekBenchmarks.seekAndCopyFileUsingSmallChunks:·rt.sync.fatMonitors":
  128,000 monitors

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncFileSeekBenchmarks.seekAndCopyFileUsingSmallChunks:·rt.sync.futileWakeups":
  9,000 counts

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncFileSeekBenchmarks.seekAndCopyFileUsingSmallChunks:·rt.sync.monitorDeflations":
  58,000 monitors

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncFileSeekBenchmarks.seekAndCopyFileUsingSmallChunks:·rt.sync.monitorInflations":
  60,000 monitors

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncFileSeekBenchmarks.seekAndCopyFileUsingSmallChunks:·rt.sync.notifications":
  12,000 counts

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncFileSeekBenchmarks.seekAndCopyFileUsingSmallChunks:·rt.sync.parks":
  28,000 counts

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncFileSeekBenchmarks.seekAndCopyFileUsingSmallChunks:·safepoints.interval":
  6515,000 ms

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncFileSeekBenchmarks.seekAndCopyFileUsingSmallChunks:·safepoints.pause":
  25,383 ±(99.9%) 0,001 ms [Sum]
  (min, avg, max) = (0,086, 0,976, 1,599), stdev = 0,381
  CI (99.9%): [25,383, 25,383] (assumes normal distribution)

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncFileSeekBenchmarks.seekAndCopyFileUsingSmallChunks:·safepoints.ttsp":
  0,701 ±(99.9%) 0,001 ms [Sum]
  (min, avg, max) = (0,016, 0,027, 0,049), stdev = 0,009
  CI (99.9%): [0,701, 0,701] (assumes normal distribution)

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncFileSeekBenchmarks.seekAndCopyFileUsingSmallChunks:·threads.alive":
  6,000 threads

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncFileSeekBenchmarks.seekAndCopyFileUsingSmallChunks:·threads.daemon":
  5,000 threads

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncFileSeekBenchmarks.seekAndCopyFileUsingSmallChunks:·threads.started":
  10,000 threads


# JMH version: 1.26
# VM version: JDK 1.8.0_102, Java HotSpot(TM) 64-Bit Server VM, 25.102-b14
# VM invoker: C:\Program Files\Java\jdk1.8.0_102\jre\bin\java.exe
# VM options: -DbenchmarkClasses= -DwarmUpSeconds=1 -DmeasurementIterations=1 -DnumberOfBenchmarkForks=1 -DwarmUpIterations=1 -DrunThreadCount=1 -Dfile.encoding=UTF-8
# Warmup: 1 iterations, 1 s each
# Measurement: 1 iterations, single-shot each
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncFileSeekBenchmarks.seekAndReadFileUsingHugeChunks

# Run progress: 99,97% complete, ETA 00:00:00
# Fork: 1 of 1
# Preparing profilers: SafepointsProfiler
# Profilers consume stdout from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/C:/Users/slabs/.m2/repository/org/slf4j/slf4j-log4j12/1.7.30/slf4j-log4j12-1.7.30.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/C:/workspace/CyBench-Intellij/build/idea-sandbox/plugins/CyBench-Intellij/lib/slf4j-log4j12-1.7.30.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
2020-11-05 09:57:40,822 INFO  [com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncFileSeekBenchmarks.seekAndReadFileUsingHugeChunks-jmh-worker-1!IOAsyncFileSeekBenchmarks] -
-->Will generate binary file for tests...
2020-11-05 09:57:40,825 INFO  [com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncFileSeekBenchmarks.seekAndReadFileUsingHugeChunks-jmh-worker-1!IOUtils] - Data file for tests exists, a new one will not be created
2020-11-05 09:57:40,826 INFO  [com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncFileSeekBenchmarks.seekAndReadFileUsingHugeChunks-jmh-worker-1!IOAsyncFileSeekBenchmarks] -
-->Generated file binary.bin for processing, size(B):1073741824
2020-11-05 09:57:40,827 INFO  [com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncFileSeekBenchmarks.seekAndReadFileUsingHugeChunks-jmh-worker-1!IOAsyncFileSeekBenchmarks] - Will generate an array of random numbers for file positions
2020-11-05 09:57:40,895 INFO  [com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncFileSeekBenchmarks.seekAndReadFileUsingHugeChunks-jmh-worker-1!IOAsyncFileSeekBenchmarks] - Generated all prerequisites!
2020-11-05 09:57:40,896 INFO  [com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncFileSeekBenchmarks.seekAndReadFileUsingHugeChunks-jmh-worker-1!IOAsyncFileSeekBenchmarks] -
 Will setup for iteration...
2020-11-05 09:57:41,562 INFO  [com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncFileSeekBenchmarks.seekAndReadFileUsingHugeChunks-jmh-worker-1!IOAsyncFileSeekBenchmarks] -
==>Iteration clean up successful!
664,055 ms/op
Iteration   1: 2020-11-05 09:57:42,731 INFO  [com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncFileSeekBenchmarks.seekAndReadFileUsingHugeChunks-jmh-worker-1!IOAsyncFileSeekBenchmarks] -
 Will setup for iteration...
2020-11-05 09:57:43,454 INFO  [com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncFileSeekBenchmarks.seekAndReadFileUsingHugeChunks-jmh-worker-1!IOAsyncFileSeekBenchmarks] -
==>Iteration clean up successful!
2020-11-05 09:57:43,454 INFO  [com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncFileSeekBenchmarks.seekAndReadFileUsingHugeChunks-jmh-worker-1!IOAsyncFileSeekBenchmarks] -
==>Generated files were closed successfully!
717,203 ms/op
                 ·gc.alloc.rate:                   829,780 MB/sec
                 ·gc.alloc.rate.norm:              1073769432,000 B/op
                 ·gc.churn.PS_Eden_Space:          824,208 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     1066559312,000 B/op
                 ·gc.churn.PS_Survivor_Space:      0,101 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 131072,000 B/op
                 ·gc.count:                        2,000 counts
                 ·gc.time:                         3,000 ms
                 ·rt.safepointSyncTime:            0,011 ms
                 ·rt.safepointTime:                0,767 ms
                 ·rt.safepoints:                   19,000 counts
                 ·rt.sync.contendedLockAttempts:   42,000 locks
                 ·rt.sync.fatMonitors:             128,000 monitors
                 ·rt.sync.futileWakeups:           2,000 counts
                 ·rt.sync.monitorDeflations:       54,000 monitors
                 ·rt.sync.monitorInflations:       56,000 monitors
                 ·rt.sync.notifications:           12,000 counts
                 ·rt.sync.parks:                   18,000 counts
                 ·threads.alive:                   6,000 threads
                 ·threads.daemon:                  5,000 threads
                 ·threads.started:                 10,000 threads

# Processing profiler results: SafepointsProfiler


Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncFileSeekBenchmarks.seekAndReadFileUsingHugeChunks:·gc.alloc.rate":
  829,780 MB/sec

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncFileSeekBenchmarks.seekAndReadFileUsingHugeChunks:·gc.alloc.rate.norm":
  1073769432,000 B/op

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncFileSeekBenchmarks.seekAndReadFileUsingHugeChunks:·gc.churn.PS_Eden_Space":
  824,208 MB/sec

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncFileSeekBenchmarks.seekAndReadFileUsingHugeChunks:·gc.churn.PS_Eden_Space.norm":
  1066559312,000 B/op

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncFileSeekBenchmarks.seekAndReadFileUsingHugeChunks:·gc.churn.PS_Survivor_Space":
  0,101 MB/sec

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncFileSeekBenchmarks.seekAndReadFileUsingHugeChunks:·gc.churn.PS_Survivor_Space.norm":
  131072,000 B/op

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncFileSeekBenchmarks.seekAndReadFileUsingHugeChunks:·gc.count":
  2,000 counts

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncFileSeekBenchmarks.seekAndReadFileUsingHugeChunks:·gc.time":
  3,000 ms

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncFileSeekBenchmarks.seekAndReadFileUsingHugeChunks:·rt.safepointSyncTime":
  0,011 ms

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncFileSeekBenchmarks.seekAndReadFileUsingHugeChunks:·rt.safepointTime":
  0,767 ms

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncFileSeekBenchmarks.seekAndReadFileUsingHugeChunks:·rt.safepoints":
  19,000 counts

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncFileSeekBenchmarks.seekAndReadFileUsingHugeChunks:·rt.sync.contendedLockAttempts":
  42,000 locks

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncFileSeekBenchmarks.seekAndReadFileUsingHugeChunks:·rt.sync.fatMonitors":
  128,000 monitors

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncFileSeekBenchmarks.seekAndReadFileUsingHugeChunks:·rt.sync.futileWakeups":
  2,000 counts

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncFileSeekBenchmarks.seekAndReadFileUsingHugeChunks:·rt.sync.monitorDeflations":
  54,000 monitors

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncFileSeekBenchmarks.seekAndReadFileUsingHugeChunks:·rt.sync.monitorInflations":
  56,000 monitors

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncFileSeekBenchmarks.seekAndReadFileUsingHugeChunks:·rt.sync.notifications":
  12,000 counts

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncFileSeekBenchmarks.seekAndReadFileUsingHugeChunks:·rt.sync.parks":
  18,000 counts

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncFileSeekBenchmarks.seekAndReadFileUsingHugeChunks:·safepoints.interval":
  1881,000 ms

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncFileSeekBenchmarks.seekAndReadFileUsingHugeChunks:·safepoints.pause":
  3,625 ±(99.9%) 0,001 ms [Sum]
  (min, avg, max) = (0,168, 1,208, 2,073), stdev = 0,965
  CI (99.9%): [3,625, 3,625] (assumes normal distribution)

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncFileSeekBenchmarks.seekAndReadFileUsingHugeChunks:·safepoints.ttsp":
  0,071 ±(99.9%) 0,001 ms [Sum]
  (min, avg, max) = (0,012, 0,024, 0,029), stdev = 0,010
  CI (99.9%): [0,071, 0,071] (assumes normal distribution)

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncFileSeekBenchmarks.seekAndReadFileUsingHugeChunks:·threads.alive":
  6,000 threads

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncFileSeekBenchmarks.seekAndReadFileUsingHugeChunks:·threads.daemon":
  5,000 threads

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncFileSeekBenchmarks.seekAndReadFileUsingHugeChunks:·threads.started":
  10,000 threads


# JMH version: 1.26
# VM version: JDK 1.8.0_102, Java HotSpot(TM) 64-Bit Server VM, 25.102-b14
# VM invoker: C:\Program Files\Java\jdk1.8.0_102\jre\bin\java.exe
# VM options: -DbenchmarkClasses= -DwarmUpSeconds=1 -DmeasurementIterations=1 -DnumberOfBenchmarkForks=1 -DwarmUpIterations=1 -DrunThreadCount=1 -Dfile.encoding=UTF-8
# Warmup: 1 iterations, 1 s each
# Measurement: 1 iterations, single-shot each
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncFileSeekBenchmarks.seekAndReadFileUsingSmallChunks

# Run progress: 99,97% complete, ETA 00:00:00
# Fork: 1 of 1
# Preparing profilers: SafepointsProfiler
# Profilers consume stdout from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/C:/Users/slabs/.m2/repository/org/slf4j/slf4j-log4j12/1.7.30/slf4j-log4j12-1.7.30.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/C:/workspace/CyBench-Intellij/build/idea-sandbox/plugins/CyBench-Intellij/lib/slf4j-log4j12-1.7.30.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
2020-11-05 09:57:46,157 INFO  [com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncFileSeekBenchmarks.seekAndReadFileUsingSmallChunks-jmh-worker-1!IOAsyncFileSeekBenchmarks] -
-->Will generate binary file for tests...
2020-11-05 09:57:46,159 INFO  [com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncFileSeekBenchmarks.seekAndReadFileUsingSmallChunks-jmh-worker-1!IOUtils] - Data file for tests exists, a new one will not be created
2020-11-05 09:57:46,160 INFO  [com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncFileSeekBenchmarks.seekAndReadFileUsingSmallChunks-jmh-worker-1!IOAsyncFileSeekBenchmarks] -
-->Generated file binary.bin for processing, size(B):1073741824
2020-11-05 09:57:46,161 INFO  [com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncFileSeekBenchmarks.seekAndReadFileUsingSmallChunks-jmh-worker-1!IOAsyncFileSeekBenchmarks] - Will generate an array of random numbers for file positions
2020-11-05 09:57:46,230 INFO  [com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncFileSeekBenchmarks.seekAndReadFileUsingSmallChunks-jmh-worker-1!IOAsyncFileSeekBenchmarks] - Generated all prerequisites!
2020-11-05 09:57:46,231 INFO  [com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncFileSeekBenchmarks.seekAndReadFileUsingSmallChunks-jmh-worker-1!IOAsyncFileSeekBenchmarks] -
 Will setup for iteration...
2020-11-05 09:57:48,881 INFO  [com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncFileSeekBenchmarks.seekAndReadFileUsingSmallChunks-jmh-worker-1!IOAsyncFileSeekBenchmarks] -
==>Iteration clean up successful!
2648,825 ms/op
Iteration   1: 2020-11-05 09:57:50,067 INFO  [com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncFileSeekBenchmarks.seekAndReadFileUsingSmallChunks-jmh-worker-1!IOAsyncFileSeekBenchmarks] -
 Will setup for iteration...
2020-11-05 09:57:52,683 INFO  [com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncFileSeekBenchmarks.seekAndReadFileUsingSmallChunks-jmh-worker-1!IOAsyncFileSeekBenchmarks] -
==>Iteration clean up successful!
2020-11-05 09:57:52,683 INFO  [com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncFileSeekBenchmarks.seekAndReadFileUsingSmallChunks-jmh-worker-1!IOAsyncFileSeekBenchmarks] -
==>Generated files were closed successfully!
2609,723 ms/op
                 ·gc.alloc.rate:                   330,572 MB/sec
                 ·gc.alloc.rate.norm:              1082650200,000 B/op
                 ·gc.churn.PS_Eden_Space:          325,130 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     1064828928,000 B/op
                 ·gc.churn.PS_Survivor_Space:      0,060 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 196608,000 B/op
                 ·gc.count:                        24,000 counts
                 ·gc.time:                         23,000 ms
                 ·rt.safepointSyncTime:            0,029 ms
                 ·rt.safepointTime:                1,163 ms
                 ·rt.safepoints:                   54,000 counts
                 ·rt.sync.contendedLockAttempts:   101,000 locks
                 ·rt.sync.fatMonitors:             128,000 monitors
                 ·rt.sync.futileWakeups:           3,000 counts
                 ·rt.sync.monitorDeflations:       58,000 monitors
                 ·rt.sync.monitorInflations:       60,000 monitors
                 ·rt.sync.notifications:           12,000 counts
                 ·rt.sync.parks:                   16,000 counts
                 ·threads.alive:                   6,000 threads
                 ·threads.daemon:                  5,000 threads
                 ·threads.started:                 10,000 threads

# Processing profiler results: SafepointsProfiler


Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncFileSeekBenchmarks.seekAndReadFileUsingSmallChunks:·gc.alloc.rate":
  330,572 MB/sec

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncFileSeekBenchmarks.seekAndReadFileUsingSmallChunks:·gc.alloc.rate.norm":
  1082650200,000 B/op

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncFileSeekBenchmarks.seekAndReadFileUsingSmallChunks:·gc.churn.PS_Eden_Space":
  325,130 MB/sec

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncFileSeekBenchmarks.seekAndReadFileUsingSmallChunks:·gc.churn.PS_Eden_Space.norm":
  1064828928,000 B/op

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncFileSeekBenchmarks.seekAndReadFileUsingSmallChunks:·gc.churn.PS_Survivor_Space":
  0,060 MB/sec

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncFileSeekBenchmarks.seekAndReadFileUsingSmallChunks:·gc.churn.PS_Survivor_Space.norm":
  196608,000 B/op

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncFileSeekBenchmarks.seekAndReadFileUsingSmallChunks:·gc.count":
  24,000 counts

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncFileSeekBenchmarks.seekAndReadFileUsingSmallChunks:·gc.time":
  23,000 ms

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncFileSeekBenchmarks.seekAndReadFileUsingSmallChunks:·rt.safepointSyncTime":
  0,029 ms

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncFileSeekBenchmarks.seekAndReadFileUsingSmallChunks:·rt.safepointTime":
  1,163 ms

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncFileSeekBenchmarks.seekAndReadFileUsingSmallChunks:·rt.safepoints":
  54,000 counts

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncFileSeekBenchmarks.seekAndReadFileUsingSmallChunks:·rt.sync.contendedLockAttempts":
  101,000 locks

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncFileSeekBenchmarks.seekAndReadFileUsingSmallChunks:·rt.sync.fatMonitors":
  128,000 monitors

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncFileSeekBenchmarks.seekAndReadFileUsingSmallChunks:·rt.sync.futileWakeups":
  3,000 counts

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncFileSeekBenchmarks.seekAndReadFileUsingSmallChunks:·rt.sync.monitorDeflations":
  58,000 monitors

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncFileSeekBenchmarks.seekAndReadFileUsingSmallChunks:·rt.sync.monitorInflations":
  60,000 monitors

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncFileSeekBenchmarks.seekAndReadFileUsingSmallChunks:·rt.sync.notifications":
  12,000 counts

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncFileSeekBenchmarks.seekAndReadFileUsingSmallChunks:·rt.sync.parks":
  16,000 counts

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncFileSeekBenchmarks.seekAndReadFileUsingSmallChunks:·safepoints.interval":
  3785,000 ms

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncFileSeekBenchmarks.seekAndReadFileUsingSmallChunks:·safepoints.pause":
  67,813 ±(99.9%) 0,001 ms [Sum]
  (min, avg, max) = (0,103, 2,422, 34,472), stdev = 6,387
  CI (99.9%): [67,813, 67,813] (assumes normal distribution)

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncFileSeekBenchmarks.seekAndReadFileUsingSmallChunks:·safepoints.ttsp":
  0,822 ±(99.9%) 0,001 ms [Sum]
  (min, avg, max) = (0,016, 0,029, 0,132), stdev = 0,023
  CI (99.9%): [0,822, 0,822] (assumes normal distribution)

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncFileSeekBenchmarks.seekAndReadFileUsingSmallChunks:·threads.alive":
  6,000 threads

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncFileSeekBenchmarks.seekAndReadFileUsingSmallChunks:·threads.daemon":
  5,000 threads

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncFileSeekBenchmarks.seekAndReadFileUsingSmallChunks:·threads.started":
  10,000 threads


# JMH version: 1.26
# VM version: JDK 1.8.0_102, Java HotSpot(TM) 64-Bit Server VM, 25.102-b14
# VM invoker: C:\Program Files\Java\jdk1.8.0_102\jre\bin\java.exe
# VM options: -DbenchmarkClasses= -DwarmUpSeconds=1 -DmeasurementIterations=1 -DnumberOfBenchmarkForks=1 -DwarmUpIterations=1 -DrunThreadCount=1 -Dfile.encoding=UTF-8
# Warmup: 1 iterations, 1 s each
# Measurement: 1 iterations, single-shot each
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncFileSeekBenchmarks.seekAndWriteFileUsingHugeChunks

# Run progress: 99,98% complete, ETA 00:00:00
# Fork: 1 of 1
# Preparing profilers: SafepointsProfiler
# Profilers consume stdout from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/C:/Users/slabs/.m2/repository/org/slf4j/slf4j-log4j12/1.7.30/slf4j-log4j12-1.7.30.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/C:/workspace/CyBench-Intellij/build/idea-sandbox/plugins/CyBench-Intellij/lib/slf4j-log4j12-1.7.30.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
2020-11-05 09:57:55,297 INFO  [com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncFileSeekBenchmarks.seekAndWriteFileUsingHugeChunks-jmh-worker-1!IOAsyncFileSeekBenchmarks] -
-->Will generate binary file for tests...
2020-11-05 09:57:55,299 INFO  [com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncFileSeekBenchmarks.seekAndWriteFileUsingHugeChunks-jmh-worker-1!IOUtils] - Data file for tests exists, a new one will not be created
2020-11-05 09:57:55,301 INFO  [com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncFileSeekBenchmarks.seekAndWriteFileUsingHugeChunks-jmh-worker-1!IOAsyncFileSeekBenchmarks] -
-->Generated file binary.bin for processing, size(B):1073741824
2020-11-05 09:57:55,302 INFO  [com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncFileSeekBenchmarks.seekAndWriteFileUsingHugeChunks-jmh-worker-1!IOAsyncFileSeekBenchmarks] - Will generate an array of random numbers for file positions
2020-11-05 09:57:55,374 INFO  [com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncFileSeekBenchmarks.seekAndWriteFileUsingHugeChunks-jmh-worker-1!IOAsyncFileSeekBenchmarks] - Generated all prerequisites!
2020-11-05 09:57:55,374 INFO  [com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncFileSeekBenchmarks.seekAndWriteFileUsingHugeChunks-jmh-worker-1!IOAsyncFileSeekBenchmarks] -
 Will setup for iteration...
2020-11-05 09:57:56,146 INFO  [com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncFileSeekBenchmarks.seekAndWriteFileUsingHugeChunks-jmh-worker-1!IOAsyncFileSeekBenchmarks] -
==>Iteration clean up successful!
769,703 ms/op
Iteration   1: 2020-11-05 09:57:57,316 INFO  [com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncFileSeekBenchmarks.seekAndWriteFileUsingHugeChunks-jmh-worker-1!IOAsyncFileSeekBenchmarks] -
 Will setup for iteration...
2020-11-05 09:57:58,069 INFO  [com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncFileSeekBenchmarks.seekAndWriteFileUsingHugeChunks-jmh-worker-1!IOAsyncFileSeekBenchmarks] -
==>Iteration clean up successful!
2020-11-05 09:57:58,124 INFO  [com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncFileSeekBenchmarks.seekAndWriteFileUsingHugeChunks-jmh-worker-1!IOAsyncFileSeekBenchmarks] -
==>Generated files were closed successfully!
747,670 ms/op
                 ·gc.alloc.rate:                 0,019 MB/sec
                 ·gc.alloc.rate.norm:            26624,000 B/op
                 ·gc.count:                      ≈ 0 counts
                 ·rt.safepointSyncTime:          0,028 ms
                 ·rt.safepointTime:              0,594 ms
                 ·rt.safepoints:                 11,000 counts
                 ·rt.sync.contendedLockAttempts: 76,000 locks
                 ·rt.sync.fatMonitors:           128,000 monitors
                 ·rt.sync.futileWakeups:         3,000 counts
                 ·rt.sync.monitorDeflations:     53,000 monitors
                 ·rt.sync.monitorInflations:     55,000 monitors
                 ·rt.sync.notifications:         10,000 counts
                 ·rt.sync.parks:                 19,000 counts
                 ·threads.alive:                 6,000 threads
                 ·threads.daemon:                5,000 threads
                 ·threads.started:               10,000 threads

# Processing profiler results: SafepointsProfiler


Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncFileSeekBenchmarks.seekAndWriteFileUsingHugeChunks:·gc.alloc.rate":
  0,019 MB/sec

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncFileSeekBenchmarks.seekAndWriteFileUsingHugeChunks:·gc.alloc.rate.norm":
  26624,000 B/op

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncFileSeekBenchmarks.seekAndWriteFileUsingHugeChunks:·gc.count":
  ≈ 0 counts

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncFileSeekBenchmarks.seekAndWriteFileUsingHugeChunks:·rt.safepointSyncTime":
  0,028 ms

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncFileSeekBenchmarks.seekAndWriteFileUsingHugeChunks:·rt.safepointTime":
  0,594 ms

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncFileSeekBenchmarks.seekAndWriteFileUsingHugeChunks:·rt.safepoints":
  11,000 counts

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncFileSeekBenchmarks.seekAndWriteFileUsingHugeChunks:·rt.sync.contendedLockAttempts":
  76,000 locks

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncFileSeekBenchmarks.seekAndWriteFileUsingHugeChunks:·rt.sync.fatMonitors":
  128,000 monitors

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncFileSeekBenchmarks.seekAndWriteFileUsingHugeChunks:·rt.sync.futileWakeups":
  3,000 counts

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncFileSeekBenchmarks.seekAndWriteFileUsingHugeChunks:·rt.sync.monitorDeflations":
  53,000 monitors

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncFileSeekBenchmarks.seekAndWriteFileUsingHugeChunks:·rt.sync.monitorInflations":
  55,000 monitors

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncFileSeekBenchmarks.seekAndWriteFileUsingHugeChunks:·rt.sync.notifications":
  10,000 counts

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncFileSeekBenchmarks.seekAndWriteFileUsingHugeChunks:·rt.sync.parks":
  19,000 counts

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncFileSeekBenchmarks.seekAndWriteFileUsingHugeChunks:·safepoints.interval":
  1977,000 ms

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncFileSeekBenchmarks.seekAndWriteFileUsingHugeChunks:·safepoints.pause":
  12,679 ±(99.9%) 0,001 ms [Sum]
  (min, avg, max) = (0,186, 4,226, 10,076), stdev = 5,187
  CI (99.9%): [12,679, 12,679] (assumes normal distribution)

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncFileSeekBenchmarks.seekAndWriteFileUsingHugeChunks:·safepoints.ttsp":
  2,379 ±(99.9%) 0,001 ms [Sum]
  (min, avg, max) = (0,034, 0,793, 2,257), stdev = 1,268
  CI (99.9%): [2,379, 2,379] (assumes normal distribution)

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncFileSeekBenchmarks.seekAndWriteFileUsingHugeChunks:·threads.alive":
  6,000 threads

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncFileSeekBenchmarks.seekAndWriteFileUsingHugeChunks:·threads.daemon":
  5,000 threads

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncFileSeekBenchmarks.seekAndWriteFileUsingHugeChunks:·threads.started":
  10,000 threads


# JMH version: 1.26
# VM version: JDK 1.8.0_102, Java HotSpot(TM) 64-Bit Server VM, 25.102-b14
# VM invoker: C:\Program Files\Java\jdk1.8.0_102\jre\bin\java.exe
# VM options: -DbenchmarkClasses= -DwarmUpSeconds=1 -DmeasurementIterations=1 -DnumberOfBenchmarkForks=1 -DwarmUpIterations=1 -DrunThreadCount=1 -Dfile.encoding=UTF-8
# Warmup: 1 iterations, 1 s each
# Measurement: 1 iterations, single-shot each
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncFileSeekBenchmarks.seekAndWriteFileUsingSmallChunks

# Run progress: 99,98% complete, ETA 00:00:00
# Fork: 1 of 1
# Preparing profilers: SafepointsProfiler
# Profilers consume stdout from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/C:/Users/slabs/.m2/repository/org/slf4j/slf4j-log4j12/1.7.30/slf4j-log4j12-1.7.30.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/C:/workspace/CyBench-Intellij/build/idea-sandbox/plugins/CyBench-Intellij/lib/slf4j-log4j12-1.7.30.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
2020-11-05 09:58:00,759 INFO  [com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncFileSeekBenchmarks.seekAndWriteFileUsingSmallChunks-jmh-worker-1!IOAsyncFileSeekBenchmarks] -
-->Will generate binary file for tests...
2020-11-05 09:58:00,781 INFO  [com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncFileSeekBenchmarks.seekAndWriteFileUsingSmallChunks-jmh-worker-1!IOUtils] - Data file for tests exists, a new one will not be created
2020-11-05 09:58:00,782 INFO  [com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncFileSeekBenchmarks.seekAndWriteFileUsingSmallChunks-jmh-worker-1!IOAsyncFileSeekBenchmarks] -
-->Generated file binary.bin for processing, size(B):1073741824
2020-11-05 09:58:00,783 INFO  [com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncFileSeekBenchmarks.seekAndWriteFileUsingSmallChunks-jmh-worker-1!IOAsyncFileSeekBenchmarks] - Will generate an array of random numbers for file positions
2020-11-05 09:58:00,854 INFO  [com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncFileSeekBenchmarks.seekAndWriteFileUsingSmallChunks-jmh-worker-1!IOAsyncFileSeekBenchmarks] - Generated all prerequisites!
2020-11-05 09:58:00,854 INFO  [com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncFileSeekBenchmarks.seekAndWriteFileUsingSmallChunks-jmh-worker-1!IOAsyncFileSeekBenchmarks] -
 Will setup for iteration...
2020-11-05 09:58:05,165 INFO  [com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncFileSeekBenchmarks.seekAndWriteFileUsingSmallChunks-jmh-worker-1!IOAsyncFileSeekBenchmarks] -
==>Iteration clean up successful!
4309,469 ms/op
Iteration   1: 2020-11-05 09:58:06,348 INFO  [com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncFileSeekBenchmarks.seekAndWriteFileUsingSmallChunks-jmh-worker-1!IOAsyncFileSeekBenchmarks] -
 Will setup for iteration...
2020-11-05 09:58:09,550 INFO  [com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncFileSeekBenchmarks.seekAndWriteFileUsingSmallChunks-jmh-worker-1!IOAsyncFileSeekBenchmarks] -
==>Iteration clean up successful!
2020-11-05 09:58:09,577 INFO  [com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncFileSeekBenchmarks.seekAndWriteFileUsingSmallChunks-jmh-worker-1!IOAsyncFileSeekBenchmarks] -
==>Generated files were closed successfully!
3196,313 ms/op
                 ·gc.alloc.rate:                 0,007 MB/sec
                 ·gc.alloc.rate.norm:            26600,000 B/op
                 ·gc.count:                      ≈ 0 counts
                 ·rt.safepointSyncTime:          0,037 ms
                 ·rt.safepointTime:              0,703 ms
                 ·rt.safepoints:                 13,000 counts
                 ·rt.sync.contendedLockAttempts: 8,000 locks
                 ·rt.sync.fatMonitors:           128,000 monitors
                 ·rt.sync.futileWakeups:         2,000 counts
                 ·rt.sync.monitorDeflations:     52,000 monitors
                 ·rt.sync.monitorInflations:     54,000 monitors
                 ·rt.sync.notifications:         13,000 counts
                 ·rt.sync.parks:                 17,000 counts
                 ·threads.alive:                 6,000 threads
                 ·threads.daemon:                5,000 threads
                 ·threads.started:               10,000 threads

# Processing profiler results: SafepointsProfiler


Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncFileSeekBenchmarks.seekAndWriteFileUsingSmallChunks:·gc.alloc.rate":
  0,007 MB/sec

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncFileSeekBenchmarks.seekAndWriteFileUsingSmallChunks:·gc.alloc.rate.norm":
  26600,000 B/op

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncFileSeekBenchmarks.seekAndWriteFileUsingSmallChunks:·gc.count":
  ≈ 0 counts

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncFileSeekBenchmarks.seekAndWriteFileUsingSmallChunks:·rt.safepointSyncTime":
  0,037 ms

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncFileSeekBenchmarks.seekAndWriteFileUsingSmallChunks:·rt.safepointTime":
  0,703 ms

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncFileSeekBenchmarks.seekAndWriteFileUsingSmallChunks:·rt.safepoints":
  13,000 counts

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncFileSeekBenchmarks.seekAndWriteFileUsingSmallChunks:·rt.sync.contendedLockAttempts":
  8,000 locks

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncFileSeekBenchmarks.seekAndWriteFileUsingSmallChunks:·rt.sync.fatMonitors":
  128,000 monitors

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncFileSeekBenchmarks.seekAndWriteFileUsingSmallChunks:·rt.sync.futileWakeups":
  2,000 counts

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncFileSeekBenchmarks.seekAndWriteFileUsingSmallChunks:·rt.sync.monitorDeflations":
  52,000 monitors

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncFileSeekBenchmarks.seekAndWriteFileUsingSmallChunks:·rt.sync.monitorInflations":
  54,000 monitors

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncFileSeekBenchmarks.seekAndWriteFileUsingSmallChunks:·rt.sync.notifications":
  13,000 counts

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncFileSeekBenchmarks.seekAndWriteFileUsingSmallChunks:·rt.sync.parks":
  17,000 counts

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncFileSeekBenchmarks.seekAndWriteFileUsingSmallChunks:·safepoints.interval":
  4403,000 ms

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncFileSeekBenchmarks.seekAndWriteFileUsingSmallChunks:·safepoints.pause":
  0,302 ±(99.9%) 0,001 ms [Sum]
  (min, avg, max) = (0,079, 0,101, 0,133), stdev = 0,029
  CI (99.9%): [0,302, 0,302] (assumes normal distribution)

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncFileSeekBenchmarks.seekAndWriteFileUsingSmallChunks:·safepoints.ttsp":
  0,141 ±(99.9%) 0,001 ms [Sum]
  (min, avg, max) = (0,021, 0,047, 0,077), stdev = 0,028
  CI (99.9%): [0,141, 0,141] (assumes normal distribution)

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncFileSeekBenchmarks.seekAndWriteFileUsingSmallChunks:·threads.alive":
  6,000 threads

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncFileSeekBenchmarks.seekAndWriteFileUsingSmallChunks:·threads.daemon":
  5,000 threads

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOAsyncFileSeekBenchmarks.seekAndWriteFileUsingSmallChunks:·threads.started":
  10,000 threads


# JMH version: 1.26
# VM version: JDK 1.8.0_102, Java HotSpot(TM) 64-Bit Server VM, 25.102-b14
# VM invoker: C:\Program Files\Java\jdk1.8.0_102\jre\bin\java.exe
# VM options: -DbenchmarkClasses= -DwarmUpSeconds=1 -DmeasurementIterations=1 -DnumberOfBenchmarkForks=1 -DwarmUpIterations=1 -DrunThreadCount=1 -Dfile.encoding=UTF-8
# Warmup: 1 iterations, 1 s each
# Measurement: 1 iterations, single-shot each
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.gocypher.cybench.jmh.jvm.client.tests.IOSyncAPIComparisonBenchmarks.copyFileUsingBufferedStreamAndHugeChunks

# Run progress: 99,98% complete, ETA 00:00:00
# Fork: 1 of 1
# Preparing profilers: SafepointsProfiler
# Profilers consume stdout from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/C:/Users/slabs/.m2/repository/org/slf4j/slf4j-log4j12/1.7.30/slf4j-log4j12-1.7.30.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/C:/workspace/CyBench-Intellij/build/idea-sandbox/plugins/CyBench-Intellij/lib/slf4j-log4j12-1.7.30.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
2020-11-05 09:58:12,151 INFO  [com.gocypher.cybench.jmh.jvm.client.tests.IOSyncAPIComparisonBenchmarks.copyFileUsingBufferedStreamAndHugeChunks-jmh-worker-1!IOSyncAPIComparisonBenchmarks] -
-->Will generate binary file for tests...
2020-11-05 09:58:14,506 INFO  [com.gocypher.cybench.jmh.jvm.client.tests.IOSyncAPIComparisonBenchmarks.copyFileUsingBufferedStreamAndHugeChunks-jmh-worker-1!IOSyncAPIComparisonBenchmarks] -
-->Generated file small_binary.bin for processing, size(B):134217728
2020-11-05 09:58:14,510 INFO  [com.gocypher.cybench.jmh.jvm.client.tests.IOSyncAPIComparisonBenchmarks.copyFileUsingBufferedStreamAndHugeChunks-jmh-worker-1!IOSyncAPIComparisonBenchmarks] -
 Will setup for iteration...
2020-11-05 09:58:14,949 INFO  [com.gocypher.cybench.jmh.jvm.client.tests.IOSyncAPIComparisonBenchmarks.copyFileUsingBufferedStreamAndHugeChunks-jmh-worker-1!IOSyncAPIComparisonBenchmarks] -
==>Iteration clean up successful!
429,012 ms/op
Iteration   1: 2020-11-05 09:58:16,145 INFO  [com.gocypher.cybench.jmh.jvm.client.tests.IOSyncAPIComparisonBenchmarks.copyFileUsingBufferedStreamAndHugeChunks-jmh-worker-1!IOSyncAPIComparisonBenchmarks] -
 Will setup for iteration...
2020-11-05 09:58:16,591 INFO  [com.gocypher.cybench.jmh.jvm.client.tests.IOSyncAPIComparisonBenchmarks.copyFileUsingBufferedStreamAndHugeChunks-jmh-worker-1!IOSyncAPIComparisonBenchmarks] -
==>Iteration clean up successful!
2020-11-05 09:58:16,591 INFO  [com.gocypher.cybench.jmh.jvm.client.tests.IOSyncAPIComparisonBenchmarks.copyFileUsingBufferedStreamAndHugeChunks-jmh-worker-1!IOSyncAPIComparisonBenchmarks] -
==>Generated files were closed successfully!
435,330 ms/op
                 ·gc.alloc.rate:                 66,817 MB/sec
                 ·gc.alloc.rate.norm:            67150416,000 B/op
                 ·gc.count:                      ≈ 0 counts
                 ·rt.safepointSyncTime:          0,012 ms
                 ·rt.safepointTime:              0,726 ms
                 ·rt.safepoints:                 19,000 counts
                 ·rt.sync.contendedLockAttempts: 81,000 locks
                 ·rt.sync.fatMonitors:           128,000 monitors
                 ·rt.sync.futileWakeups:         4,000 counts
                 ·rt.sync.monitorDeflations:     56,000 monitors
                 ·rt.sync.monitorInflations:     58,000 monitors
                 ·rt.sync.notifications:         12,000 counts
                 ·rt.sync.parks:                 18,000 counts
                 ·threads.alive:                 6,000 threads
                 ·threads.daemon:                5,000 threads
                 ·threads.started:               10,000 threads

# Processing profiler results: SafepointsProfiler


Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOSyncAPIComparisonBenchmarks.copyFileUsingBufferedStreamAndHugeChunks:·gc.alloc.rate":
  66,817 MB/sec

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOSyncAPIComparisonBenchmarks.copyFileUsingBufferedStreamAndHugeChunks:·gc.alloc.rate.norm":
  67150416,000 B/op

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOSyncAPIComparisonBenchmarks.copyFileUsingBufferedStreamAndHugeChunks:·gc.count":
  ≈ 0 counts

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOSyncAPIComparisonBenchmarks.copyFileUsingBufferedStreamAndHugeChunks:·rt.safepointSyncTime":
  0,012 ms

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOSyncAPIComparisonBenchmarks.copyFileUsingBufferedStreamAndHugeChunks:·rt.safepointTime":
  0,726 ms

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOSyncAPIComparisonBenchmarks.copyFileUsingBufferedStreamAndHugeChunks:·rt.safepoints":
  19,000 counts

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOSyncAPIComparisonBenchmarks.copyFileUsingBufferedStreamAndHugeChunks:·rt.sync.contendedLockAttempts":
  81,000 locks

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOSyncAPIComparisonBenchmarks.copyFileUsingBufferedStreamAndHugeChunks:·rt.sync.fatMonitors":
  128,000 monitors

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOSyncAPIComparisonBenchmarks.copyFileUsingBufferedStreamAndHugeChunks:·rt.sync.futileWakeups":
  4,000 counts

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOSyncAPIComparisonBenchmarks.copyFileUsingBufferedStreamAndHugeChunks:·rt.sync.monitorDeflations":
  56,000 monitors

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOSyncAPIComparisonBenchmarks.copyFileUsingBufferedStreamAndHugeChunks:·rt.sync.monitorInflations":
  58,000 monitors

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOSyncAPIComparisonBenchmarks.copyFileUsingBufferedStreamAndHugeChunks:·rt.sync.notifications":
  12,000 counts

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOSyncAPIComparisonBenchmarks.copyFileUsingBufferedStreamAndHugeChunks:·rt.sync.parks":
  18,000 counts

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOSyncAPIComparisonBenchmarks.copyFileUsingBufferedStreamAndHugeChunks:·safepoints.interval":
  1634,000 ms

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOSyncAPIComparisonBenchmarks.copyFileUsingBufferedStreamAndHugeChunks:·safepoints.pause":
  10,879 ±(99.9%) 0,001 ms [Sum]
  (min, avg, max) = (0,039, 2,720, 10,650), stdev = 5,287
  CI (99.9%): [10,879, 10,879] (assumes normal distribution)

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOSyncAPIComparisonBenchmarks.copyFileUsingBufferedStreamAndHugeChunks:·safepoints.ttsp":
  0,091 ±(99.9%) 0,001 ms [Sum]
  (min, avg, max) = (0,014, 0,023, 0,044), stdev = 0,014
  CI (99.9%): [0,091, 0,091] (assumes normal distribution)

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOSyncAPIComparisonBenchmarks.copyFileUsingBufferedStreamAndHugeChunks:·threads.alive":
  6,000 threads

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOSyncAPIComparisonBenchmarks.copyFileUsingBufferedStreamAndHugeChunks:·threads.daemon":
  5,000 threads

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOSyncAPIComparisonBenchmarks.copyFileUsingBufferedStreamAndHugeChunks:·threads.started":
  10,000 threads


# JMH version: 1.26
# VM version: JDK 1.8.0_102, Java HotSpot(TM) 64-Bit Server VM, 25.102-b14
# VM invoker: C:\Program Files\Java\jdk1.8.0_102\jre\bin\java.exe
# VM options: -DbenchmarkClasses= -DwarmUpSeconds=1 -DmeasurementIterations=1 -DnumberOfBenchmarkForks=1 -DwarmUpIterations=1 -DrunThreadCount=1 -Dfile.encoding=UTF-8
# Warmup: 1 iterations, 1 s each
# Measurement: 1 iterations, single-shot each
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.gocypher.cybench.jmh.jvm.client.tests.IOSyncAPIComparisonBenchmarks.copyFileUsingBufferedStreamAndSmallChunks

# Run progress: 99,98% complete, ETA 00:00:00
# Fork: 1 of 1
# Preparing profilers: SafepointsProfiler
# Profilers consume stdout from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/C:/Users/slabs/.m2/repository/org/slf4j/slf4j-log4j12/1.7.30/slf4j-log4j12-1.7.30.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/C:/workspace/CyBench-Intellij/build/idea-sandbox/plugins/CyBench-Intellij/lib/slf4j-log4j12-1.7.30.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
2020-11-05 09:58:19,255 INFO  [com.gocypher.cybench.jmh.jvm.client.tests.IOSyncAPIComparisonBenchmarks.copyFileUsingBufferedStreamAndSmallChunks-jmh-worker-1!IOSyncAPIComparisonBenchmarks] -
-->Will generate binary file for tests...
2020-11-05 09:58:19,258 INFO  [com.gocypher.cybench.jmh.jvm.client.tests.IOSyncAPIComparisonBenchmarks.copyFileUsingBufferedStreamAndSmallChunks-jmh-worker-1!IOUtils] - Data file for tests exists, a new one will not be created
2020-11-05 09:58:19,260 INFO  [com.gocypher.cybench.jmh.jvm.client.tests.IOSyncAPIComparisonBenchmarks.copyFileUsingBufferedStreamAndSmallChunks-jmh-worker-1!IOSyncAPIComparisonBenchmarks] -
-->Generated file small_binary.bin for processing, size(B):134217728
2020-11-05 09:58:19,267 INFO  [com.gocypher.cybench.jmh.jvm.client.tests.IOSyncAPIComparisonBenchmarks.copyFileUsingBufferedStreamAndSmallChunks-jmh-worker-1!IOSyncAPIComparisonBenchmarks] -
 Will setup for iteration...
2020-11-05 09:58:19,457 INFO  [com.gocypher.cybench.jmh.jvm.client.tests.IOSyncAPIComparisonBenchmarks.copyFileUsingBufferedStreamAndSmallChunks-jmh-worker-1!IOSyncAPIComparisonBenchmarks] -
==>Iteration clean up successful!
179,105 ms/op
Iteration   1: 2020-11-05 09:58:20,624 INFO  [com.gocypher.cybench.jmh.jvm.client.tests.IOSyncAPIComparisonBenchmarks.copyFileUsingBufferedStreamAndSmallChunks-jmh-worker-1!IOSyncAPIComparisonBenchmarks] -
 Will setup for iteration...
2020-11-05 09:58:20,830 INFO  [com.gocypher.cybench.jmh.jvm.client.tests.IOSyncAPIComparisonBenchmarks.copyFileUsingBufferedStreamAndSmallChunks-jmh-worker-1!IOSyncAPIComparisonBenchmarks] -
==>Iteration clean up successful!
2020-11-05 09:58:20,830 INFO  [com.gocypher.cybench.jmh.jvm.client.tests.IOSyncAPIComparisonBenchmarks.copyFileUsingBufferedStreamAndSmallChunks-jmh-worker-1!IOSyncAPIComparisonBenchmarks] -
==>Generated files were closed successfully!
192,910 ms/op
                 ·gc.alloc.rate:                 0,078 MB/sec
                 ·gc.alloc.rate.norm:            58672,000 B/op
                 ·gc.count:                      ≈ 0 counts
                 ·rt.safepointSyncTime:          0,003 ms
                 ·rt.safepointTime:              0,527 ms
                 ·rt.safepoints:                 9,000 counts
                 ·rt.sync.contendedLockAttempts: 76,000 locks
                 ·rt.sync.fatMonitors:           128,000 monitors
                 ·rt.sync.futileWakeups:         2,000 counts
                 ·rt.sync.monitorDeflations:     55,000 monitors
                 ·rt.sync.monitorInflations:     57,000 monitors
                 ·rt.sync.notifications:         10,000 counts
                 ·rt.sync.parks:                 15,000 counts
                 ·threads.alive:                 6,000 threads
                 ·threads.daemon:                5,000 threads
                 ·threads.started:               10,000 threads

# Processing profiler results: SafepointsProfiler


Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOSyncAPIComparisonBenchmarks.copyFileUsingBufferedStreamAndSmallChunks:·gc.alloc.rate":
  0,078 MB/sec

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOSyncAPIComparisonBenchmarks.copyFileUsingBufferedStreamAndSmallChunks:·gc.alloc.rate.norm":
  58672,000 B/op

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOSyncAPIComparisonBenchmarks.copyFileUsingBufferedStreamAndSmallChunks:·gc.count":
  ≈ 0 counts

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOSyncAPIComparisonBenchmarks.copyFileUsingBufferedStreamAndSmallChunks:·rt.safepointSyncTime":
  0,003 ms

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOSyncAPIComparisonBenchmarks.copyFileUsingBufferedStreamAndSmallChunks:·rt.safepointTime":
  0,527 ms

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOSyncAPIComparisonBenchmarks.copyFileUsingBufferedStreamAndSmallChunks:·rt.safepoints":
  9,000 counts

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOSyncAPIComparisonBenchmarks.copyFileUsingBufferedStreamAndSmallChunks:·rt.sync.contendedLockAttempts":
  76,000 locks

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOSyncAPIComparisonBenchmarks.copyFileUsingBufferedStreamAndSmallChunks:·rt.sync.fatMonitors":
  128,000 monitors

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOSyncAPIComparisonBenchmarks.copyFileUsingBufferedStreamAndSmallChunks:·rt.sync.futileWakeups":
  2,000 counts

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOSyncAPIComparisonBenchmarks.copyFileUsingBufferedStreamAndSmallChunks:·rt.sync.monitorDeflations":
  55,000 monitors

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOSyncAPIComparisonBenchmarks.copyFileUsingBufferedStreamAndSmallChunks:·rt.sync.monitorInflations":
  57,000 monitors

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOSyncAPIComparisonBenchmarks.copyFileUsingBufferedStreamAndSmallChunks:·rt.sync.notifications":
  10,000 counts

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOSyncAPIComparisonBenchmarks.copyFileUsingBufferedStreamAndSmallChunks:·rt.sync.parks":
  15,000 counts

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOSyncAPIComparisonBenchmarks.copyFileUsingBufferedStreamAndSmallChunks:·safepoints.interval":
  1363,000 ms

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOSyncAPIComparisonBenchmarks.copyFileUsingBufferedStreamAndSmallChunks:·safepoints.pause":
  0,303 ms

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOSyncAPIComparisonBenchmarks.copyFileUsingBufferedStreamAndSmallChunks:·safepoints.ttsp":
  0,148 ms

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOSyncAPIComparisonBenchmarks.copyFileUsingBufferedStreamAndSmallChunks:·threads.alive":
  6,000 threads

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOSyncAPIComparisonBenchmarks.copyFileUsingBufferedStreamAndSmallChunks:·threads.daemon":
  5,000 threads

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOSyncAPIComparisonBenchmarks.copyFileUsingBufferedStreamAndSmallChunks:·threads.started":
  10,000 threads


# JMH version: 1.26
# VM version: JDK 1.8.0_102, Java HotSpot(TM) 64-Bit Server VM, 25.102-b14
# VM invoker: C:\Program Files\Java\jdk1.8.0_102\jre\bin\java.exe
# VM options: -DbenchmarkClasses= -DwarmUpSeconds=1 -DmeasurementIterations=1 -DnumberOfBenchmarkForks=1 -DwarmUpIterations=1 -DrunThreadCount=1 -Dfile.encoding=UTF-8
# Warmup: 1 iterations, 1 s each
# Measurement: 1 iterations, single-shot each
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.gocypher.cybench.jmh.jvm.client.tests.IOSyncAPIComparisonBenchmarks.copyFileUsingDirectBufferedStreamAndHugeChunks

# Run progress: 99,98% complete, ETA 00:00:00
# Fork: 1 of 1
# Preparing profilers: SafepointsProfiler
# Profilers consume stdout from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/C:/Users/slabs/.m2/repository/org/slf4j/slf4j-log4j12/1.7.30/slf4j-log4j12-1.7.30.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/C:/workspace/CyBench-Intellij/build/idea-sandbox/plugins/CyBench-Intellij/lib/slf4j-log4j12-1.7.30.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
2020-11-05 09:58:23,438 INFO  [com.gocypher.cybench.jmh.jvm.client.tests.IOSyncAPIComparisonBenchmarks.copyFileUsingDirectBufferedStreamAndHugeChunks-jmh-worker-1!IOSyncAPIComparisonBenchmarks] -
-->Will generate binary file for tests...
2020-11-05 09:58:23,441 INFO  [com.gocypher.cybench.jmh.jvm.client.tests.IOSyncAPIComparisonBenchmarks.copyFileUsingDirectBufferedStreamAndHugeChunks-jmh-worker-1!IOUtils] - Data file for tests exists, a new one will not be created
2020-11-05 09:58:23,442 INFO  [com.gocypher.cybench.jmh.jvm.client.tests.IOSyncAPIComparisonBenchmarks.copyFileUsingDirectBufferedStreamAndHugeChunks-jmh-worker-1!IOSyncAPIComparisonBenchmarks] -
-->Generated file small_binary.bin for processing, size(B):134217728
2020-11-05 09:58:23,448 INFO  [com.gocypher.cybench.jmh.jvm.client.tests.IOSyncAPIComparisonBenchmarks.copyFileUsingDirectBufferedStreamAndHugeChunks-jmh-worker-1!IOSyncAPIComparisonBenchmarks] -
 Will setup for iteration...
2020-11-05 09:58:24,004 INFO  [com.gocypher.cybench.jmh.jvm.client.tests.IOSyncAPIComparisonBenchmarks.copyFileUsingDirectBufferedStreamAndHugeChunks-jmh-worker-1!IOSyncAPIComparisonBenchmarks] -
==>Iteration clean up successful!
545,681 ms/op
Iteration   1: 2020-11-05 09:58:25,188 INFO  [com.gocypher.cybench.jmh.jvm.client.tests.IOSyncAPIComparisonBenchmarks.copyFileUsingDirectBufferedStreamAndHugeChunks-jmh-worker-1!IOSyncAPIComparisonBenchmarks] -
 Will setup for iteration...
2020-11-05 09:58:25,713 INFO  [com.gocypher.cybench.jmh.jvm.client.tests.IOSyncAPIComparisonBenchmarks.copyFileUsingDirectBufferedStreamAndHugeChunks-jmh-worker-1!IOSyncAPIComparisonBenchmarks] -
==>Iteration clean up successful!
2020-11-05 09:58:25,713 INFO  [com.gocypher.cybench.jmh.jvm.client.tests.IOSyncAPIComparisonBenchmarks.copyFileUsingDirectBufferedStreamAndHugeChunks-jmh-worker-1!IOSyncAPIComparisonBenchmarks] -
==>Generated files were closed successfully!
512,343 ms/op
                 ·gc.alloc.rate:                 307,109 MB/sec
                 ·gc.alloc.rate.norm:            335569216,000 B/op
                 ·gc.count:                      ≈ 0 counts
                 ·rt.safepointSyncTime:          0,004 ms
                 ·rt.safepointTime:              0,671 ms
                 ·rt.safepoints:                 11,000 counts
                 ·rt.sync.contendedLockAttempts: 69,000 locks
                 ·rt.sync.fatMonitors:           128,000 monitors
                 ·rt.sync.futileWakeups:         9,000 counts
                 ·rt.sync.monitorDeflations:     53,000 monitors
                 ·rt.sync.monitorInflations:     55,000 monitors
                 ·rt.sync.notifications:         10,000 counts
                 ·rt.sync.parks:                 22,000 counts
                 ·threads.alive:                 6,000 threads
                 ·threads.daemon:                5,000 threads
                 ·threads.started:               10,000 threads

# Processing profiler results: SafepointsProfiler


Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOSyncAPIComparisonBenchmarks.copyFileUsingDirectBufferedStreamAndHugeChunks:·gc.alloc.rate":
  307,109 MB/sec

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOSyncAPIComparisonBenchmarks.copyFileUsingDirectBufferedStreamAndHugeChunks:·gc.alloc.rate.norm":
  335569216,000 B/op

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOSyncAPIComparisonBenchmarks.copyFileUsingDirectBufferedStreamAndHugeChunks:·gc.count":
  ≈ 0 counts

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOSyncAPIComparisonBenchmarks.copyFileUsingDirectBufferedStreamAndHugeChunks:·rt.safepointSyncTime":
  0,004 ms

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOSyncAPIComparisonBenchmarks.copyFileUsingDirectBufferedStreamAndHugeChunks:·rt.safepointTime":
  0,671 ms

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOSyncAPIComparisonBenchmarks.copyFileUsingDirectBufferedStreamAndHugeChunks:·rt.safepoints":
  11,000 counts

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOSyncAPIComparisonBenchmarks.copyFileUsingDirectBufferedStreamAndHugeChunks:·rt.sync.contendedLockAttempts":
  69,000 locks

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOSyncAPIComparisonBenchmarks.copyFileUsingDirectBufferedStreamAndHugeChunks:·rt.sync.fatMonitors":
  128,000 monitors

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOSyncAPIComparisonBenchmarks.copyFileUsingDirectBufferedStreamAndHugeChunks:·rt.sync.futileWakeups":
  9,000 counts

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOSyncAPIComparisonBenchmarks.copyFileUsingDirectBufferedStreamAndHugeChunks:·rt.sync.monitorDeflations":
  53,000 monitors

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOSyncAPIComparisonBenchmarks.copyFileUsingDirectBufferedStreamAndHugeChunks:·rt.sync.monitorInflations":
  55,000 monitors

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOSyncAPIComparisonBenchmarks.copyFileUsingDirectBufferedStreamAndHugeChunks:·rt.sync.notifications":
  10,000 counts

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOSyncAPIComparisonBenchmarks.copyFileUsingDirectBufferedStreamAndHugeChunks:·rt.sync.parks":
  22,000 counts

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOSyncAPIComparisonBenchmarks.copyFileUsingDirectBufferedStreamAndHugeChunks:·safepoints.interval":
  1704,000 ms

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOSyncAPIComparisonBenchmarks.copyFileUsingDirectBufferedStreamAndHugeChunks:·safepoints.pause":
  49,503 ±(99.9%) 0,001 ms [Sum]
  (min, avg, max) = (0,155, 16,501, 38,928), stdev = 20,089
  CI (99.9%): [49,503, 49,503] (assumes normal distribution)

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOSyncAPIComparisonBenchmarks.copyFileUsingDirectBufferedStreamAndHugeChunks:·safepoints.ttsp":
  0,105 ±(99.9%) 0,001 ms [Sum]
  (min, avg, max) = (0,027, 0,035, 0,048), stdev = 0,012
  CI (99.9%): [0,105, 0,105] (assumes normal distribution)

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOSyncAPIComparisonBenchmarks.copyFileUsingDirectBufferedStreamAndHugeChunks:·threads.alive":
  6,000 threads

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOSyncAPIComparisonBenchmarks.copyFileUsingDirectBufferedStreamAndHugeChunks:·threads.daemon":
  5,000 threads

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOSyncAPIComparisonBenchmarks.copyFileUsingDirectBufferedStreamAndHugeChunks:·threads.started":
  10,000 threads


# JMH version: 1.26
# VM version: JDK 1.8.0_102, Java HotSpot(TM) 64-Bit Server VM, 25.102-b14
# VM invoker: C:\Program Files\Java\jdk1.8.0_102\jre\bin\java.exe
# VM options: -DbenchmarkClasses= -DwarmUpSeconds=1 -DmeasurementIterations=1 -DnumberOfBenchmarkForks=1 -DwarmUpIterations=1 -DrunThreadCount=1 -Dfile.encoding=UTF-8
# Warmup: 1 iterations, 1 s each
# Measurement: 1 iterations, single-shot each
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.gocypher.cybench.jmh.jvm.client.tests.IOSyncAPIComparisonBenchmarks.copyFileUsingDirectBufferedStreamAndSmallChunks

# Run progress: 99,98% complete, ETA 00:00:00
# Fork: 1 of 1
# Preparing profilers: SafepointsProfiler
# Profilers consume stdout from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/C:/Users/slabs/.m2/repository/org/slf4j/slf4j-log4j12/1.7.30/slf4j-log4j12-1.7.30.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/C:/workspace/CyBench-Intellij/build/idea-sandbox/plugins/CyBench-Intellij/lib/slf4j-log4j12-1.7.30.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
2020-11-05 09:58:28,381 INFO  [com.gocypher.cybench.jmh.jvm.client.tests.IOSyncAPIComparisonBenchmarks.copyFileUsingDirectBufferedStreamAndSmallChunks-jmh-worker-1!IOSyncAPIComparisonBenchmarks] -
-->Will generate binary file for tests...
2020-11-05 09:58:28,384 INFO  [com.gocypher.cybench.jmh.jvm.client.tests.IOSyncAPIComparisonBenchmarks.copyFileUsingDirectBufferedStreamAndSmallChunks-jmh-worker-1!IOUtils] - Data file for tests exists, a new one will not be created
2020-11-05 09:58:28,385 INFO  [com.gocypher.cybench.jmh.jvm.client.tests.IOSyncAPIComparisonBenchmarks.copyFileUsingDirectBufferedStreamAndSmallChunks-jmh-worker-1!IOSyncAPIComparisonBenchmarks] -
-->Generated file small_binary.bin for processing, size(B):134217728
2020-11-05 09:58:28,391 INFO  [com.gocypher.cybench.jmh.jvm.client.tests.IOSyncAPIComparisonBenchmarks.copyFileUsingDirectBufferedStreamAndSmallChunks-jmh-worker-1!IOSyncAPIComparisonBenchmarks] -
 Will setup for iteration...
2020-11-05 09:58:28,598 INFO  [com.gocypher.cybench.jmh.jvm.client.tests.IOSyncAPIComparisonBenchmarks.copyFileUsingDirectBufferedStreamAndSmallChunks-jmh-worker-1!IOSyncAPIComparisonBenchmarks] -
==>Iteration clean up successful!
195,159 ms/op
Iteration   1: 2020-11-05 09:58:29,769 INFO  [com.gocypher.cybench.jmh.jvm.client.tests.IOSyncAPIComparisonBenchmarks.copyFileUsingDirectBufferedStreamAndSmallChunks-jmh-worker-1!IOSyncAPIComparisonBenchmarks] -
 Will setup for iteration...
2020-11-05 09:58:29,972 INFO  [com.gocypher.cybench.jmh.jvm.client.tests.IOSyncAPIComparisonBenchmarks.copyFileUsingDirectBufferedStreamAndSmallChunks-jmh-worker-1!IOSyncAPIComparisonBenchmarks] -
==>Iteration clean up successful!
2020-11-05 09:58:29,972 INFO  [com.gocypher.cybench.jmh.jvm.client.tests.IOSyncAPIComparisonBenchmarks.copyFileUsingDirectBufferedStreamAndSmallChunks-jmh-worker-1!IOSyncAPIComparisonBenchmarks] -
==>Generated files were closed successfully!
189,514 ms/op
                 ·gc.alloc.rate:                 0,143 MB/sec
                 ·gc.alloc.rate.norm:            106856,000 B/op
                 ·gc.count:                      ≈ 0 counts
                 ·rt.safepointSyncTime:          0,002 ms
                 ·rt.safepointTime:              0,513 ms
                 ·rt.safepoints:                 9,000 counts
                 ·rt.sync.contendedLockAttempts: 58,000 locks
                 ·rt.sync.fatMonitors:           128,000 monitors
                 ·rt.sync.futileWakeups:         7,000 counts
                 ·rt.sync.monitorDeflations:     55,000 monitors
                 ·rt.sync.monitorInflations:     57,000 monitors
                 ·rt.sync.notifications:         12,000 counts
                 ·rt.sync.parks:                 27,000 counts
                 ·threads.alive:                 6,000 threads
                 ·threads.daemon:                5,000 threads
                 ·threads.started:               10,000 threads

# Processing profiler results: SafepointsProfiler


Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOSyncAPIComparisonBenchmarks.copyFileUsingDirectBufferedStreamAndSmallChunks:·gc.alloc.rate":
  0,143 MB/sec

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOSyncAPIComparisonBenchmarks.copyFileUsingDirectBufferedStreamAndSmallChunks:·gc.alloc.rate.norm":
  106856,000 B/op

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOSyncAPIComparisonBenchmarks.copyFileUsingDirectBufferedStreamAndSmallChunks:·gc.count":
  ≈ 0 counts

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOSyncAPIComparisonBenchmarks.copyFileUsingDirectBufferedStreamAndSmallChunks:·rt.safepointSyncTime":
  0,002 ms

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOSyncAPIComparisonBenchmarks.copyFileUsingDirectBufferedStreamAndSmallChunks:·rt.safepointTime":
  0,513 ms

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOSyncAPIComparisonBenchmarks.copyFileUsingDirectBufferedStreamAndSmallChunks:·rt.safepoints":
  9,000 counts

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOSyncAPIComparisonBenchmarks.copyFileUsingDirectBufferedStreamAndSmallChunks:·rt.sync.contendedLockAttempts":
  58,000 locks

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOSyncAPIComparisonBenchmarks.copyFileUsingDirectBufferedStreamAndSmallChunks:·rt.sync.fatMonitors":
  128,000 monitors

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOSyncAPIComparisonBenchmarks.copyFileUsingDirectBufferedStreamAndSmallChunks:·rt.sync.futileWakeups":
  7,000 counts

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOSyncAPIComparisonBenchmarks.copyFileUsingDirectBufferedStreamAndSmallChunks:·rt.sync.monitorDeflations":
  55,000 monitors

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOSyncAPIComparisonBenchmarks.copyFileUsingDirectBufferedStreamAndSmallChunks:·rt.sync.monitorInflations":
  57,000 monitors

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOSyncAPIComparisonBenchmarks.copyFileUsingDirectBufferedStreamAndSmallChunks:·rt.sync.notifications":
  12,000 counts

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOSyncAPIComparisonBenchmarks.copyFileUsingDirectBufferedStreamAndSmallChunks:·rt.sync.parks":
  27,000 counts

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOSyncAPIComparisonBenchmarks.copyFileUsingDirectBufferedStreamAndSmallChunks:·safepoints.interval":
  1364,000 ms

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOSyncAPIComparisonBenchmarks.copyFileUsingDirectBufferedStreamAndSmallChunks:·safepoints.pause":
  0,208 ms

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOSyncAPIComparisonBenchmarks.copyFileUsingDirectBufferedStreamAndSmallChunks:·safepoints.ttsp":
  0,044 ms

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOSyncAPIComparisonBenchmarks.copyFileUsingDirectBufferedStreamAndSmallChunks:·threads.alive":
  6,000 threads

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOSyncAPIComparisonBenchmarks.copyFileUsingDirectBufferedStreamAndSmallChunks:·threads.daemon":
  5,000 threads

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOSyncAPIComparisonBenchmarks.copyFileUsingDirectBufferedStreamAndSmallChunks:·threads.started":
  10,000 threads


# JMH version: 1.26
# VM version: JDK 1.8.0_102, Java HotSpot(TM) 64-Bit Server VM, 25.102-b14
# VM invoker: C:\Program Files\Java\jdk1.8.0_102\jre\bin\java.exe
# VM options: -DbenchmarkClasses= -DwarmUpSeconds=1 -DmeasurementIterations=1 -DnumberOfBenchmarkForks=1 -DwarmUpIterations=1 -DrunThreadCount=1 -Dfile.encoding=UTF-8
# Warmup: 1 iterations, 1 s each
# Measurement: 1 iterations, single-shot each
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.gocypher.cybench.jmh.jvm.client.tests.IOSyncAPIComparisonBenchmarks.copyFileUsingFileStreamAndHugeChunks

# Run progress: 99,99% complete, ETA 00:00:00
# Fork: 1 of 1
# Preparing profilers: SafepointsProfiler
# Profilers consume stdout from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/C:/Users/slabs/.m2/repository/org/slf4j/slf4j-log4j12/1.7.30/slf4j-log4j12-1.7.30.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/C:/workspace/CyBench-Intellij/build/idea-sandbox/plugins/CyBench-Intellij/lib/slf4j-log4j12-1.7.30.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
2020-11-05 09:58:32,583 INFO  [com.gocypher.cybench.jmh.jvm.client.tests.IOSyncAPIComparisonBenchmarks.copyFileUsingFileStreamAndHugeChunks-jmh-worker-1!IOSyncAPIComparisonBenchmarks] -
-->Will generate binary file for tests...
2020-11-05 09:58:32,586 INFO  [com.gocypher.cybench.jmh.jvm.client.tests.IOSyncAPIComparisonBenchmarks.copyFileUsingFileStreamAndHugeChunks-jmh-worker-1!IOUtils] - Data file for tests exists, a new one will not be created
2020-11-05 09:58:32,587 INFO  [com.gocypher.cybench.jmh.jvm.client.tests.IOSyncAPIComparisonBenchmarks.copyFileUsingFileStreamAndHugeChunks-jmh-worker-1!IOSyncAPIComparisonBenchmarks] -
-->Generated file small_binary.bin for processing, size(B):134217728
2020-11-05 09:58:32,594 INFO  [com.gocypher.cybench.jmh.jvm.client.tests.IOSyncAPIComparisonBenchmarks.copyFileUsingFileStreamAndHugeChunks-jmh-worker-1!IOSyncAPIComparisonBenchmarks] -
 Will setup for iteration...
2020-11-05 09:58:33,041 INFO  [com.gocypher.cybench.jmh.jvm.client.tests.IOSyncAPIComparisonBenchmarks.copyFileUsingFileStreamAndHugeChunks-jmh-worker-1!IOSyncAPIComparisonBenchmarks] -
==>Iteration clean up successful!
435,312 ms/op
Iteration   1: 2020-11-05 09:58:34,216 INFO  [com.gocypher.cybench.jmh.jvm.client.tests.IOSyncAPIComparisonBenchmarks.copyFileUsingFileStreamAndHugeChunks-jmh-worker-1!IOSyncAPIComparisonBenchmarks] -
 Will setup for iteration...
2020-11-05 09:58:34,674 INFO  [com.gocypher.cybench.jmh.jvm.client.tests.IOSyncAPIComparisonBenchmarks.copyFileUsingFileStreamAndHugeChunks-jmh-worker-1!IOSyncAPIComparisonBenchmarks] -
==>Iteration clean up successful!
2020-11-05 09:58:34,674 INFO  [com.gocypher.cybench.jmh.jvm.client.tests.IOSyncAPIComparisonBenchmarks.copyFileUsingFileStreamAndHugeChunks-jmh-worker-1!IOSyncAPIComparisonBenchmarks] -
==>Generated files were closed successfully!
445,356 ms/op
                 ·gc.alloc.rate:                 66,378 MB/sec
                 ·gc.alloc.rate.norm:            67132920,000 B/op
                 ·gc.count:                      ≈ 0 counts
                 ·rt.safepointSyncTime:          0,017 ms
                 ·rt.safepointTime:              0,537 ms
                 ·rt.safepoints:                 11,000 counts
                 ·rt.sync.contendedLockAttempts: 80,000 locks
                 ·rt.sync.fatMonitors:           128,000 monitors
                 ·rt.sync.futileWakeups:         3,000 counts
                 ·rt.sync.monitorDeflations:     54,000 monitors
                 ·rt.sync.monitorInflations:     56,000 monitors
                 ·rt.sync.notifications:         10,000 counts
                 ·rt.sync.parks:                 14,000 counts
                 ·threads.alive:                 6,000 threads
                 ·threads.daemon:                5,000 threads
                 ·threads.started:               10,000 threads

# Processing profiler results: SafepointsProfiler


Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOSyncAPIComparisonBenchmarks.copyFileUsingFileStreamAndHugeChunks:·gc.alloc.rate":
  66,378 MB/sec

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOSyncAPIComparisonBenchmarks.copyFileUsingFileStreamAndHugeChunks:·gc.alloc.rate.norm":
  67132920,000 B/op

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOSyncAPIComparisonBenchmarks.copyFileUsingFileStreamAndHugeChunks:·gc.count":
  ≈ 0 counts

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOSyncAPIComparisonBenchmarks.copyFileUsingFileStreamAndHugeChunks:·rt.safepointSyncTime":
  0,017 ms

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOSyncAPIComparisonBenchmarks.copyFileUsingFileStreamAndHugeChunks:·rt.safepointTime":
  0,537 ms

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOSyncAPIComparisonBenchmarks.copyFileUsingFileStreamAndHugeChunks:·rt.safepoints":
  11,000 counts

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOSyncAPIComparisonBenchmarks.copyFileUsingFileStreamAndHugeChunks:·rt.sync.contendedLockAttempts":
  80,000 locks

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOSyncAPIComparisonBenchmarks.copyFileUsingFileStreamAndHugeChunks:·rt.sync.fatMonitors":
  128,000 monitors

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOSyncAPIComparisonBenchmarks.copyFileUsingFileStreamAndHugeChunks:·rt.sync.futileWakeups":
  3,000 counts

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOSyncAPIComparisonBenchmarks.copyFileUsingFileStreamAndHugeChunks:·rt.sync.monitorDeflations":
  54,000 monitors

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOSyncAPIComparisonBenchmarks.copyFileUsingFileStreamAndHugeChunks:·rt.sync.monitorInflations":
  56,000 monitors

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOSyncAPIComparisonBenchmarks.copyFileUsingFileStreamAndHugeChunks:·rt.sync.notifications":
  10,000 counts

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOSyncAPIComparisonBenchmarks.copyFileUsingFileStreamAndHugeChunks:·rt.sync.parks":
  14,000 counts

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOSyncAPIComparisonBenchmarks.copyFileUsingFileStreamAndHugeChunks:·safepoints.interval":
  1612,000 ms

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOSyncAPIComparisonBenchmarks.copyFileUsingFileStreamAndHugeChunks:·safepoints.pause":
  11,433 ±(99.9%) 0,001 ms [Sum]
  (min, avg, max) = (0,099, 3,811, 11,207), stdev = 6,405
  CI (99.9%): [11,433, 11,433] (assumes normal distribution)

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOSyncAPIComparisonBenchmarks.copyFileUsingFileStreamAndHugeChunks:·safepoints.ttsp":
  0,126 ±(99.9%) 0,001 ms [Sum]
  (min, avg, max) = (0,036, 0,042, 0,046), stdev = 0,005
  CI (99.9%): [0,126, 0,126] (assumes normal distribution)

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOSyncAPIComparisonBenchmarks.copyFileUsingFileStreamAndHugeChunks:·threads.alive":
  6,000 threads

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOSyncAPIComparisonBenchmarks.copyFileUsingFileStreamAndHugeChunks:·threads.daemon":
  5,000 threads

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOSyncAPIComparisonBenchmarks.copyFileUsingFileStreamAndHugeChunks:·threads.started":
  10,000 threads


# JMH version: 1.26
# VM version: JDK 1.8.0_102, Java HotSpot(TM) 64-Bit Server VM, 25.102-b14
# VM invoker: C:\Program Files\Java\jdk1.8.0_102\jre\bin\java.exe
# VM options: -DbenchmarkClasses= -DwarmUpSeconds=1 -DmeasurementIterations=1 -DnumberOfBenchmarkForks=1 -DwarmUpIterations=1 -DrunThreadCount=1 -Dfile.encoding=UTF-8
# Warmup: 1 iterations, 1 s each
# Measurement: 1 iterations, single-shot each
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.gocypher.cybench.jmh.jvm.client.tests.IOSyncAPIComparisonBenchmarks.copyFileUsingFileStreamAndSmallChunks

# Run progress: 99,99% complete, ETA 00:00:00
# Fork: 1 of 1
# Preparing profilers: SafepointsProfiler
# Profilers consume stdout from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/C:/Users/slabs/.m2/repository/org/slf4j/slf4j-log4j12/1.7.30/slf4j-log4j12-1.7.30.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/C:/workspace/CyBench-Intellij/build/idea-sandbox/plugins/CyBench-Intellij/lib/slf4j-log4j12-1.7.30.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
2020-11-05 09:58:37,279 INFO  [com.gocypher.cybench.jmh.jvm.client.tests.IOSyncAPIComparisonBenchmarks.copyFileUsingFileStreamAndSmallChunks-jmh-worker-1!IOSyncAPIComparisonBenchmarks] -
-->Will generate binary file for tests...
2020-11-05 09:58:37,282 INFO  [com.gocypher.cybench.jmh.jvm.client.tests.IOSyncAPIComparisonBenchmarks.copyFileUsingFileStreamAndSmallChunks-jmh-worker-1!IOUtils] - Data file for tests exists, a new one will not be created
2020-11-05 09:58:37,283 INFO  [com.gocypher.cybench.jmh.jvm.client.tests.IOSyncAPIComparisonBenchmarks.copyFileUsingFileStreamAndSmallChunks-jmh-worker-1!IOSyncAPIComparisonBenchmarks] -
-->Generated file small_binary.bin for processing, size(B):134217728
2020-11-05 09:58:37,289 INFO  [com.gocypher.cybench.jmh.jvm.client.tests.IOSyncAPIComparisonBenchmarks.copyFileUsingFileStreamAndSmallChunks-jmh-worker-1!IOSyncAPIComparisonBenchmarks] -
 Will setup for iteration...
2020-11-05 09:58:37,497 INFO  [com.gocypher.cybench.jmh.jvm.client.tests.IOSyncAPIComparisonBenchmarks.copyFileUsingFileStreamAndSmallChunks-jmh-worker-1!IOSyncAPIComparisonBenchmarks] -
==>Iteration clean up successful!
195,597 ms/op
Iteration   1: 2020-11-05 09:58:38,668 INFO  [com.gocypher.cybench.jmh.jvm.client.tests.IOSyncAPIComparisonBenchmarks.copyFileUsingFileStreamAndSmallChunks-jmh-worker-1!IOSyncAPIComparisonBenchmarks] -
 Will setup for iteration...
2020-11-05 09:58:38,869 INFO  [com.gocypher.cybench.jmh.jvm.client.tests.IOSyncAPIComparisonBenchmarks.copyFileUsingFileStreamAndSmallChunks-jmh-worker-1!IOSyncAPIComparisonBenchmarks] -
==>Iteration clean up successful!
2020-11-05 09:58:38,870 INFO  [com.gocypher.cybench.jmh.jvm.client.tests.IOSyncAPIComparisonBenchmarks.copyFileUsingFileStreamAndSmallChunks-jmh-worker-1!IOSyncAPIComparisonBenchmarks] -
==>Generated files were closed successfully!
187,816 ms/op
                 ·gc.alloc.rate:                 0,058 MB/sec
                 ·gc.alloc.rate.norm:            43352,000 B/op
                 ·gc.count:                      ≈ 0 counts
                 ·rt.safepointSyncTime:          0,030 ms
                 ·rt.safepointTime:              0,592 ms
                 ·rt.safepoints:                 9,000 counts
                 ·rt.sync.contendedLockAttempts: 130,000 locks
                 ·rt.sync.fatMonitors:           128,000 monitors
                 ·rt.sync.futileWakeups:         5,000 counts
                 ·rt.sync.monitorDeflations:     54,000 monitors
                 ·rt.sync.monitorInflations:     56,000 monitors
                 ·rt.sync.notifications:         10,000 counts
                 ·rt.sync.parks:                 18,000 counts
                 ·threads.alive:                 6,000 threads
                 ·threads.daemon:                5,000 threads
                 ·threads.started:               10,000 threads

# Processing profiler results: SafepointsProfiler


Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOSyncAPIComparisonBenchmarks.copyFileUsingFileStreamAndSmallChunks:·gc.alloc.rate":
  0,058 MB/sec

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOSyncAPIComparisonBenchmarks.copyFileUsingFileStreamAndSmallChunks:·gc.alloc.rate.norm":
  43352,000 B/op

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOSyncAPIComparisonBenchmarks.copyFileUsingFileStreamAndSmallChunks:·gc.count":
  ≈ 0 counts

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOSyncAPIComparisonBenchmarks.copyFileUsingFileStreamAndSmallChunks:·rt.safepointSyncTime":
  0,030 ms

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOSyncAPIComparisonBenchmarks.copyFileUsingFileStreamAndSmallChunks:·rt.safepointTime":
  0,592 ms

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOSyncAPIComparisonBenchmarks.copyFileUsingFileStreamAndSmallChunks:·rt.safepoints":
  9,000 counts

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOSyncAPIComparisonBenchmarks.copyFileUsingFileStreamAndSmallChunks:·rt.sync.contendedLockAttempts":
  130,000 locks

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOSyncAPIComparisonBenchmarks.copyFileUsingFileStreamAndSmallChunks:·rt.sync.fatMonitors":
  128,000 monitors

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOSyncAPIComparisonBenchmarks.copyFileUsingFileStreamAndSmallChunks:·rt.sync.futileWakeups":
  5,000 counts

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOSyncAPIComparisonBenchmarks.copyFileUsingFileStreamAndSmallChunks:·rt.sync.monitorDeflations":
  54,000 monitors

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOSyncAPIComparisonBenchmarks.copyFileUsingFileStreamAndSmallChunks:·rt.sync.monitorInflations":
  56,000 monitors

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOSyncAPIComparisonBenchmarks.copyFileUsingFileStreamAndSmallChunks:·rt.sync.notifications":
  10,000 counts

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOSyncAPIComparisonBenchmarks.copyFileUsingFileStreamAndSmallChunks:·rt.sync.parks":
  18,000 counts

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOSyncAPIComparisonBenchmarks.copyFileUsingFileStreamAndSmallChunks:·safepoints.interval":
  1362,000 ms

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOSyncAPIComparisonBenchmarks.copyFileUsingFileStreamAndSmallChunks:·safepoints.pause":
  0,325 ms

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOSyncAPIComparisonBenchmarks.copyFileUsingFileStreamAndSmallChunks:·safepoints.ttsp":
  0,095 ms

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOSyncAPIComparisonBenchmarks.copyFileUsingFileStreamAndSmallChunks:·threads.alive":
  6,000 threads

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOSyncAPIComparisonBenchmarks.copyFileUsingFileStreamAndSmallChunks:·threads.daemon":
  5,000 threads

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOSyncAPIComparisonBenchmarks.copyFileUsingFileStreamAndSmallChunks:·threads.started":
  10,000 threads


# JMH version: 1.26
# VM version: JDK 1.8.0_102, Java HotSpot(TM) 64-Bit Server VM, 25.102-b14
# VM invoker: C:\Program Files\Java\jdk1.8.0_102\jre\bin\java.exe
# VM options: -DbenchmarkClasses= -DwarmUpSeconds=1 -DmeasurementIterations=1 -DnumberOfBenchmarkForks=1 -DwarmUpIterations=1 -DrunThreadCount=1 -Dfile.encoding=UTF-8
# Warmup: 1 iterations, 1 s each
# Measurement: 1 iterations, single-shot each
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.gocypher.cybench.jmh.jvm.client.tests.IOSyncAPIComparisonBenchmarks.copyFileUsingMappedByteBuffer

# Run progress: 99,99% complete, ETA 00:00:00
# Fork: 1 of 1
# Preparing profilers: SafepointsProfiler
# Profilers consume stdout from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/C:/Users/slabs/.m2/repository/org/slf4j/slf4j-log4j12/1.7.30/slf4j-log4j12-1.7.30.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/C:/workspace/CyBench-Intellij/build/idea-sandbox/plugins/CyBench-Intellij/lib/slf4j-log4j12-1.7.30.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
2020-11-05 09:58:41,455 INFO  [com.gocypher.cybench.jmh.jvm.client.tests.IOSyncAPIComparisonBenchmarks.copyFileUsingMappedByteBuffer-jmh-worker-1!IOSyncAPIComparisonBenchmarks] -
-->Will generate binary file for tests...
2020-11-05 09:58:41,458 INFO  [com.gocypher.cybench.jmh.jvm.client.tests.IOSyncAPIComparisonBenchmarks.copyFileUsingMappedByteBuffer-jmh-worker-1!IOUtils] - Data file for tests exists, a new one will not be created
2020-11-05 09:58:41,459 INFO  [com.gocypher.cybench.jmh.jvm.client.tests.IOSyncAPIComparisonBenchmarks.copyFileUsingMappedByteBuffer-jmh-worker-1!IOSyncAPIComparisonBenchmarks] -
-->Generated file small_binary.bin for processing, size(B):134217728
2020-11-05 09:58:41,466 INFO  [com.gocypher.cybench.jmh.jvm.client.tests.IOSyncAPIComparisonBenchmarks.copyFileUsingMappedByteBuffer-jmh-worker-1!IOSyncAPIComparisonBenchmarks] -
 Will setup for iteration...
2020-11-05 09:58:41,960 INFO  [com.gocypher.cybench.jmh.jvm.client.tests.IOSyncAPIComparisonBenchmarks.copyFileUsingMappedByteBuffer-jmh-worker-1!IOSyncAPIComparisonBenchmarks] -
==>Iteration clean up successful!
493,166 ms/op
Iteration   1: 2020-11-05 09:58:43,122 INFO  [com.gocypher.cybench.jmh.jvm.client.tests.IOSyncAPIComparisonBenchmarks.copyFileUsingMappedByteBuffer-jmh-worker-1!IOSyncAPIComparisonBenchmarks] -
 Will setup for iteration...
2020-11-05 09:58:43,801 INFO  [com.gocypher.cybench.jmh.jvm.client.tests.IOSyncAPIComparisonBenchmarks.copyFileUsingMappedByteBuffer-jmh-worker-1!IOSyncAPIComparisonBenchmarks] -
==>Iteration clean up successful!
2020-11-05 09:58:43,801 INFO  [com.gocypher.cybench.jmh.jvm.client.tests.IOSyncAPIComparisonBenchmarks.copyFileUsingMappedByteBuffer-jmh-worker-1!IOSyncAPIComparisonBenchmarks] -
==>Generated files were closed successfully!
666,294 ms/op
                 ·gc.alloc.rate:                 108,276 MB/sec
                 ·gc.alloc.rate.norm:            134241520,000 B/op
                 ·gc.count:                      ≈ 0 counts
                 ·rt.safepointSyncTime:          0,005 ms
                 ·rt.safepointTime:              0,476 ms
                 ·rt.safepoints:                 12,000 counts
                 ·rt.sync.contendedLockAttempts: 68,000 locks
                 ·rt.sync.fatMonitors:           128,000 monitors
                 ·rt.sync.futileWakeups:         5,000 counts
                 ·rt.sync.monitorDeflations:     53,000 monitors
                 ·rt.sync.monitorInflations:     55,000 monitors
                 ·rt.sync.notifications:         10,000 counts
                 ·rt.sync.parks:                 20,000 counts
                 ·threads.alive:                 6,000 threads
                 ·threads.daemon:                5,000 threads
                 ·threads.started:               10,000 threads

# Processing profiler results: SafepointsProfiler


Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOSyncAPIComparisonBenchmarks.copyFileUsingMappedByteBuffer:·gc.alloc.rate":
  108,276 MB/sec

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOSyncAPIComparisonBenchmarks.copyFileUsingMappedByteBuffer:·gc.alloc.rate.norm":
  134241520,000 B/op

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOSyncAPIComparisonBenchmarks.copyFileUsingMappedByteBuffer:·gc.count":
  ≈ 0 counts

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOSyncAPIComparisonBenchmarks.copyFileUsingMappedByteBuffer:·rt.safepointSyncTime":
  0,005 ms

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOSyncAPIComparisonBenchmarks.copyFileUsingMappedByteBuffer:·rt.safepointTime":
  0,476 ms

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOSyncAPIComparisonBenchmarks.copyFileUsingMappedByteBuffer:·rt.safepoints":
  12,000 counts

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOSyncAPIComparisonBenchmarks.copyFileUsingMappedByteBuffer:·rt.sync.contendedLockAttempts":
  68,000 locks

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOSyncAPIComparisonBenchmarks.copyFileUsingMappedByteBuffer:·rt.sync.fatMonitors":
  128,000 monitors

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOSyncAPIComparisonBenchmarks.copyFileUsingMappedByteBuffer:·rt.sync.futileWakeups":
  5,000 counts

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOSyncAPIComparisonBenchmarks.copyFileUsingMappedByteBuffer:·rt.sync.monitorDeflations":
  53,000 monitors

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOSyncAPIComparisonBenchmarks.copyFileUsingMappedByteBuffer:·rt.sync.monitorInflations":
  55,000 monitors

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOSyncAPIComparisonBenchmarks.copyFileUsingMappedByteBuffer:·rt.sync.notifications":
  10,000 counts

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOSyncAPIComparisonBenchmarks.copyFileUsingMappedByteBuffer:·rt.sync.parks":
  20,000 counts

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOSyncAPIComparisonBenchmarks.copyFileUsingMappedByteBuffer:·safepoints.interval":
  1831,000 ms

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOSyncAPIComparisonBenchmarks.copyFileUsingMappedByteBuffer:·safepoints.pause":
  0,281 ms

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOSyncAPIComparisonBenchmarks.copyFileUsingMappedByteBuffer:·safepoints.ttsp":
  0,070 ms

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOSyncAPIComparisonBenchmarks.copyFileUsingMappedByteBuffer:·threads.alive":
  6,000 threads

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOSyncAPIComparisonBenchmarks.copyFileUsingMappedByteBuffer:·threads.daemon":
  5,000 threads

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOSyncAPIComparisonBenchmarks.copyFileUsingMappedByteBuffer:·threads.started":
  10,000 threads


# JMH version: 1.26
# VM version: JDK 1.8.0_102, Java HotSpot(TM) 64-Bit Server VM, 25.102-b14
# VM invoker: C:\Program Files\Java\jdk1.8.0_102\jre\bin\java.exe
# VM options: -DbenchmarkClasses= -DwarmUpSeconds=1 -DmeasurementIterations=1 -DnumberOfBenchmarkForks=1 -DwarmUpIterations=1 -DrunThreadCount=1 -Dfile.encoding=UTF-8
# Warmup: 1 iterations, 1 s each
# Measurement: 1 iterations, single-shot each
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.gocypher.cybench.jmh.jvm.client.tests.IOSyncFileSeekBenchmarks.seekAndCopyFileUsingHugeChunks

# Run progress: 99,99% complete, ETA 00:00:00
# Fork: 1 of 1
# Preparing profilers: SafepointsProfiler
# Profilers consume stdout from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/C:/Users/slabs/.m2/repository/org/slf4j/slf4j-log4j12/1.7.30/slf4j-log4j12-1.7.30.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/C:/workspace/CyBench-Intellij/build/idea-sandbox/plugins/CyBench-Intellij/lib/slf4j-log4j12-1.7.30.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
2020-11-05 09:58:46,376 INFO  [com.gocypher.cybench.jmh.jvm.client.tests.IOSyncFileSeekBenchmarks.seekAndCopyFileUsingHugeChunks-jmh-worker-1!IOSyncFileSeekBenchmarks] -
-->Will generate binary file for tests...
2020-11-05 09:58:46,378 INFO  [com.gocypher.cybench.jmh.jvm.client.tests.IOSyncFileSeekBenchmarks.seekAndCopyFileUsingHugeChunks-jmh-worker-1!IOUtils] - Data file for tests exists, a new one will not be created
2020-11-05 09:58:46,380 INFO  [com.gocypher.cybench.jmh.jvm.client.tests.IOSyncFileSeekBenchmarks.seekAndCopyFileUsingHugeChunks-jmh-worker-1!IOSyncFileSeekBenchmarks] -
-->Generated file small_binary.bin for processing, size(B):134217728
2020-11-05 09:58:46,380 INFO  [com.gocypher.cybench.jmh.jvm.client.tests.IOSyncFileSeekBenchmarks.seekAndCopyFileUsingHugeChunks-jmh-worker-1!IOSyncFileSeekBenchmarks] - Will generate an array of random numbers for file positions
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
2020-11-05 09:58:46,438 INFO  [com.gocypher.cybench.jmh.jvm.client.tests.IOSyncFileSeekBenchmarks.seekAndCopyFileUsingHugeChunks-jmh-worker-1!IOSyncFileSeekBenchmarks] - Generated all prerequisites!
2020-11-05 09:58:46,438 INFO  [com.gocypher.cybench.jmh.jvm.client.tests.IOSyncFileSeekBenchmarks.seekAndCopyFileUsingHugeChunks-jmh-worker-1!IOSyncFileSeekBenchmarks] -
 Will setup for iteration...
2020-11-05 09:58:47,177 INFO  [com.gocypher.cybench.jmh.jvm.client.tests.IOSyncFileSeekBenchmarks.seekAndCopyFileUsingHugeChunks-jmh-worker-1!IOSyncFileSeekBenchmarks] -
==>Iteration clean up successful!
724,873 ms/op
Iteration   1: 2020-11-05 09:58:48,346 INFO  [com.gocypher.cybench.jmh.jvm.client.tests.IOSyncFileSeekBenchmarks.seekAndCopyFileUsingHugeChunks-jmh-worker-1!IOSyncFileSeekBenchmarks] -
 Will setup for iteration...
2020-11-05 09:58:49,136 INFO  [com.gocypher.cybench.jmh.jvm.client.tests.IOSyncFileSeekBenchmarks.seekAndCopyFileUsingHugeChunks-jmh-worker-1!IOSyncFileSeekBenchmarks] -
==>Iteration clean up successful!
2020-11-05 09:58:49,136 INFO  [com.gocypher.cybench.jmh.jvm.client.tests.IOSyncFileSeekBenchmarks.seekAndCopyFileUsingHugeChunks-jmh-worker-1!IOSyncFileSeekBenchmarks] -
==>Generated files were closed successfully!
758,515 ms/op
                 ·gc.alloc.rate:                   110,808 MB/sec
                 ·gc.alloc.rate.norm:              151021576,000 B/op
                 ·gc.churn.PS_Eden_Space:          76,287 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:     103972040,000 B/op
                 ·gc.churn.PS_Survivor_Space:      0,048 MB/sec
                 ·gc.churn.PS_Survivor_Space.norm: 65536,000 B/op
                 ·gc.count:                        2,000 counts
                 ·gc.time:                         3,000 ms
                 ·rt.safepointSyncTime:            0,031 ms
                 ·rt.safepointTime:                0,694 ms
                 ·rt.safepoints:                   14,000 counts
                 ·rt.sync.contendedLockAttempts:   64,000 locks
                 ·rt.sync.fatMonitors:             128,000 monitors
                 ·rt.sync.futileWakeups:           8,000 counts
                 ·rt.sync.monitorDeflations:       54,000 monitors
                 ·rt.sync.monitorInflations:       56,000 monitors
                 ·rt.sync.notifications:           14,000 counts
                 ·rt.sync.parks:                   23,000 counts
                 ·threads.alive:                   6,000 threads
                 ·threads.daemon:                  5,000 threads
                 ·threads.started:                 10,000 threads

# Processing profiler results: SafepointsProfiler


Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOSyncFileSeekBenchmarks.seekAndCopyFileUsingHugeChunks:·gc.alloc.rate":
  110,808 MB/sec

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOSyncFileSeekBenchmarks.seekAndCopyFileUsingHugeChunks:·gc.alloc.rate.norm":
  151021576,000 B/op

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOSyncFileSeekBenchmarks.seekAndCopyFileUsingHugeChunks:·gc.churn.PS_Eden_Space":
  76,287 MB/sec

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOSyncFileSeekBenchmarks.seekAndCopyFileUsingHugeChunks:·gc.churn.PS_Eden_Space.norm":
  103972040,000 B/op

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOSyncFileSeekBenchmarks.seekAndCopyFileUsingHugeChunks:·gc.churn.PS_Survivor_Space":
  0,048 MB/sec

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOSyncFileSeekBenchmarks.seekAndCopyFileUsingHugeChunks:·gc.churn.PS_Survivor_Space.norm":
  65536,000 B/op

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOSyncFileSeekBenchmarks.seekAndCopyFileUsingHugeChunks:·gc.count":
  2,000 counts

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOSyncFileSeekBenchmarks.seekAndCopyFileUsingHugeChunks:·gc.time":
  3,000 ms

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOSyncFileSeekBenchmarks.seekAndCopyFileUsingHugeChunks:·rt.safepointSyncTime":
  0,031 ms

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOSyncFileSeekBenchmarks.seekAndCopyFileUsingHugeChunks:·rt.safepointTime":
  0,694 ms

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOSyncFileSeekBenchmarks.seekAndCopyFileUsingHugeChunks:·rt.safepoints":
  14,000 counts

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOSyncFileSeekBenchmarks.seekAndCopyFileUsingHugeChunks:·rt.sync.contendedLockAttempts":
  64,000 locks

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOSyncFileSeekBenchmarks.seekAndCopyFileUsingHugeChunks:·rt.sync.fatMonitors":
  128,000 monitors

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOSyncFileSeekBenchmarks.seekAndCopyFileUsingHugeChunks:·rt.sync.futileWakeups":
  8,000 counts

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOSyncFileSeekBenchmarks.seekAndCopyFileUsingHugeChunks:·rt.sync.monitorDeflations":
  54,000 monitors

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOSyncFileSeekBenchmarks.seekAndCopyFileUsingHugeChunks:·rt.sync.monitorInflations":
  56,000 monitors

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOSyncFileSeekBenchmarks.seekAndCopyFileUsingHugeChunks:·rt.sync.notifications":
  14,000 counts

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOSyncFileSeekBenchmarks.seekAndCopyFileUsingHugeChunks:·rt.sync.parks":
  23,000 counts

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOSyncFileSeekBenchmarks.seekAndCopyFileUsingHugeChunks:·safepoints.interval":
  1949,000 ms

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOSyncFileSeekBenchmarks.seekAndCopyFileUsingHugeChunks:·safepoints.pause":
  16,505 ±(99.9%) 0,001 ms [Sum]
  (min, avg, max) = (1,581, 4,126, 10,174), stdev = 4,057
  CI (99.9%): [16,505, 16,505] (assumes normal distribution)

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOSyncFileSeekBenchmarks.seekAndCopyFileUsingHugeChunks:·safepoints.ttsp":
  2,655 ±(99.9%) 0,001 ms [Sum]
  (min, avg, max) = (0,021, 0,664, 2,568), stdev = 1,270
  CI (99.9%): [2,655, 2,655] (assumes normal distribution)

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOSyncFileSeekBenchmarks.seekAndCopyFileUsingHugeChunks:·threads.alive":
  6,000 threads

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOSyncFileSeekBenchmarks.seekAndCopyFileUsingHugeChunks:·threads.daemon":
  5,000 threads

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOSyncFileSeekBenchmarks.seekAndCopyFileUsingHugeChunks:·threads.started":
  10,000 threads


# JMH version: 1.26
# VM version: JDK 1.8.0_102, Java HotSpot(TM) 64-Bit Server VM, 25.102-b14
# VM invoker: C:\Program Files\Java\jdk1.8.0_102\jre\bin\java.exe
# VM options: -DbenchmarkClasses= -DwarmUpSeconds=1 -DmeasurementIterations=1 -DnumberOfBenchmarkForks=1 -DwarmUpIterations=1 -DrunThreadCount=1 -Dfile.encoding=UTF-8
# Warmup: 1 iterations, 1 s each
# Measurement: 1 iterations, single-shot each
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.gocypher.cybench.jmh.jvm.client.tests.IOSyncFileSeekBenchmarks.seekAndCopyFileUsingSmallChunks

# Run progress: 99,99% complete, ETA 00:00:00
# Fork: 1 of 1
# Preparing profilers: SafepointsProfiler
# Profilers consume stdout from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/C:/Users/slabs/.m2/repository/org/slf4j/slf4j-log4j12/1.7.30/slf4j-log4j12-1.7.30.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/C:/workspace/CyBench-Intellij/build/idea-sandbox/plugins/CyBench-Intellij/lib/slf4j-log4j12-1.7.30.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
2020-11-05 09:58:51,739 INFO  [com.gocypher.cybench.jmh.jvm.client.tests.IOSyncFileSeekBenchmarks.seekAndCopyFileUsingSmallChunks-jmh-worker-1!IOSyncFileSeekBenchmarks] -
-->Will generate binary file for tests...
2020-11-05 09:58:51,742 INFO  [com.gocypher.cybench.jmh.jvm.client.tests.IOSyncFileSeekBenchmarks.seekAndCopyFileUsingSmallChunks-jmh-worker-1!IOUtils] - Data file for tests exists, a new one will not be created
2020-11-05 09:58:51,744 INFO  [com.gocypher.cybench.jmh.jvm.client.tests.IOSyncFileSeekBenchmarks.seekAndCopyFileUsingSmallChunks-jmh-worker-1!IOSyncFileSeekBenchmarks] -
-->Generated file small_binary.bin for processing, size(B):134217728
2020-11-05 09:58:51,745 INFO  [com.gocypher.cybench.jmh.jvm.client.tests.IOSyncFileSeekBenchmarks.seekAndCopyFileUsingSmallChunks-jmh-worker-1!IOSyncFileSeekBenchmarks] - Will generate an array of random numbers for file positions
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
2020-11-05 09:58:51,799 INFO  [com.gocypher.cybench.jmh.jvm.client.tests.IOSyncFileSeekBenchmarks.seekAndCopyFileUsingSmallChunks-jmh-worker-1!IOSyncFileSeekBenchmarks] - Generated all prerequisites!
2020-11-05 09:58:51,800 INFO  [com.gocypher.cybench.jmh.jvm.client.tests.IOSyncFileSeekBenchmarks.seekAndCopyFileUsingSmallChunks-jmh-worker-1!IOSyncFileSeekBenchmarks] -
 Will setup for iteration...
2020-11-05 09:58:53,238 INFO  [com.gocypher.cybench.jmh.jvm.client.tests.IOSyncFileSeekBenchmarks.seekAndCopyFileUsingSmallChunks-jmh-worker-1!IOSyncFileSeekBenchmarks] -
==>Iteration clean up successful!
1425,964 ms/op
Iteration   1: 2020-11-05 09:58:54,400 INFO  [com.gocypher.cybench.jmh.jvm.client.tests.IOSyncFileSeekBenchmarks.seekAndCopyFileUsingSmallChunks-jmh-worker-1!IOSyncFileSeekBenchmarks] -
 Will setup for iteration...
2020-11-05 09:58:55,918 INFO  [com.gocypher.cybench.jmh.jvm.client.tests.IOSyncFileSeekBenchmarks.seekAndCopyFileUsingSmallChunks-jmh-worker-1!IOSyncFileSeekBenchmarks] -
==>Iteration clean up successful!
2020-11-05 09:58:55,918 INFO  [com.gocypher.cybench.jmh.jvm.client.tests.IOSyncFileSeekBenchmarks.seekAndCopyFileUsingSmallChunks-jmh-worker-1!IOSyncFileSeekBenchmarks] -
==>Generated files were closed successfully!
1499,184 ms/op
                 ·gc.alloc.rate:                 63,091 MB/sec
                 ·gc.alloc.rate.norm:            134391784,000 B/op
                 ·gc.churn.PS_Eden_Space:        63,009 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:   134217728,000 B/op
                 ·gc.count:                      2,000 counts
                 ·gc.time:                       1,000 ms
                 ·rt.safepointSyncTime:          0,035 ms
                 ·rt.safepointTime:              0,669 ms
                 ·rt.safepoints:                 15,000 counts
                 ·rt.sync.contendedLockAttempts: 35,000 locks
                 ·rt.sync.fatMonitors:           128,000 monitors
                 ·rt.sync.futileWakeups:         6,000 counts
                 ·rt.sync.monitorDeflations:     54,000 monitors
                 ·rt.sync.monitorInflations:     56,000 monitors
                 ·rt.sync.notifications:         12,000 counts
                 ·rt.sync.parks:                 23,000 counts
                 ·threads.alive:                 6,000 threads
                 ·threads.daemon:                5,000 threads
                 ·threads.started:               10,000 threads

# Processing profiler results: SafepointsProfiler


Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOSyncFileSeekBenchmarks.seekAndCopyFileUsingSmallChunks:·gc.alloc.rate":
  63,091 MB/sec

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOSyncFileSeekBenchmarks.seekAndCopyFileUsingSmallChunks:·gc.alloc.rate.norm":
  134391784,000 B/op

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOSyncFileSeekBenchmarks.seekAndCopyFileUsingSmallChunks:·gc.churn.PS_Eden_Space":
  63,009 MB/sec

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOSyncFileSeekBenchmarks.seekAndCopyFileUsingSmallChunks:·gc.churn.PS_Eden_Space.norm":
  134217728,000 B/op

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOSyncFileSeekBenchmarks.seekAndCopyFileUsingSmallChunks:·gc.count":
  2,000 counts

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOSyncFileSeekBenchmarks.seekAndCopyFileUsingSmallChunks:·gc.time":
  1,000 ms

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOSyncFileSeekBenchmarks.seekAndCopyFileUsingSmallChunks:·rt.safepointSyncTime":
  0,035 ms

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOSyncFileSeekBenchmarks.seekAndCopyFileUsingSmallChunks:·rt.safepointTime":
  0,669 ms

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOSyncFileSeekBenchmarks.seekAndCopyFileUsingSmallChunks:·rt.safepoints":
  15,000 counts

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOSyncFileSeekBenchmarks.seekAndCopyFileUsingSmallChunks:·rt.sync.contendedLockAttempts":
  35,000 locks

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOSyncFileSeekBenchmarks.seekAndCopyFileUsingSmallChunks:·rt.sync.fatMonitors":
  128,000 monitors

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOSyncFileSeekBenchmarks.seekAndCopyFileUsingSmallChunks:·rt.sync.futileWakeups":
  6,000 counts

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOSyncFileSeekBenchmarks.seekAndCopyFileUsingSmallChunks:·rt.sync.monitorDeflations":
  54,000 monitors

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOSyncFileSeekBenchmarks.seekAndCopyFileUsingSmallChunks:·rt.sync.monitorInflations":
  56,000 monitors

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOSyncFileSeekBenchmarks.seekAndCopyFileUsingSmallChunks:·rt.sync.notifications":
  12,000 counts

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOSyncFileSeekBenchmarks.seekAndCopyFileUsingSmallChunks:·rt.sync.parks":
  23,000 counts

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOSyncFileSeekBenchmarks.seekAndCopyFileUsingSmallChunks:·safepoints.interval":
  2679,000 ms

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOSyncFileSeekBenchmarks.seekAndCopyFileUsingSmallChunks:·safepoints.pause":
  12,045 ±(99.9%) 0,001 ms [Sum]
  (min, avg, max) = (0,088, 2,409, 10,699), stdev = 4,640
  CI (99.9%): [12,045, 12,045] (assumes normal distribution)

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOSyncFileSeekBenchmarks.seekAndCopyFileUsingSmallChunks:·safepoints.ttsp":
  0,144 ±(99.9%) 0,001 ms [Sum]
  (min, avg, max) = (0,016, 0,029, 0,048), stdev = 0,016
  CI (99.9%): [0,144, 0,144] (assumes normal distribution)

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOSyncFileSeekBenchmarks.seekAndCopyFileUsingSmallChunks:·threads.alive":
  6,000 threads

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOSyncFileSeekBenchmarks.seekAndCopyFileUsingSmallChunks:·threads.daemon":
  5,000 threads

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOSyncFileSeekBenchmarks.seekAndCopyFileUsingSmallChunks:·threads.started":
  10,000 threads


# JMH version: 1.26
# VM version: JDK 1.8.0_102, Java HotSpot(TM) 64-Bit Server VM, 25.102-b14
# VM invoker: C:\Program Files\Java\jdk1.8.0_102\jre\bin\java.exe
# VM options: -DbenchmarkClasses= -DwarmUpSeconds=1 -DmeasurementIterations=1 -DnumberOfBenchmarkForks=1 -DwarmUpIterations=1 -DrunThreadCount=1 -Dfile.encoding=UTF-8
# Warmup: 1 iterations, 1 s each
# Measurement: 1 iterations, single-shot each
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.gocypher.cybench.jmh.jvm.client.tests.IOSyncFileSeekBenchmarks.seekAndReadFileUsingHugeChunks

# Run progress: 99,99% complete, ETA 00:00:00
# Fork: 1 of 1
# Preparing profilers: SafepointsProfiler
# Profilers consume stdout from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/C:/Users/slabs/.m2/repository/org/slf4j/slf4j-log4j12/1.7.30/slf4j-log4j12-1.7.30.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/C:/workspace/CyBench-Intellij/build/idea-sandbox/plugins/CyBench-Intellij/lib/slf4j-log4j12-1.7.30.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
2020-11-05 09:58:58,531 INFO  [com.gocypher.cybench.jmh.jvm.client.tests.IOSyncFileSeekBenchmarks.seekAndReadFileUsingHugeChunks-jmh-worker-1!IOSyncFileSeekBenchmarks] -
-->Will generate binary file for tests...
2020-11-05 09:58:58,534 INFO  [com.gocypher.cybench.jmh.jvm.client.tests.IOSyncFileSeekBenchmarks.seekAndReadFileUsingHugeChunks-jmh-worker-1!IOUtils] - Data file for tests exists, a new one will not be created
2020-11-05 09:58:58,535 INFO  [com.gocypher.cybench.jmh.jvm.client.tests.IOSyncFileSeekBenchmarks.seekAndReadFileUsingHugeChunks-jmh-worker-1!IOSyncFileSeekBenchmarks] -
-->Generated file small_binary.bin for processing, size(B):134217728
2020-11-05 09:58:58,536 INFO  [com.gocypher.cybench.jmh.jvm.client.tests.IOSyncFileSeekBenchmarks.seekAndReadFileUsingHugeChunks-jmh-worker-1!IOSyncFileSeekBenchmarks] - Will generate an array of random numbers for file positions
2020-11-05 09:58:58,591 INFO  [com.gocypher.cybench.jmh.jvm.client.tests.IOSyncFileSeekBenchmarks.seekAndReadFileUsingHugeChunks-jmh-worker-1!IOSyncFileSeekBenchmarks] - Generated all prerequisites!
2020-11-05 09:58:58,592 INFO  [com.gocypher.cybench.jmh.jvm.client.tests.IOSyncFileSeekBenchmarks.seekAndReadFileUsingHugeChunks-jmh-worker-1!IOSyncFileSeekBenchmarks] -
 Will setup for iteration...
2020-11-05 09:58:58,676 INFO  [com.gocypher.cybench.jmh.jvm.client.tests.IOSyncFileSeekBenchmarks.seekAndReadFileUsingHugeChunks-jmh-worker-1!IOSyncFileSeekBenchmarks] -
==>Iteration clean up successful!
80,991 ms/op
Iteration   1: 2020-11-05 09:58:59,853 INFO  [com.gocypher.cybench.jmh.jvm.client.tests.IOSyncFileSeekBenchmarks.seekAndReadFileUsingHugeChunks-jmh-worker-1!IOSyncFileSeekBenchmarks] -
 Will setup for iteration...
2020-11-05 09:58:59,944 INFO  [com.gocypher.cybench.jmh.jvm.client.tests.IOSyncFileSeekBenchmarks.seekAndReadFileUsingHugeChunks-jmh-worker-1!IOSyncFileSeekBenchmarks] -
==>Iteration clean up successful!
2020-11-05 09:58:59,944 INFO  [com.gocypher.cybench.jmh.jvm.client.tests.IOSyncFileSeekBenchmarks.seekAndReadFileUsingHugeChunks-jmh-worker-1!IOSyncFileSeekBenchmarks] -
==>Generated files were closed successfully!
82,687 ms/op
                 ·gc.alloc.rate:                 211,085 MB/sec
                 ·gc.alloc.rate.norm:            134239448,000 B/op
                 ·gc.churn.PS_Eden_Space:        189,340 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:   120410736,000 B/op
                 ·gc.count:                      1,000 counts
                 ·gc.time:                       1,000 ms
                 ·rt.safepointSyncTime:          0,019 ms
                 ·rt.safepointTime:              0,650 ms
                 ·rt.safepoints:                 12,000 counts
                 ·rt.sync.contendedLockAttempts: 92,000 locks
                 ·rt.sync.fatMonitors:           128,000 monitors
                 ·rt.sync.futileWakeups:         5,000 counts
                 ·rt.sync.monitorDeflations:     54,000 monitors
                 ·rt.sync.monitorInflations:     56,000 monitors
                 ·rt.sync.notifications:         12,000 counts
                 ·rt.sync.parks:                 20,000 counts
                 ·threads.alive:                 6,000 threads
                 ·threads.daemon:                5,000 threads
                 ·threads.started:               10,000 threads

# Processing profiler results: SafepointsProfiler


Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOSyncFileSeekBenchmarks.seekAndReadFileUsingHugeChunks:·gc.alloc.rate":
  211,085 MB/sec

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOSyncFileSeekBenchmarks.seekAndReadFileUsingHugeChunks:·gc.alloc.rate.norm":
  134239448,000 B/op

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOSyncFileSeekBenchmarks.seekAndReadFileUsingHugeChunks:·gc.churn.PS_Eden_Space":
  189,340 MB/sec

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOSyncFileSeekBenchmarks.seekAndReadFileUsingHugeChunks:·gc.churn.PS_Eden_Space.norm":
  120410736,000 B/op

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOSyncFileSeekBenchmarks.seekAndReadFileUsingHugeChunks:·gc.count":
  1,000 counts

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOSyncFileSeekBenchmarks.seekAndReadFileUsingHugeChunks:·gc.time":
  1,000 ms

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOSyncFileSeekBenchmarks.seekAndReadFileUsingHugeChunks:·rt.safepointSyncTime":
  0,019 ms

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOSyncFileSeekBenchmarks.seekAndReadFileUsingHugeChunks:·rt.safepointTime":
  0,650 ms

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOSyncFileSeekBenchmarks.seekAndReadFileUsingHugeChunks:·rt.safepoints":
  12,000 counts

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOSyncFileSeekBenchmarks.seekAndReadFileUsingHugeChunks:·rt.sync.contendedLockAttempts":
  92,000 locks

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOSyncFileSeekBenchmarks.seekAndReadFileUsingHugeChunks:·rt.sync.fatMonitors":
  128,000 monitors

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOSyncFileSeekBenchmarks.seekAndReadFileUsingHugeChunks:·rt.sync.futileWakeups":
  5,000 counts

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOSyncFileSeekBenchmarks.seekAndReadFileUsingHugeChunks:·rt.sync.monitorDeflations":
  54,000 monitors

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOSyncFileSeekBenchmarks.seekAndReadFileUsingHugeChunks:·rt.sync.monitorInflations":
  56,000 monitors

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOSyncFileSeekBenchmarks.seekAndReadFileUsingHugeChunks:·rt.sync.notifications":
  12,000 counts

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOSyncFileSeekBenchmarks.seekAndReadFileUsingHugeChunks:·rt.sync.parks":
  20,000 counts

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOSyncFileSeekBenchmarks.seekAndReadFileUsingHugeChunks:·safepoints.interval":
  1272,000 ms

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOSyncFileSeekBenchmarks.seekAndReadFileUsingHugeChunks:·safepoints.pause":
  5,762 ms

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOSyncFileSeekBenchmarks.seekAndReadFileUsingHugeChunks:·safepoints.ttsp":
  0,031 ms

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOSyncFileSeekBenchmarks.seekAndReadFileUsingHugeChunks:·threads.alive":
  6,000 threads

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOSyncFileSeekBenchmarks.seekAndReadFileUsingHugeChunks:·threads.daemon":
  5,000 threads

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOSyncFileSeekBenchmarks.seekAndReadFileUsingHugeChunks:·threads.started":
  10,000 threads


# JMH version: 1.26
# VM version: JDK 1.8.0_102, Java HotSpot(TM) 64-Bit Server VM, 25.102-b14
# VM invoker: C:\Program Files\Java\jdk1.8.0_102\jre\bin\java.exe
# VM options: -DbenchmarkClasses= -DwarmUpSeconds=1 -DmeasurementIterations=1 -DnumberOfBenchmarkForks=1 -DwarmUpIterations=1 -DrunThreadCount=1 -Dfile.encoding=UTF-8
# Warmup: 1 iterations, 1 s each
# Measurement: 1 iterations, single-shot each
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.gocypher.cybench.jmh.jvm.client.tests.IOSyncFileSeekBenchmarks.seekAndReadFileUsingSmallChunks

# Run progress: 100,00% complete, ETA 00:00:00
# Fork: 1 of 1
# Preparing profilers: SafepointsProfiler
# Profilers consume stdout from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/C:/Users/slabs/.m2/repository/org/slf4j/slf4j-log4j12/1.7.30/slf4j-log4j12-1.7.30.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/C:/workspace/CyBench-Intellij/build/idea-sandbox/plugins/CyBench-Intellij/lib/slf4j-log4j12-1.7.30.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
2020-11-05 09:59:02,553 INFO  [com.gocypher.cybench.jmh.jvm.client.tests.IOSyncFileSeekBenchmarks.seekAndReadFileUsingSmallChunks-jmh-worker-1!IOSyncFileSeekBenchmarks] -
-->Will generate binary file for tests...
2020-11-05 09:59:02,556 INFO  [com.gocypher.cybench.jmh.jvm.client.tests.IOSyncFileSeekBenchmarks.seekAndReadFileUsingSmallChunks-jmh-worker-1!IOUtils] - Data file for tests exists, a new one will not be created
2020-11-05 09:59:02,558 INFO  [com.gocypher.cybench.jmh.jvm.client.tests.IOSyncFileSeekBenchmarks.seekAndReadFileUsingSmallChunks-jmh-worker-1!IOSyncFileSeekBenchmarks] -
-->Generated file small_binary.bin for processing, size(B):134217728
2020-11-05 09:59:02,559 INFO  [com.gocypher.cybench.jmh.jvm.client.tests.IOSyncFileSeekBenchmarks.seekAndReadFileUsingSmallChunks-jmh-worker-1!IOSyncFileSeekBenchmarks] - Will generate an array of random numbers for file positions
2020-11-05 09:59:02,615 INFO  [com.gocypher.cybench.jmh.jvm.client.tests.IOSyncFileSeekBenchmarks.seekAndReadFileUsingSmallChunks-jmh-worker-1!IOSyncFileSeekBenchmarks] - Generated all prerequisites!
2020-11-05 09:59:02,616 INFO  [com.gocypher.cybench.jmh.jvm.client.tests.IOSyncFileSeekBenchmarks.seekAndReadFileUsingSmallChunks-jmh-worker-1!IOSyncFileSeekBenchmarks] -
 Will setup for iteration...
2020-11-05 09:59:02,736 INFO  [com.gocypher.cybench.jmh.jvm.client.tests.IOSyncFileSeekBenchmarks.seekAndReadFileUsingSmallChunks-jmh-worker-1!IOSyncFileSeekBenchmarks] -
==>Iteration clean up successful!
116,584 ms/op
Iteration   1: 2020-11-05 09:59:03,894 INFO  [com.gocypher.cybench.jmh.jvm.client.tests.IOSyncFileSeekBenchmarks.seekAndReadFileUsingSmallChunks-jmh-worker-1!IOSyncFileSeekBenchmarks] -
 Will setup for iteration...
2020-11-05 09:59:04,031 INFO  [com.gocypher.cybench.jmh.jvm.client.tests.IOSyncFileSeekBenchmarks.seekAndReadFileUsingSmallChunks-jmh-worker-1!IOSyncFileSeekBenchmarks] -
==>Iteration clean up successful!
2020-11-05 09:59:04,031 INFO  [com.gocypher.cybench.jmh.jvm.client.tests.IOSyncFileSeekBenchmarks.seekAndReadFileUsingSmallChunks-jmh-worker-1!IOSyncFileSeekBenchmarks] -
==>Generated files were closed successfully!
129,028 ms/op
                 ·gc.alloc.rate:                 196,013 MB/sec
                 ·gc.alloc.rate.norm:            134375384,000 B/op
                 ·gc.churn.PS_Eden_Space:        195,783 MB/sec
                 ·gc.churn.PS_Eden_Space.norm:   134217728,000 B/op
                 ·gc.count:                      1,000 counts
                 ·gc.time:                       1,000 ms
                 ·rt.safepointSyncTime:          0,003 ms
                 ·rt.safepointTime:              0,575 ms
                 ·rt.safepoints:                 11,000 counts
                 ·rt.sync.contendedLockAttempts: 90,000 locks
                 ·rt.sync.fatMonitors:           128,000 monitors
                 ·rt.sync.futileWakeups:         3,000 counts
                 ·rt.sync.monitorDeflations:     54,000 monitors
                 ·rt.sync.monitorInflations:     56,000 monitors
                 ·rt.sync.notifications:         12,000 counts
                 ·rt.sync.parks:                 18,000 counts
                 ·threads.alive:                 6,000 threads
                 ·threads.daemon:                5,000 threads
                 ·threads.started:               10,000 threads

# Processing profiler results: SafepointsProfiler


Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOSyncFileSeekBenchmarks.seekAndReadFileUsingSmallChunks:·gc.alloc.rate":
  196,013 MB/sec

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOSyncFileSeekBenchmarks.seekAndReadFileUsingSmallChunks:·gc.alloc.rate.norm":
  134375384,000 B/op

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOSyncFileSeekBenchmarks.seekAndReadFileUsingSmallChunks:·gc.churn.PS_Eden_Space":
  195,783 MB/sec

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOSyncFileSeekBenchmarks.seekAndReadFileUsingSmallChunks:·gc.churn.PS_Eden_Space.norm":
  134217728,000 B/op

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOSyncFileSeekBenchmarks.seekAndReadFileUsingSmallChunks:·gc.count":
  1,000 counts

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOSyncFileSeekBenchmarks.seekAndReadFileUsingSmallChunks:·gc.time":
  1,000 ms

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOSyncFileSeekBenchmarks.seekAndReadFileUsingSmallChunks:·rt.safepointSyncTime":
  0,003 ms

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOSyncFileSeekBenchmarks.seekAndReadFileUsingSmallChunks:·rt.safepointTime":
  0,575 ms

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOSyncFileSeekBenchmarks.seekAndReadFileUsingSmallChunks:·rt.safepoints":
  11,000 counts

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOSyncFileSeekBenchmarks.seekAndReadFileUsingSmallChunks:·rt.sync.contendedLockAttempts":
  90,000 locks

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOSyncFileSeekBenchmarks.seekAndReadFileUsingSmallChunks:·rt.sync.fatMonitors":
  128,000 monitors

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOSyncFileSeekBenchmarks.seekAndReadFileUsingSmallChunks:·rt.sync.futileWakeups":
  3,000 counts

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOSyncFileSeekBenchmarks.seekAndReadFileUsingSmallChunks:·rt.sync.monitorDeflations":
  54,000 monitors

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOSyncFileSeekBenchmarks.seekAndReadFileUsingSmallChunks:·rt.sync.monitorInflations":
  56,000 monitors

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOSyncFileSeekBenchmarks.seekAndReadFileUsingSmallChunks:·rt.sync.notifications":
  12,000 counts

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOSyncFileSeekBenchmarks.seekAndReadFileUsingSmallChunks:·rt.sync.parks":
  18,000 counts

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOSyncFileSeekBenchmarks.seekAndReadFileUsingSmallChunks:·safepoints.interval":
  1300,000 ms

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOSyncFileSeekBenchmarks.seekAndReadFileUsingSmallChunks:·safepoints.pause":
  6,212 ms

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOSyncFileSeekBenchmarks.seekAndReadFileUsingSmallChunks:·safepoints.ttsp":
  0,036 ms

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOSyncFileSeekBenchmarks.seekAndReadFileUsingSmallChunks:·threads.alive":
  6,000 threads

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOSyncFileSeekBenchmarks.seekAndReadFileUsingSmallChunks:·threads.daemon":
  5,000 threads

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOSyncFileSeekBenchmarks.seekAndReadFileUsingSmallChunks:·threads.started":
  10,000 threads


# JMH version: 1.26
# VM version: JDK 1.8.0_102, Java HotSpot(TM) 64-Bit Server VM, 25.102-b14
# VM invoker: C:\Program Files\Java\jdk1.8.0_102\jre\bin\java.exe
# VM options: -DbenchmarkClasses= -DwarmUpSeconds=1 -DmeasurementIterations=1 -DnumberOfBenchmarkForks=1 -DwarmUpIterations=1 -DrunThreadCount=1 -Dfile.encoding=UTF-8
# Warmup: 1 iterations, 1 s each
# Measurement: 1 iterations, single-shot each
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.gocypher.cybench.jmh.jvm.client.tests.IOSyncFileSeekBenchmarks.seekAndWriteFileUsingHugeChunks

# Run progress: 100,00% complete, ETA 00:00:00
# Fork: 1 of 1
# Preparing profilers: SafepointsProfiler
# Profilers consume stdout from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/C:/Users/slabs/.m2/repository/org/slf4j/slf4j-log4j12/1.7.30/slf4j-log4j12-1.7.30.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/C:/workspace/CyBench-Intellij/build/idea-sandbox/plugins/CyBench-Intellij/lib/slf4j-log4j12-1.7.30.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
2020-11-05 09:59:06,613 INFO  [com.gocypher.cybench.jmh.jvm.client.tests.IOSyncFileSeekBenchmarks.seekAndWriteFileUsingHugeChunks-jmh-worker-1!IOSyncFileSeekBenchmarks] -
-->Will generate binary file for tests...
2020-11-05 09:59:06,616 INFO  [com.gocypher.cybench.jmh.jvm.client.tests.IOSyncFileSeekBenchmarks.seekAndWriteFileUsingHugeChunks-jmh-worker-1!IOUtils] - Data file for tests exists, a new one will not be created
2020-11-05 09:59:06,618 INFO  [com.gocypher.cybench.jmh.jvm.client.tests.IOSyncFileSeekBenchmarks.seekAndWriteFileUsingHugeChunks-jmh-worker-1!IOSyncFileSeekBenchmarks] -
-->Generated file small_binary.bin for processing, size(B):134217728
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
2020-11-05 09:59:06,619 INFO  [com.gocypher.cybench.jmh.jvm.client.tests.IOSyncFileSeekBenchmarks.seekAndWriteFileUsingHugeChunks-jmh-worker-1!IOSyncFileSeekBenchmarks] - Will generate an array of random numbers for file positions
2020-11-05 09:59:06,674 INFO  [com.gocypher.cybench.jmh.jvm.client.tests.IOSyncFileSeekBenchmarks.seekAndWriteFileUsingHugeChunks-jmh-worker-1!IOSyncFileSeekBenchmarks] - Generated all prerequisites!
2020-11-05 09:59:06,675 INFO  [com.gocypher.cybench.jmh.jvm.client.tests.IOSyncFileSeekBenchmarks.seekAndWriteFileUsingHugeChunks-jmh-worker-1!IOSyncFileSeekBenchmarks] -
 Will setup for iteration...
2020-11-05 09:59:07,065 INFO  [com.gocypher.cybench.jmh.jvm.client.tests.IOSyncFileSeekBenchmarks.seekAndWriteFileUsingHugeChunks-jmh-worker-1!IOSyncFileSeekBenchmarks] -
==>Iteration clean up successful!
387,279 ms/op
Iteration   1: 2020-11-05 09:59:08,240 INFO  [com.gocypher.cybench.jmh.jvm.client.tests.IOSyncFileSeekBenchmarks.seekAndWriteFileUsingHugeChunks-jmh-worker-1!IOSyncFileSeekBenchmarks] -
 Will setup for iteration...
2020-11-05 09:59:08,628 INFO  [com.gocypher.cybench.jmh.jvm.client.tests.IOSyncFileSeekBenchmarks.seekAndWriteFileUsingHugeChunks-jmh-worker-1!IOSyncFileSeekBenchmarks] -
==>Iteration clean up successful!
2020-11-05 09:59:08,630 INFO  [com.gocypher.cybench.jmh.jvm.client.tests.IOSyncFileSeekBenchmarks.seekAndWriteFileUsingHugeChunks-jmh-worker-1!IOSyncFileSeekBenchmarks] -
==>Generated files were closed successfully!
381,451 ms/op
                 ·gc.alloc.rate:                 0,023 MB/sec
                 ·gc.alloc.rate.norm:            21160,000 B/op
                 ·gc.count:                      ≈ 0 counts
                 ·rt.safepointSyncTime:          0,025 ms
                 ·rt.safepointTime:              0,551 ms
                 ·rt.safepoints:                 9,000 counts
                 ·rt.sync.contendedLockAttempts: 62,000 locks
                 ·rt.sync.fatMonitors:           128,000 monitors
                 ·rt.sync.futileWakeups:         2,000 counts
                 ·rt.sync.monitorDeflations:     53,000 monitors
                 ·rt.sync.monitorInflations:     55,000 monitors
                 ·rt.sync.notifications:         10,000 counts
                 ·rt.sync.parks:                 17,000 counts
                 ·threads.alive:                 6,000 threads
                 ·threads.daemon:                5,000 threads
                 ·threads.started:               10,000 threads

# Processing profiler results: SafepointsProfiler


Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOSyncFileSeekBenchmarks.seekAndWriteFileUsingHugeChunks:·gc.alloc.rate":
  0,023 MB/sec

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOSyncFileSeekBenchmarks.seekAndWriteFileUsingHugeChunks:·gc.alloc.rate.norm":
  21160,000 B/op

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOSyncFileSeekBenchmarks.seekAndWriteFileUsingHugeChunks:·gc.count":
  ≈ 0 counts

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOSyncFileSeekBenchmarks.seekAndWriteFileUsingHugeChunks:·rt.safepointSyncTime":
  0,025 ms

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOSyncFileSeekBenchmarks.seekAndWriteFileUsingHugeChunks:·rt.safepointTime":
  0,551 ms

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOSyncFileSeekBenchmarks.seekAndWriteFileUsingHugeChunks:·rt.safepoints":
  9,000 counts

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOSyncFileSeekBenchmarks.seekAndWriteFileUsingHugeChunks:·rt.sync.contendedLockAttempts":
  62,000 locks

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOSyncFileSeekBenchmarks.seekAndWriteFileUsingHugeChunks:·rt.sync.fatMonitors":
  128,000 monitors

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOSyncFileSeekBenchmarks.seekAndWriteFileUsingHugeChunks:·rt.sync.futileWakeups":
  2,000 counts

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOSyncFileSeekBenchmarks.seekAndWriteFileUsingHugeChunks:·rt.sync.monitorDeflations":
  53,000 monitors

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOSyncFileSeekBenchmarks.seekAndWriteFileUsingHugeChunks:·rt.sync.monitorInflations":
  55,000 monitors

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOSyncFileSeekBenchmarks.seekAndWriteFileUsingHugeChunks:·rt.sync.notifications":
  10,000 counts

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOSyncFileSeekBenchmarks.seekAndWriteFileUsingHugeChunks:·rt.sync.parks":
  17,000 counts

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOSyncFileSeekBenchmarks.seekAndWriteFileUsingHugeChunks:·safepoints.interval":
  1543,000 ms

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOSyncFileSeekBenchmarks.seekAndWriteFileUsingHugeChunks:·safepoints.pause":
  10,496 ±(99.9%) 0,001 ms [Sum]
  (min, avg, max) = (0,127, 3,499, 10,240), stdev = 5,838
  CI (99.9%): [10,496, 10,496] (assumes normal distribution)

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOSyncFileSeekBenchmarks.seekAndWriteFileUsingHugeChunks:·safepoints.ttsp":
  0,219 ±(99.9%) 0,001 ms [Sum]
  (min, avg, max) = (0,032, 0,073, 0,133), stdev = 0,053
  CI (99.9%): [0,219, 0,219] (assumes normal distribution)

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOSyncFileSeekBenchmarks.seekAndWriteFileUsingHugeChunks:·threads.alive":
  6,000 threads

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOSyncFileSeekBenchmarks.seekAndWriteFileUsingHugeChunks:·threads.daemon":
  5,000 threads

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOSyncFileSeekBenchmarks.seekAndWriteFileUsingHugeChunks:·threads.started":
  10,000 threads


# JMH version: 1.26
# VM version: JDK 1.8.0_102, Java HotSpot(TM) 64-Bit Server VM, 25.102-b14
# VM invoker: C:\Program Files\Java\jdk1.8.0_102\jre\bin\java.exe
# VM options: -DbenchmarkClasses= -DwarmUpSeconds=1 -DmeasurementIterations=1 -DnumberOfBenchmarkForks=1 -DwarmUpIterations=1 -DrunThreadCount=1 -Dfile.encoding=UTF-8
# Warmup: 1 iterations, 1 s each
# Measurement: 1 iterations, single-shot each
# Timeout: 10 min per iteration
# Threads: 1 thread
# Benchmark mode: Single shot invocation time
# Benchmark: com.gocypher.cybench.jmh.jvm.client.tests.IOSyncFileSeekBenchmarks.seekAndWriteFileUsingSmallChunks

# Run progress: 100,00% complete, ETA 00:00:00
# Fork: 1 of 1
# Preparing profilers: SafepointsProfiler
# Profilers consume stdout from target VM, use -v EXTRA to copy to console
# Warmup Iteration   1: SLF4J: Class path contains multiple SLF4J bindings.
SLF4J: Found binding in [jar:file:/C:/Users/slabs/.m2/repository/org/slf4j/slf4j-log4j12/1.7.30/slf4j-log4j12-1.7.30.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: Found binding in [jar:file:/C:/workspace/CyBench-Intellij/build/idea-sandbox/plugins/CyBench-Intellij/lib/slf4j-log4j12-1.7.30.jar!/org/slf4j/impl/StaticLoggerBinder.class]
SLF4J: See http://www.slf4j.org/codes.html#multiple_bindings for an explanation.
SLF4J: Actual binding is of type [org.slf4j.impl.Log4jLoggerFactory]
2020-11-05 09:59:11,256 INFO  [com.gocypher.cybench.jmh.jvm.client.tests.IOSyncFileSeekBenchmarks.seekAndWriteFileUsingSmallChunks-jmh-worker-1!IOSyncFileSeekBenchmarks] -
-->Will generate binary file for tests...
2020-11-05 09:59:11,259 INFO  [com.gocypher.cybench.jmh.jvm.client.tests.IOSyncFileSeekBenchmarks.seekAndWriteFileUsingSmallChunks-jmh-worker-1!IOUtils] - Data file for tests exists, a new one will not be created
2020-11-05 09:59:11,260 INFO  [com.gocypher.cybench.jmh.jvm.client.tests.IOSyncFileSeekBenchmarks.seekAndWriteFileUsingSmallChunks-jmh-worker-1!IOSyncFileSeekBenchmarks] -
-->Generated file small_binary.bin for processing, size(B):134217728
2020-11-05 09:59:11,261 INFO  [com.gocypher.cybench.jmh.jvm.client.tests.IOSyncFileSeekBenchmarks.seekAndWriteFileUsingSmallChunks-jmh-worker-1!IOSyncFileSeekBenchmarks] - Will generate an array of random numbers for file positions
2020-11-05 09:59:11,319 INFO  [com.gocypher.cybench.jmh.jvm.client.tests.IOSyncFileSeekBenchmarks.seekAndWriteFileUsingSmallChunks-jmh-worker-1!IOSyncFileSeekBenchmarks] - Generated all prerequisites!
2020-11-05 09:59:11,320 INFO  [com.gocypher.cybench.jmh.jvm.client.tests.IOSyncFileSeekBenchmarks.seekAndWriteFileUsingSmallChunks-jmh-worker-1!IOSyncFileSeekBenchmarks] -
 Will setup for iteration...
2020-11-05 09:59:12,226 INFO  [com.gocypher.cybench.jmh.jvm.client.tests.IOSyncFileSeekBenchmarks.seekAndWriteFileUsingSmallChunks-jmh-worker-1!IOSyncFileSeekBenchmarks] -
==>Iteration clean up successful!
904,153 ms/op
Iteration   1: 2020-11-05 09:59:13,423 INFO  [com.gocypher.cybench.jmh.jvm.client.tests.IOSyncFileSeekBenchmarks.seekAndWriteFileUsingSmallChunks-jmh-worker-1!IOSyncFileSeekBenchmarks] -
 Will setup for iteration...
2020-11-05 09:59:14,332 INFO  [com.gocypher.cybench.jmh.jvm.client.tests.IOSyncFileSeekBenchmarks.seekAndWriteFileUsingSmallChunks-jmh-worker-1!IOSyncFileSeekBenchmarks] -
==>Iteration clean up successful!
2020-11-05 09:59:14,333 INFO  [com.gocypher.cybench.jmh.jvm.client.tests.IOSyncFileSeekBenchmarks.seekAndWriteFileUsingSmallChunks-jmh-worker-1!IOSyncFileSeekBenchmarks] -
==>Generated files were closed successfully!
901,815 ms/op
                 ·gc.alloc.rate:                 0,018 MB/sec
                 ·gc.alloc.rate.norm:            26584,000 B/op
                 ·gc.count:                      ≈ 0 counts
                 ·rt.safepointSyncTime:          0,003 ms
                 ·rt.safepointTime:              0,724 ms
                 ·rt.safepoints:                 10,000 counts
                 ·rt.sync.contendedLockAttempts: 38,000 locks
                 ·rt.sync.fatMonitors:           128,000 monitors
                 ·rt.sync.futileWakeups:         2,000 counts
                 ·rt.sync.monitorDeflations:     53,000 monitors
                 ·rt.sync.monitorInflations:     55,000 monitors
                 ·rt.sync.notifications:         10,000 counts
                 ·rt.sync.parks:                 16,000 counts
                 ·threads.alive:                 6,000 threads
                 ·threads.daemon:                5,000 threads
                 ·threads.started:               10,000 threads

# Processing profiler results: SafepointsProfiler


Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOSyncFileSeekBenchmarks.seekAndWriteFileUsingSmallChunks:·gc.alloc.rate":
  0,018 MB/sec

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOSyncFileSeekBenchmarks.seekAndWriteFileUsingSmallChunks:·gc.alloc.rate.norm":
  26584,000 B/op

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOSyncFileSeekBenchmarks.seekAndWriteFileUsingSmallChunks:·gc.count":
  ≈ 0 counts

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOSyncFileSeekBenchmarks.seekAndWriteFileUsingSmallChunks:·rt.safepointSyncTime":
  0,003 ms

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOSyncFileSeekBenchmarks.seekAndWriteFileUsingSmallChunks:·rt.safepointTime":
  0,724 ms

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOSyncFileSeekBenchmarks.seekAndWriteFileUsingSmallChunks:·rt.safepoints":
  10,000 counts

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOSyncFileSeekBenchmarks.seekAndWriteFileUsingSmallChunks:·rt.sync.contendedLockAttempts":
  38,000 locks

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOSyncFileSeekBenchmarks.seekAndWriteFileUsingSmallChunks:·rt.sync.fatMonitors":
  128,000 monitors

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOSyncFileSeekBenchmarks.seekAndWriteFileUsingSmallChunks:·rt.sync.futileWakeups":
  2,000 counts

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOSyncFileSeekBenchmarks.seekAndWriteFileUsingSmallChunks:·rt.sync.monitorDeflations":
  53,000 monitors

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOSyncFileSeekBenchmarks.seekAndWriteFileUsingSmallChunks:·rt.sync.monitorInflations":
  55,000 monitors

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOSyncFileSeekBenchmarks.seekAndWriteFileUsingSmallChunks:·rt.sync.notifications":
  10,000 counts

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOSyncFileSeekBenchmarks.seekAndWriteFileUsingSmallChunks:·rt.sync.parks":
  16,000 counts

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOSyncFileSeekBenchmarks.seekAndWriteFileUsingSmallChunks:·safepoints.interval":
  2088,000 ms

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOSyncFileSeekBenchmarks.seekAndWriteFileUsingSmallChunks:·safepoints.pause":
  49,679 ±(99.9%) 0,001 ms [Sum]
  (min, avg, max) = (0,106, 12,420, 39,649), stdev = 18,709
  CI (99.9%): [49,679, 49,679] (assumes normal distribution)

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOSyncFileSeekBenchmarks.seekAndWriteFileUsingSmallChunks:·safepoints.ttsp":
  0,146 ±(99.9%) 0,001 ms [Sum]
  (min, avg, max) = (0,014, 0,037, 0,049), stdev = 0,016
  CI (99.9%): [0,146, 0,146] (assumes normal distribution)

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOSyncFileSeekBenchmarks.seekAndWriteFileUsingSmallChunks:·threads.alive":
  6,000 threads

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOSyncFileSeekBenchmarks.seekAndWriteFileUsingSmallChunks:·threads.daemon":
  5,000 threads

Secondary result "com.gocypher.cybench.jmh.jvm.client.tests.IOSyncFileSeekBenchmarks.seekAndWriteFileUsingSmallChunks:·threads.started":
  10,000 threads


# Run complete. Total time: 00:06:20

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                                                                                       Mode  Cnt           Score   Error     Units
NumberBenchmarks.generateAndAddAtomicNumbers                                                                   thrpt         27365737,359             ops/s
NumberBenchmarks.generateAndAddAtomicNumbers:·gc.alloc.rate                                                    thrpt             1786,491            MB/sec
NumberBenchmarks.generateAndAddAtomicNumbers:·gc.alloc.rate.norm                                               thrpt               71,939              B/op
NumberBenchmarks.generateAndAddAtomicNumbers:·gc.churn.PS_Eden_Space                                           thrpt             1779,139            MB/sec
NumberBenchmarks.generateAndAddAtomicNumbers:·gc.churn.PS_Eden_Space.norm                                      thrpt               71,643              B/op
NumberBenchmarks.generateAndAddAtomicNumbers:·gc.churn.PS_Survivor_Space                                       thrpt                0,050            MB/sec
NumberBenchmarks.generateAndAddAtomicNumbers:·gc.churn.PS_Survivor_Space.norm                                  thrpt                0,002              B/op
NumberBenchmarks.generateAndAddAtomicNumbers:·gc.count                                                         thrpt               92,000            counts
NumberBenchmarks.generateAndAddAtomicNumbers:·gc.time                                                          thrpt               74,000                ms
NumberBenchmarks.generateAndAddAtomicNumbers:·rt.safepointSyncTime                                             thrpt                0,031                ms
NumberBenchmarks.generateAndAddAtomicNumbers:·rt.safepointTime                                                 thrpt                1,448                ms
NumberBenchmarks.generateAndAddAtomicNumbers:·rt.safepoints                                                    thrpt              108,000            counts
NumberBenchmarks.generateAndAddAtomicNumbers:·rt.sync.contendedLockAttempts                                    thrpt               83,000             locks
NumberBenchmarks.generateAndAddAtomicNumbers:·rt.sync.fatMonitors                                              thrpt              128,000          monitors
NumberBenchmarks.generateAndAddAtomicNumbers:·rt.sync.futileWakeups                                            thrpt                6,000            counts
NumberBenchmarks.generateAndAddAtomicNumbers:·rt.sync.monitorDeflations                                        thrpt               57,000          monitors
NumberBenchmarks.generateAndAddAtomicNumbers:·rt.sync.monitorInflations                                        thrpt               59,000          monitors
NumberBenchmarks.generateAndAddAtomicNumbers:·rt.sync.notifications                                            thrpt               20,000            counts
NumberBenchmarks.generateAndAddAtomicNumbers:·rt.sync.parks                                                    thrpt               34,000            counts
NumberBenchmarks.generateAndAddAtomicNumbers:·safepoints.interval                                              thrpt            11166,000                ms
NumberBenchmarks.generateAndAddAtomicNumbers:·safepoints.pause                                                 thrpt   93          88,363                ms
NumberBenchmarks.generateAndAddAtomicNumbers:·safepoints.pause.avg                                             thrpt                0,950                ms
NumberBenchmarks.generateAndAddAtomicNumbers:·safepoints.pause.count                                           thrpt               93,000                 #
NumberBenchmarks.generateAndAddAtomicNumbers:·safepoints.pause.p0.00                                           thrpt                0,175                ms
NumberBenchmarks.generateAndAddAtomicNumbers:·safepoints.pause.p0.50                                           thrpt                0,945                ms
NumberBenchmarks.generateAndAddAtomicNumbers:·safepoints.pause.p0.90                                           thrpt                1,244                ms
NumberBenchmarks.generateAndAddAtomicNumbers:·safepoints.pause.p0.95                                           thrpt                1,373                ms
NumberBenchmarks.generateAndAddAtomicNumbers:·safepoints.pause.p0.99                                           thrpt                1,518                ms
NumberBenchmarks.generateAndAddAtomicNumbers:·safepoints.pause.p0.999                                          thrpt                1,518                ms
NumberBenchmarks.generateAndAddAtomicNumbers:·safepoints.pause.p0.9999                                         thrpt                1,518                ms
NumberBenchmarks.generateAndAddAtomicNumbers:·safepoints.pause.p1.00                                           thrpt                1,518                ms
NumberBenchmarks.generateAndAddAtomicNumbers:·safepoints.ttsp                                                  thrpt   93           2,519                ms
NumberBenchmarks.generateAndAddAtomicNumbers:·safepoints.ttsp.avg                                              thrpt                0,027                ms
NumberBenchmarks.generateAndAddAtomicNumbers:·safepoints.ttsp.count                                            thrpt               93,000                 #
NumberBenchmarks.generateAndAddAtomicNumbers:·safepoints.ttsp.p0.00                                            thrpt                0,017                ms
NumberBenchmarks.generateAndAddAtomicNumbers:·safepoints.ttsp.p0.50                                            thrpt                0,019                ms
NumberBenchmarks.generateAndAddAtomicNumbers:·safepoints.ttsp.p0.90                                            thrpt                0,045                ms
NumberBenchmarks.generateAndAddAtomicNumbers:·safepoints.ttsp.p0.95                                            thrpt                0,048                ms
NumberBenchmarks.generateAndAddAtomicNumbers:·safepoints.ttsp.p0.99                                            thrpt                0,106                ms
NumberBenchmarks.generateAndAddAtomicNumbers:·safepoints.ttsp.p0.999                                           thrpt                0,106                ms
NumberBenchmarks.generateAndAddAtomicNumbers:·safepoints.ttsp.p0.9999                                          thrpt                0,106                ms
NumberBenchmarks.generateAndAddAtomicNumbers:·safepoints.ttsp.p1.00                                            thrpt                0,106                ms
NumberBenchmarks.generateAndAddAtomicNumbers:·threads.alive                                                    thrpt                6,000           threads
NumberBenchmarks.generateAndAddAtomicNumbers:·threads.daemon                                                   thrpt                5,000           threads
NumberBenchmarks.generateAndAddAtomicNumbers:·threads.started                                                  thrpt               10,000           threads
NumberBenchmarks.generateAndAddBigDecimalNumbers                                                               thrpt         29318853,977             ops/s
NumberBenchmarks.generateAndAddBigDecimalNumbers:·gc.alloc.rate                                                thrpt             4253,882            MB/sec
NumberBenchmarks.generateAndAddBigDecimalNumbers:·gc.alloc.rate.norm                                           thrpt              159,987              B/op
NumberBenchmarks.generateAndAddBigDecimalNumbers:·gc.churn.PS_Eden_Space                                       thrpt             4238,245            MB/sec
NumberBenchmarks.generateAndAddBigDecimalNumbers:·gc.churn.PS_Eden_Space.norm                                  thrpt              159,399              B/op
NumberBenchmarks.generateAndAddBigDecimalNumbers:·gc.churn.PS_Survivor_Space                                   thrpt                0,074            MB/sec
NumberBenchmarks.generateAndAddBigDecimalNumbers:·gc.churn.PS_Survivor_Space.norm                              thrpt                0,003              B/op
NumberBenchmarks.generateAndAddBigDecimalNumbers:·gc.count                                                     thrpt               85,000            counts
NumberBenchmarks.generateAndAddBigDecimalNumbers:·gc.time                                                      thrpt               68,000                ms
NumberBenchmarks.generateAndAddBigDecimalNumbers:·rt.safepointSyncTime                                         thrpt                0,030                ms
NumberBenchmarks.generateAndAddBigDecimalNumbers:·rt.safepointTime                                             thrpt                1,482                ms
NumberBenchmarks.generateAndAddBigDecimalNumbers:·rt.safepoints                                                thrpt              103,000            counts
NumberBenchmarks.generateAndAddBigDecimalNumbers:·rt.sync.contendedLockAttempts                                thrpt               54,000             locks
NumberBenchmarks.generateAndAddBigDecimalNumbers:·rt.sync.fatMonitors                                          thrpt              128,000          monitors
NumberBenchmarks.generateAndAddBigDecimalNumbers:·rt.sync.futileWakeups                                        thrpt                4,000            counts
NumberBenchmarks.generateAndAddBigDecimalNumbers:·rt.sync.monitorDeflations                                    thrpt               57,000          monitors
NumberBenchmarks.generateAndAddBigDecimalNumbers:·rt.sync.monitorInflations                                    thrpt               59,000          monitors
NumberBenchmarks.generateAndAddBigDecimalNumbers:·rt.sync.notifications                                        thrpt               23,000            counts
NumberBenchmarks.generateAndAddBigDecimalNumbers:·rt.sync.parks                                                thrpt               35,000            counts
NumberBenchmarks.generateAndAddBigDecimalNumbers:·safepoints.interval                                          thrpt            11166,000                ms
NumberBenchmarks.generateAndAddBigDecimalNumbers:·safepoints.pause                                             thrpt   86          81,762                ms
NumberBenchmarks.generateAndAddBigDecimalNumbers:·safepoints.pause.avg                                         thrpt                0,951                ms
NumberBenchmarks.generateAndAddBigDecimalNumbers:·safepoints.pause.count                                       thrpt               86,000                 #
NumberBenchmarks.generateAndAddBigDecimalNumbers:·safepoints.pause.p0.00                                       thrpt                0,230                ms
NumberBenchmarks.generateAndAddBigDecimalNumbers:·safepoints.pause.p0.50                                       thrpt                0,945                ms
NumberBenchmarks.generateAndAddBigDecimalNumbers:·safepoints.pause.p0.90                                       thrpt                1,304                ms
NumberBenchmarks.generateAndAddBigDecimalNumbers:·safepoints.pause.p0.95                                       thrpt                1,363                ms
NumberBenchmarks.generateAndAddBigDecimalNumbers:·safepoints.pause.p0.99                                       thrpt                1,700                ms
NumberBenchmarks.generateAndAddBigDecimalNumbers:·safepoints.pause.p0.999                                      thrpt                1,700                ms
NumberBenchmarks.generateAndAddBigDecimalNumbers:·safepoints.pause.p0.9999                                     thrpt                1,700                ms
NumberBenchmarks.generateAndAddBigDecimalNumbers:·safepoints.pause.p1.00                                       thrpt                1,700                ms
NumberBenchmarks.generateAndAddBigDecimalNumbers:·safepoints.ttsp                                              thrpt   86           2,517                ms
NumberBenchmarks.generateAndAddBigDecimalNumbers:·safepoints.ttsp.avg                                          thrpt                0,029                ms
NumberBenchmarks.generateAndAddBigDecimalNumbers:·safepoints.ttsp.count                                        thrpt               86,000                 #
NumberBenchmarks.generateAndAddBigDecimalNumbers:·safepoints.ttsp.p0.00                                        thrpt                0,017                ms
NumberBenchmarks.generateAndAddBigDecimalNumbers:·safepoints.ttsp.p0.50                                        thrpt                0,032                ms
NumberBenchmarks.generateAndAddBigDecimalNumbers:·safepoints.ttsp.p0.90                                        thrpt                0,048                ms
NumberBenchmarks.generateAndAddBigDecimalNumbers:·safepoints.ttsp.p0.95                                        thrpt                0,055                ms
NumberBenchmarks.generateAndAddBigDecimalNumbers:·safepoints.ttsp.p0.99                                        thrpt                0,063                ms
NumberBenchmarks.generateAndAddBigDecimalNumbers:·safepoints.ttsp.p0.999                                       thrpt                0,063                ms
NumberBenchmarks.generateAndAddBigDecimalNumbers:·safepoints.ttsp.p0.9999                                      thrpt                0,063                ms
NumberBenchmarks.generateAndAddBigDecimalNumbers:·safepoints.ttsp.p1.00                                        thrpt                0,063                ms
NumberBenchmarks.generateAndAddBigDecimalNumbers:·threads.alive                                                thrpt                6,000           threads
NumberBenchmarks.generateAndAddBigDecimalNumbers:·threads.daemon                                               thrpt                5,000           threads
NumberBenchmarks.generateAndAddBigDecimalNumbers:·threads.started                                              thrpt               10,000           threads
NumberBenchmarks.generateAndAddDoubleNumbers                                                                   thrpt         25441349,420             ops/s
NumberBenchmarks.generateAndAddDoubleNumbers:·gc.alloc.rate                                                    thrpt              555,309            MB/sec
NumberBenchmarks.generateAndAddDoubleNumbers:·gc.alloc.rate.norm                                               thrpt               24,049              B/op
NumberBenchmarks.generateAndAddDoubleNumbers:·gc.churn.PS_Eden_Space                                           thrpt              550,743            MB/sec
NumberBenchmarks.generateAndAddDoubleNumbers:·gc.churn.PS_Eden_Space.norm                                      thrpt               23,851              B/op
NumberBenchmarks.generateAndAddDoubleNumbers:·gc.churn.PS_Survivor_Space                                       thrpt                0,039            MB/sec
NumberBenchmarks.generateAndAddDoubleNumbers:·gc.churn.PS_Survivor_Space.norm                                  thrpt                0,002              B/op
NumberBenchmarks.generateAndAddDoubleNumbers:·gc.count                                                         thrpt              111,000            counts
NumberBenchmarks.generateAndAddDoubleNumbers:·gc.time                                                          thrpt               85,000                ms
NumberBenchmarks.generateAndAddDoubleNumbers:·rt.safepointSyncTime                                             thrpt                0,038                ms
NumberBenchmarks.generateAndAddDoubleNumbers:·rt.safepointTime                                                 thrpt                1,614                ms
NumberBenchmarks.generateAndAddDoubleNumbers:·rt.safepoints                                                    thrpt              128,000            counts
NumberBenchmarks.generateAndAddDoubleNumbers:·rt.sync.contendedLockAttempts                                    thrpt               49,000             locks
NumberBenchmarks.generateAndAddDoubleNumbers:·rt.sync.fatMonitors                                              thrpt              128,000          monitors
NumberBenchmarks.generateAndAddDoubleNumbers:·rt.sync.futileWakeups                                            thrpt                6,000            counts
NumberBenchmarks.generateAndAddDoubleNumbers:·rt.sync.monitorDeflations                                        thrpt               57,000          monitors
NumberBenchmarks.generateAndAddDoubleNumbers:·rt.sync.monitorInflations                                        thrpt               59,000          monitors
NumberBenchmarks.generateAndAddDoubleNumbers:·rt.sync.notifications                                            thrpt               19,000            counts
NumberBenchmarks.generateAndAddDoubleNumbers:·rt.sync.parks                                                    thrpt               32,000            counts
NumberBenchmarks.generateAndAddDoubleNumbers:·safepoints.interval                                              thrpt            11161,000                ms
NumberBenchmarks.generateAndAddDoubleNumbers:·safepoints.pause                                                 thrpt  112         102,600                ms
NumberBenchmarks.generateAndAddDoubleNumbers:·safepoints.pause.avg                                             thrpt                0,916                ms
NumberBenchmarks.generateAndAddDoubleNumbers:·safepoints.pause.count                                           thrpt              112,000                 #
NumberBenchmarks.generateAndAddDoubleNumbers:·safepoints.pause.p0.00                                           thrpt                0,162                ms
NumberBenchmarks.generateAndAddDoubleNumbers:·safepoints.pause.p0.50                                           thrpt                0,909                ms
NumberBenchmarks.generateAndAddDoubleNumbers:·safepoints.pause.p0.90                                           thrpt                1,266                ms
NumberBenchmarks.generateAndAddDoubleNumbers:·safepoints.pause.p0.95                                           thrpt                1,351                ms
NumberBenchmarks.generateAndAddDoubleNumbers:·safepoints.pause.p0.99                                           thrpt                1,474                ms
NumberBenchmarks.generateAndAddDoubleNumbers:·safepoints.pause.p0.999                                          thrpt                1,479                ms
NumberBenchmarks.generateAndAddDoubleNumbers:·safepoints.pause.p0.9999                                         thrpt                1,479                ms
NumberBenchmarks.generateAndAddDoubleNumbers:·safepoints.pause.p1.00                                           thrpt                1,479                ms
NumberBenchmarks.generateAndAddDoubleNumbers:·safepoints.ttsp                                                  thrpt  112           3,237                ms
NumberBenchmarks.generateAndAddDoubleNumbers:·safepoints.ttsp.avg                                              thrpt                0,029                ms
NumberBenchmarks.generateAndAddDoubleNumbers:·safepoints.ttsp.count                                            thrpt              112,000                 #
NumberBenchmarks.generateAndAddDoubleNumbers:·safepoints.ttsp.p0.00                                            thrpt                0,016                ms
NumberBenchmarks.generateAndAddDoubleNumbers:·safepoints.ttsp.p0.50                                            thrpt                0,031                ms
NumberBenchmarks.generateAndAddDoubleNumbers:·safepoints.ttsp.p0.90                                            thrpt                0,045                ms
NumberBenchmarks.generateAndAddDoubleNumbers:·safepoints.ttsp.p0.95                                            thrpt                0,050                ms
NumberBenchmarks.generateAndAddDoubleNumbers:·safepoints.ttsp.p0.99                                            thrpt                0,073                ms
NumberBenchmarks.generateAndAddDoubleNumbers:·safepoints.ttsp.p0.999                                           thrpt                0,075                ms
NumberBenchmarks.generateAndAddDoubleNumbers:·safepoints.ttsp.p0.9999                                          thrpt                0,075                ms
NumberBenchmarks.generateAndAddDoubleNumbers:·safepoints.ttsp.p1.00                                            thrpt                0,075                ms
NumberBenchmarks.generateAndAddDoubleNumbers:·threads.alive                                                    thrpt                6,000           threads
NumberBenchmarks.generateAndAddDoubleNumbers:·threads.daemon                                                   thrpt                5,000           threads
NumberBenchmarks.generateAndAddDoubleNumbers:·threads.started                                                  thrpt               10,000           threads
NumberBenchmarks.generateAndLogarithmDoubleNumbers                                                             thrpt         22510137,694             ops/s
NumberBenchmarks.generateAndLogarithmDoubleNumbers:·gc.alloc.rate                                              thrpt              490,108            MB/sec
NumberBenchmarks.generateAndLogarithmDoubleNumbers:·gc.alloc.rate.norm                                         thrpt               24,000              B/op
NumberBenchmarks.generateAndLogarithmDoubleNumbers:·gc.churn.PS_Eden_Space                                     thrpt              487,744            MB/sec
NumberBenchmarks.generateAndLogarithmDoubleNumbers:·gc.churn.PS_Eden_Space.norm                                thrpt               23,884              B/op
NumberBenchmarks.generateAndLogarithmDoubleNumbers:·gc.churn.PS_Survivor_Space                                 thrpt                0,024            MB/sec
NumberBenchmarks.generateAndLogarithmDoubleNumbers:·gc.churn.PS_Survivor_Space.norm                            thrpt                0,001              B/op
NumberBenchmarks.generateAndLogarithmDoubleNumbers:·gc.count                                                   thrpt              105,000            counts
NumberBenchmarks.generateAndLogarithmDoubleNumbers:·gc.time                                                    thrpt               82,000                ms
NumberBenchmarks.generateAndLogarithmDoubleNumbers:·rt.safepointSyncTime                                       thrpt                0,034                ms
NumberBenchmarks.generateAndLogarithmDoubleNumbers:·rt.safepointTime                                           thrpt                1,494                ms
NumberBenchmarks.generateAndLogarithmDoubleNumbers:·rt.safepoints                                              thrpt              120,000            counts
NumberBenchmarks.generateAndLogarithmDoubleNumbers:·rt.sync.contendedLockAttempts                              thrpt               64,000             locks
NumberBenchmarks.generateAndLogarithmDoubleNumbers:·rt.sync.fatMonitors                                        thrpt              128,000          monitors
NumberBenchmarks.generateAndLogarithmDoubleNumbers:·rt.sync.futileWakeups                                      thrpt                5,000            counts
NumberBenchmarks.generateAndLogarithmDoubleNumbers:·rt.sync.monitorDeflations                                  thrpt               57,000          monitors
NumberBenchmarks.generateAndLogarithmDoubleNumbers:·rt.sync.monitorInflations                                  thrpt               59,000          monitors
NumberBenchmarks.generateAndLogarithmDoubleNumbers:·rt.sync.notifications                                      thrpt               18,000            counts
NumberBenchmarks.generateAndLogarithmDoubleNumbers:·rt.sync.parks                                              thrpt               28,000            counts
NumberBenchmarks.generateAndLogarithmDoubleNumbers:·safepoints.interval                                        thrpt            11160,000                ms
NumberBenchmarks.generateAndLogarithmDoubleNumbers:·safepoints.pause                                           thrpt  106          99,521                ms
NumberBenchmarks.generateAndLogarithmDoubleNumbers:·safepoints.pause.avg                                       thrpt                0,939                ms
NumberBenchmarks.generateAndLogarithmDoubleNumbers:·safepoints.pause.count                                     thrpt              106,000                 #
NumberBenchmarks.generateAndLogarithmDoubleNumbers:·safepoints.pause.p0.00                                     thrpt                0,256                ms
NumberBenchmarks.generateAndLogarithmDoubleNumbers:·safepoints.pause.p0.50                                     thrpt                0,912                ms
NumberBenchmarks.generateAndLogarithmDoubleNumbers:·safepoints.pause.p0.90                                     thrpt                1,278                ms
NumberBenchmarks.generateAndLogarithmDoubleNumbers:·safepoints.pause.p0.95                                     thrpt                1,386                ms
NumberBenchmarks.generateAndLogarithmDoubleNumbers:·safepoints.pause.p0.99                                     thrpt                1,466                ms
NumberBenchmarks.generateAndLogarithmDoubleNumbers:·safepoints.pause.p0.999                                    thrpt                1,466                ms
NumberBenchmarks.generateAndLogarithmDoubleNumbers:·safepoints.pause.p0.9999                                   thrpt                1,466                ms
NumberBenchmarks.generateAndLogarithmDoubleNumbers:·safepoints.pause.p1.00                                     thrpt                1,466                ms
NumberBenchmarks.generateAndLogarithmDoubleNumbers:·safepoints.ttsp                                            thrpt  106           2,973                ms
NumberBenchmarks.generateAndLogarithmDoubleNumbers:·safepoints.ttsp.avg                                        thrpt                0,028                ms
NumberBenchmarks.generateAndLogarithmDoubleNumbers:·safepoints.ttsp.count                                      thrpt              106,000                 #
NumberBenchmarks.generateAndLogarithmDoubleNumbers:·safepoints.ttsp.p0.00                                      thrpt                0,015                ms
NumberBenchmarks.generateAndLogarithmDoubleNumbers:·safepoints.ttsp.p0.50                                      thrpt                0,031                ms
NumberBenchmarks.generateAndLogarithmDoubleNumbers:·safepoints.ttsp.p0.90                                      thrpt                0,045                ms
NumberBenchmarks.generateAndLogarithmDoubleNumbers:·safepoints.ttsp.p0.95                                      thrpt                0,047                ms
NumberBenchmarks.generateAndLogarithmDoubleNumbers:·safepoints.ttsp.p0.99                                      thrpt                0,065                ms
NumberBenchmarks.generateAndLogarithmDoubleNumbers:·safepoints.ttsp.p0.999                                     thrpt                0,066                ms
NumberBenchmarks.generateAndLogarithmDoubleNumbers:·safepoints.ttsp.p0.9999                                    thrpt                0,066                ms
NumberBenchmarks.generateAndLogarithmDoubleNumbers:·safepoints.ttsp.p1.00                                      thrpt                0,066                ms
NumberBenchmarks.generateAndLogarithmDoubleNumbers:·threads.alive                                              thrpt                6,000           threads
NumberBenchmarks.generateAndLogarithmDoubleNumbers:·threads.daemon                                             thrpt                5,000           threads
NumberBenchmarks.generateAndLogarithmDoubleNumbers:·threads.started                                            thrpt               10,000           threads
NumberBenchmarks.generateAndPowerDoubleNumbers                                                                 thrpt         11797494,031             ops/s
NumberBenchmarks.generateAndPowerDoubleNumbers:·gc.alloc.rate                                                  thrpt              256,944            MB/sec
NumberBenchmarks.generateAndPowerDoubleNumbers:·gc.alloc.rate.norm                                             thrpt               24,000              B/op
NumberBenchmarks.generateAndPowerDoubleNumbers:·gc.churn.PS_Eden_Space                                         thrpt              256,204            MB/sec
NumberBenchmarks.generateAndPowerDoubleNumbers:·gc.churn.PS_Eden_Space.norm                                    thrpt               23,931              B/op
NumberBenchmarks.generateAndPowerDoubleNumbers:·gc.churn.PS_Survivor_Space                                     thrpt                0,024            MB/sec
NumberBenchmarks.generateAndPowerDoubleNumbers:·gc.churn.PS_Survivor_Space.norm                                thrpt                0,002              B/op
NumberBenchmarks.generateAndPowerDoubleNumbers:·gc.count                                                       thrpt               66,000            counts
NumberBenchmarks.generateAndPowerDoubleNumbers:·gc.time                                                        thrpt               54,000                ms
NumberBenchmarks.generateAndPowerDoubleNumbers:·rt.safepointSyncTime                                           thrpt                0,025                ms
NumberBenchmarks.generateAndPowerDoubleNumbers:·rt.safepointTime                                               thrpt                1,205                ms
NumberBenchmarks.generateAndPowerDoubleNumbers:·rt.safepoints                                                  thrpt               77,000            counts
NumberBenchmarks.generateAndPowerDoubleNumbers:·rt.sync.contendedLockAttempts                                  thrpt               96,000             locks
NumberBenchmarks.generateAndPowerDoubleNumbers:·rt.sync.fatMonitors                                            thrpt              128,000          monitors
NumberBenchmarks.generateAndPowerDoubleNumbers:·rt.sync.futileWakeups                                          thrpt                7,000            counts
NumberBenchmarks.generateAndPowerDoubleNumbers:·rt.sync.monitorDeflations                                      thrpt               57,000          monitors
NumberBenchmarks.generateAndPowerDoubleNumbers:·rt.sync.monitorInflations                                      thrpt               59,000          monitors
NumberBenchmarks.generateAndPowerDoubleNumbers:·rt.sync.notifications                                          thrpt               17,000            counts
NumberBenchmarks.generateAndPowerDoubleNumbers:·rt.sync.parks                                                  thrpt               29,000            counts
NumberBenchmarks.generateAndPowerDoubleNumbers:·safepoints.interval                                            thrpt            11183,000                ms
NumberBenchmarks.generateAndPowerDoubleNumbers:·safepoints.pause                                               thrpt   67          65,136                ms
NumberBenchmarks.generateAndPowerDoubleNumbers:·safepoints.pause.avg                                           thrpt                0,972                ms
NumberBenchmarks.generateAndPowerDoubleNumbers:·safepoints.pause.count                                         thrpt               67,000                 #
NumberBenchmarks.generateAndPowerDoubleNumbers:·safepoints.pause.p0.00                                         thrpt                0,112                ms
NumberBenchmarks.generateAndPowerDoubleNumbers:·safepoints.pause.p0.50                                         thrpt                0,954                ms
NumberBenchmarks.generateAndPowerDoubleNumbers:·safepoints.pause.p0.90                                         thrpt                1,374                ms
NumberBenchmarks.generateAndPowerDoubleNumbers:·safepoints.pause.p0.95                                         thrpt                1,529                ms
NumberBenchmarks.generateAndPowerDoubleNumbers:·safepoints.pause.p0.99                                         thrpt                1,642                ms
NumberBenchmarks.generateAndPowerDoubleNumbers:·safepoints.pause.p0.999                                        thrpt                1,642                ms
NumberBenchmarks.generateAndPowerDoubleNumbers:·safepoints.pause.p0.9999                                       thrpt                1,642                ms
NumberBenchmarks.generateAndPowerDoubleNumbers:·safepoints.pause.p1.00                                         thrpt                1,642                ms
NumberBenchmarks.generateAndPowerDoubleNumbers:·safepoints.ttsp                                                thrpt   67           2,004                ms
NumberBenchmarks.generateAndPowerDoubleNumbers:·safepoints.ttsp.avg                                            thrpt                0,030                ms
NumberBenchmarks.generateAndPowerDoubleNumbers:·safepoints.ttsp.count                                          thrpt               67,000                 #
NumberBenchmarks.generateAndPowerDoubleNumbers:·safepoints.ttsp.p0.00                                          thrpt                0,016                ms
NumberBenchmarks.generateAndPowerDoubleNumbers:·safepoints.ttsp.p0.50                                          thrpt                0,031                ms
NumberBenchmarks.generateAndPowerDoubleNumbers:·safepoints.ttsp.p0.90                                          thrpt                0,046                ms
NumberBenchmarks.generateAndPowerDoubleNumbers:·safepoints.ttsp.p0.95                                          thrpt                0,049                ms
NumberBenchmarks.generateAndPowerDoubleNumbers:·safepoints.ttsp.p0.99                                          thrpt                0,060                ms
NumberBenchmarks.generateAndPowerDoubleNumbers:·safepoints.ttsp.p0.999                                         thrpt                0,060                ms
NumberBenchmarks.generateAndPowerDoubleNumbers:·safepoints.ttsp.p0.9999                                        thrpt                0,060                ms
NumberBenchmarks.generateAndPowerDoubleNumbers:·safepoints.ttsp.p1.00                                          thrpt                0,060                ms
NumberBenchmarks.generateAndPowerDoubleNumbers:·threads.alive                                                  thrpt                6,000           threads
NumberBenchmarks.generateAndPowerDoubleNumbers:·threads.daemon                                                 thrpt                5,000           threads
NumberBenchmarks.generateAndPowerDoubleNumbers:·threads.started                                                thrpt               10,000           threads
StringBenchmarks.findRegexCompiled                                                                             thrpt          5790760,160             ops/s
StringBenchmarks.findRegexCompiled:·gc.alloc.rate                                                              thrpt               ≈ 10⁻³            MB/sec
StringBenchmarks.findRegexCompiled:·gc.alloc.rate.norm                                                         thrpt               ≈ 10⁻⁴              B/op
StringBenchmarks.findRegexCompiled:·gc.count                                                                   thrpt                  ≈ 0            counts
StringBenchmarks.findRegexCompiled:·rt.safepointSyncTime                                                       thrpt                0,004                ms
StringBenchmarks.findRegexCompiled:·rt.safepointTime                                                           thrpt                0,418                ms
StringBenchmarks.findRegexCompiled:·rt.safepoints                                                              thrpt                9,000            counts
StringBenchmarks.findRegexCompiled:·rt.sync.contendedLockAttempts                                              thrpt               51,000             locks
StringBenchmarks.findRegexCompiled:·rt.sync.fatMonitors                                                        thrpt              128,000          monitors
StringBenchmarks.findRegexCompiled:·rt.sync.futileWakeups                                                      thrpt                7,000            counts
StringBenchmarks.findRegexCompiled:·rt.sync.monitorDeflations                                                  thrpt               52,000          monitors
StringBenchmarks.findRegexCompiled:·rt.sync.monitorInflations                                                  thrpt               54,000          monitors
StringBenchmarks.findRegexCompiled:·rt.sync.notifications                                                      thrpt               10,000            counts
StringBenchmarks.findRegexCompiled:·rt.sync.parks                                                              thrpt               24,000            counts
StringBenchmarks.findRegexCompiled:·safepoints.interval                                                        thrpt            11159,000                ms
StringBenchmarks.findRegexCompiled:·safepoints.pause                                                           thrpt    2           0,328                ms
StringBenchmarks.findRegexCompiled:·safepoints.pause.avg                                                       thrpt                0,164                ms
StringBenchmarks.findRegexCompiled:·safepoints.pause.count                                                     thrpt                2,000                 #
StringBenchmarks.findRegexCompiled:·safepoints.pause.p0.00                                                     thrpt                0,128                ms
StringBenchmarks.findRegexCompiled:·safepoints.pause.p0.50                                                     thrpt                0,164                ms
StringBenchmarks.findRegexCompiled:·safepoints.pause.p0.90                                                     thrpt                0,200                ms
StringBenchmarks.findRegexCompiled:·safepoints.pause.p0.95                                                     thrpt                0,200                ms
StringBenchmarks.findRegexCompiled:·safepoints.pause.p0.99                                                     thrpt                0,200                ms
StringBenchmarks.findRegexCompiled:·safepoints.pause.p0.999                                                    thrpt                0,200                ms
StringBenchmarks.findRegexCompiled:·safepoints.pause.p0.9999                                                   thrpt                0,200                ms
StringBenchmarks.findRegexCompiled:·safepoints.pause.p1.00                                                     thrpt                0,200                ms
StringBenchmarks.findRegexCompiled:·safepoints.ttsp                                                            thrpt    2           0,145                ms
StringBenchmarks.findRegexCompiled:·safepoints.ttsp.avg                                                        thrpt                0,072                ms
StringBenchmarks.findRegexCompiled:·safepoints.ttsp.count                                                      thrpt                2,000                 #
StringBenchmarks.findRegexCompiled:·safepoints.ttsp.p0.00                                                      thrpt                0,056                ms
StringBenchmarks.findRegexCompiled:·safepoints.ttsp.p0.50                                                      thrpt                0,072                ms
StringBenchmarks.findRegexCompiled:·safepoints.ttsp.p0.90                                                      thrpt                0,089                ms
StringBenchmarks.findRegexCompiled:·safepoints.ttsp.p0.95                                                      thrpt                0,089                ms
StringBenchmarks.findRegexCompiled:·safepoints.ttsp.p0.99                                                      thrpt                0,089                ms
StringBenchmarks.findRegexCompiled:·safepoints.ttsp.p0.999                                                     thrpt                0,089                ms
StringBenchmarks.findRegexCompiled:·safepoints.ttsp.p0.9999                                                    thrpt                0,089                ms
StringBenchmarks.findRegexCompiled:·safepoints.ttsp.p1.00                                                      thrpt                0,089                ms
StringBenchmarks.findRegexCompiled:·threads.alive                                                              thrpt                6,000           threads
StringBenchmarks.findRegexCompiled:·threads.daemon                                                             thrpt                5,000           threads
StringBenchmarks.findRegexCompiled:·threads.started                                                            thrpt               10,000           threads
StringBenchmarks.findRegexUnCompiled                                                                           thrpt           918375,473             ops/s
StringBenchmarks.findRegexUnCompiled:·gc.alloc.rate                                                            thrpt             2639,620            MB/sec
StringBenchmarks.findRegexUnCompiled:·gc.alloc.rate.norm                                                       thrpt             3168,000              B/op
StringBenchmarks.findRegexUnCompiled:·gc.churn.PS_Eden_Space                                                   thrpt             2632,043            MB/sec
StringBenchmarks.findRegexUnCompiled:·gc.churn.PS_Eden_Space.norm                                              thrpt             3158,907              B/op
StringBenchmarks.findRegexUnCompiled:·gc.churn.PS_Survivor_Space                                               thrpt                0,101            MB/sec
StringBenchmarks.findRegexUnCompiled:·gc.churn.PS_Survivor_Space.norm                                          thrpt                0,121              B/op
StringBenchmarks.findRegexUnCompiled:·gc.count                                                                 thrpt               81,000            counts
StringBenchmarks.findRegexUnCompiled:·gc.time                                                                  thrpt               65,000                ms
StringBenchmarks.findRegexUnCompiled:·rt.safepointSyncTime                                                     thrpt                0,031                ms
StringBenchmarks.findRegexUnCompiled:·rt.safepointTime                                                         thrpt                1,407                ms
StringBenchmarks.findRegexUnCompiled:·rt.safepoints                                                            thrpt               99,000            counts
StringBenchmarks.findRegexUnCompiled:·rt.sync.contendedLockAttempts                                            thrpt               67,000             locks
StringBenchmarks.findRegexUnCompiled:·rt.sync.fatMonitors                                                      thrpt              128,000          monitors
StringBenchmarks.findRegexUnCompiled:·rt.sync.futileWakeups                                                    thrpt                8,000            counts
StringBenchmarks.findRegexUnCompiled:·rt.sync.monitorDeflations                                                thrpt               57,000          monitors
StringBenchmarks.findRegexUnCompiled:·rt.sync.monitorInflations                                                thrpt               59,000          monitors
StringBenchmarks.findRegexUnCompiled:·rt.sync.notifications                                                    thrpt               12,000            counts
StringBenchmarks.findRegexUnCompiled:·rt.sync.parks                                                            thrpt               23,000            counts
StringBenchmarks.findRegexUnCompiled:·safepoints.interval                                                      thrpt            11187,000                ms
StringBenchmarks.findRegexUnCompiled:·safepoints.pause                                                         thrpt   82          78,342                ms
StringBenchmarks.findRegexUnCompiled:·safepoints.pause.avg                                                     thrpt                0,955                ms
StringBenchmarks.findRegexUnCompiled:·safepoints.pause.count                                                   thrpt               82,000                 #
StringBenchmarks.findRegexUnCompiled:·safepoints.pause.p0.00                                                   thrpt                0,259                ms
StringBenchmarks.findRegexUnCompiled:·safepoints.pause.p0.50                                                   thrpt                0,972                ms
StringBenchmarks.findRegexUnCompiled:·safepoints.pause.p0.90                                                   thrpt                1,283                ms
StringBenchmarks.findRegexUnCompiled:·safepoints.pause.p0.95                                                   thrpt                1,360                ms
StringBenchmarks.findRegexUnCompiled:·safepoints.pause.p0.99                                                   thrpt                2,228                ms
StringBenchmarks.findRegexUnCompiled:·safepoints.pause.p0.999                                                  thrpt                2,228                ms
StringBenchmarks.findRegexUnCompiled:·safepoints.pause.p0.9999                                                 thrpt                2,228                ms
StringBenchmarks.findRegexUnCompiled:·safepoints.pause.p1.00                                                   thrpt                2,228                ms
StringBenchmarks.findRegexUnCompiled:·safepoints.ttsp                                                          thrpt   82           2,565                ms
StringBenchmarks.findRegexUnCompiled:·safepoints.ttsp.avg                                                      thrpt                0,031                ms
StringBenchmarks.findRegexUnCompiled:·safepoints.ttsp.count                                                    thrpt               82,000                 #
StringBenchmarks.findRegexUnCompiled:·safepoints.ttsp.p0.00                                                    thrpt                0,017                ms
StringBenchmarks.findRegexUnCompiled:·safepoints.ttsp.p0.50                                                    thrpt                0,032                ms
StringBenchmarks.findRegexUnCompiled:·safepoints.ttsp.p0.90                                                    thrpt                0,050                ms
StringBenchmarks.findRegexUnCompiled:·safepoints.ttsp.p0.95                                                    thrpt                0,061                ms
StringBenchmarks.findRegexUnCompiled:·safepoints.ttsp.p0.99                                                    thrpt                0,085                ms
StringBenchmarks.findRegexUnCompiled:·safepoints.ttsp.p0.999                                                   thrpt                0,085                ms
StringBenchmarks.findRegexUnCompiled:·safepoints.ttsp.p0.9999                                                  thrpt                0,085                ms
StringBenchmarks.findRegexUnCompiled:·safepoints.ttsp.p1.00                                                    thrpt                0,085                ms
StringBenchmarks.findRegexUnCompiled:·threads.alive                                                            thrpt                6,000           threads
StringBenchmarks.findRegexUnCompiled:·threads.daemon                                                           thrpt                5,000           threads
StringBenchmarks.findRegexUnCompiled:·threads.started                                                          thrpt               10,000           threads
StringBenchmarks.stringBufferConcatMultiChars                                                                  thrpt           948118,511             ops/s
StringBenchmarks.stringBufferConcatMultiChars:·gc.alloc.rate                                                   thrpt             7218,318            MB/sec
StringBenchmarks.stringBufferConcatMultiChars:·gc.alloc.rate.norm                                              thrpt             8392,000              B/op
StringBenchmarks.stringBufferConcatMultiChars:·gc.churn.PS_Eden_Space                                          thrpt             7164,038            MB/sec
StringBenchmarks.stringBufferConcatMultiChars:·gc.churn.PS_Eden_Space.norm                                     thrpt             8328,895              B/op
StringBenchmarks.stringBufferConcatMultiChars:·gc.churn.PS_Survivor_Space                                      thrpt                0,086            MB/sec
StringBenchmarks.stringBufferConcatMultiChars:·gc.churn.PS_Survivor_Space.norm                                 thrpt                0,100              B/op
StringBenchmarks.stringBufferConcatMultiChars:·gc.count                                                        thrpt               95,000            counts
StringBenchmarks.stringBufferConcatMultiChars:·gc.time                                                         thrpt               81,000                ms
StringBenchmarks.stringBufferConcatMultiChars:·rt.safepointSyncTime                                            thrpt                0,038                ms
StringBenchmarks.stringBufferConcatMultiChars:·rt.safepointTime                                                thrpt                1,627                ms
StringBenchmarks.stringBufferConcatMultiChars:·rt.safepoints                                                   thrpt              114,000            counts
StringBenchmarks.stringBufferConcatMultiChars:·rt.sync.contendedLockAttempts                                   thrpt               43,000             locks
StringBenchmarks.stringBufferConcatMultiChars:·rt.sync.fatMonitors                                             thrpt              128,000          monitors
StringBenchmarks.stringBufferConcatMultiChars:·rt.sync.futileWakeups                                           thrpt                9,000            counts
StringBenchmarks.stringBufferConcatMultiChars:·rt.sync.monitorDeflations                                       thrpt               58,000          monitors
StringBenchmarks.stringBufferConcatMultiChars:·rt.sync.monitorInflations                                       thrpt               60,000          monitors
StringBenchmarks.stringBufferConcatMultiChars:·rt.sync.notifications                                           thrpt               23,000            counts
StringBenchmarks.stringBufferConcatMultiChars:·rt.sync.parks                                                   thrpt               38,000            counts
StringBenchmarks.stringBufferConcatMultiChars:·safepoints.interval                                             thrpt            11185,000                ms
StringBenchmarks.stringBufferConcatMultiChars:·safepoints.pause                                                thrpt   96          98,341                ms
StringBenchmarks.stringBufferConcatMultiChars:·safepoints.pause.avg                                            thrpt                1,024                ms
StringBenchmarks.stringBufferConcatMultiChars:·safepoints.pause.count                                          thrpt               96,000                 #
StringBenchmarks.stringBufferConcatMultiChars:·safepoints.pause.p0.00                                          thrpt                0,355                ms
StringBenchmarks.stringBufferConcatMultiChars:·safepoints.pause.p0.50                                          thrpt                1,044                ms
StringBenchmarks.stringBufferConcatMultiChars:·safepoints.pause.p0.90                                          thrpt                1,352                ms
StringBenchmarks.stringBufferConcatMultiChars:·safepoints.pause.p0.95                                          thrpt                1,457                ms
StringBenchmarks.stringBufferConcatMultiChars:·safepoints.pause.p0.99                                          thrpt                1,561                ms
StringBenchmarks.stringBufferConcatMultiChars:·safepoints.pause.p0.999                                         thrpt                1,561                ms
StringBenchmarks.stringBufferConcatMultiChars:·safepoints.pause.p0.9999                                        thrpt                1,561                ms
StringBenchmarks.stringBufferConcatMultiChars:·safepoints.pause.p1.00                                          thrpt                1,561                ms
StringBenchmarks.stringBufferConcatMultiChars:·safepoints.ttsp                                                 thrpt   96           3,077                ms
StringBenchmarks.stringBufferConcatMultiChars:·safepoints.ttsp.avg                                             thrpt                0,032                ms
StringBenchmarks.stringBufferConcatMultiChars:·safepoints.ttsp.count                                           thrpt               96,000                 #
StringBenchmarks.stringBufferConcatMultiChars:·safepoints.ttsp.p0.00                                           thrpt                0,018                ms
StringBenchmarks.stringBufferConcatMultiChars:·safepoints.ttsp.p0.50                                           thrpt                0,034                ms
StringBenchmarks.stringBufferConcatMultiChars:·safepoints.ttsp.p0.90                                           thrpt                0,046                ms
StringBenchmarks.stringBufferConcatMultiChars:·safepoints.ttsp.p0.95                                           thrpt                0,059                ms
StringBenchmarks.stringBufferConcatMultiChars:·safepoints.ttsp.p0.99                                           thrpt                0,084                ms
StringBenchmarks.stringBufferConcatMultiChars:·safepoints.ttsp.p0.999                                          thrpt                0,084                ms
StringBenchmarks.stringBufferConcatMultiChars:·safepoints.ttsp.p0.9999                                         thrpt                0,084                ms
StringBenchmarks.stringBufferConcatMultiChars:·safepoints.ttsp.p1.00                                           thrpt                0,084                ms
StringBenchmarks.stringBufferConcatMultiChars:·threads.alive                                                   thrpt                6,000           threads
StringBenchmarks.stringBufferConcatMultiChars:·threads.daemon                                                  thrpt                5,000           threads
StringBenchmarks.stringBufferConcatMultiChars:·threads.started                                                 thrpt               10,000           threads
StringBenchmarks.stringBufferReplaceAll                                                                        thrpt           201948,507             ops/s
StringBenchmarks.stringBufferReplaceAll:·gc.alloc.rate                                                         thrpt             1088,201            MB/sec
StringBenchmarks.stringBufferReplaceAll:·gc.alloc.rate.norm                                                    thrpt             5939,155              B/op
StringBenchmarks.stringBufferReplaceAll:·gc.churn.PS_Eden_Space                                                thrpt             1082,268            MB/sec
StringBenchmarks.stringBufferReplaceAll:·gc.churn.PS_Eden_Space.norm                                           thrpt             5906,773              B/op
StringBenchmarks.stringBufferReplaceAll:·gc.churn.PS_Survivor_Space                                            thrpt                0,048            MB/sec
StringBenchmarks.stringBufferReplaceAll:·gc.churn.PS_Survivor_Space.norm                                       thrpt                0,260              B/op
StringBenchmarks.stringBufferReplaceAll:·gc.count                                                              thrpt               94,000            counts
StringBenchmarks.stringBufferReplaceAll:·gc.time                                                               thrpt               78,000                ms
StringBenchmarks.stringBufferReplaceAll:·rt.safepointSyncTime                                                  thrpt                0,033                ms
StringBenchmarks.stringBufferReplaceAll:·rt.safepointTime                                                      thrpt                1,687                ms
StringBenchmarks.stringBufferReplaceAll:·rt.safepoints                                                         thrpt              109,000            counts
StringBenchmarks.stringBufferReplaceAll:·rt.sync.contendedLockAttempts                                         thrpt               47,000             locks
StringBenchmarks.stringBufferReplaceAll:·rt.sync.fatMonitors                                                   thrpt              128,000          monitors
StringBenchmarks.stringBufferReplaceAll:·rt.sync.futileWakeups                                                 thrpt                1,000            counts
StringBenchmarks.stringBufferReplaceAll:·rt.sync.monitorDeflations                                             thrpt               57,000          monitors
StringBenchmarks.stringBufferReplaceAll:·rt.sync.monitorInflations                                             thrpt               59,000          monitors
StringBenchmarks.stringBufferReplaceAll:·rt.sync.notifications                                                 thrpt               19,000            counts
StringBenchmarks.stringBufferReplaceAll:·rt.sync.parks                                                         thrpt               25,000            counts
StringBenchmarks.stringBufferReplaceAll:·safepoints.interval                                                   thrpt            11173,000                ms
StringBenchmarks.stringBufferReplaceAll:·safepoints.pause                                                      thrpt   97         137,296                ms
StringBenchmarks.stringBufferReplaceAll:·safepoints.pause.avg                                                  thrpt                1,415                ms
StringBenchmarks.stringBufferReplaceAll:·safepoints.pause.count                                                thrpt               97,000                 #
StringBenchmarks.stringBufferReplaceAll:·safepoints.pause.p0.00                                                thrpt                0,262                ms
StringBenchmarks.stringBufferReplaceAll:·safepoints.pause.p0.50                                                thrpt                1,041                ms
StringBenchmarks.stringBufferReplaceAll:·safepoints.pause.p0.90                                                thrpt                1,277                ms
StringBenchmarks.stringBufferReplaceAll:·safepoints.pause.p0.95                                                thrpt                1,370                ms
StringBenchmarks.stringBufferReplaceAll:·safepoints.pause.p0.99                                                thrpt               35,389                ms
StringBenchmarks.stringBufferReplaceAll:·safepoints.pause.p0.999                                               thrpt               35,389                ms
StringBenchmarks.stringBufferReplaceAll:·safepoints.pause.p0.9999                                              thrpt               35,389                ms
StringBenchmarks.stringBufferReplaceAll:·safepoints.pause.p1.00                                                thrpt               35,389                ms
StringBenchmarks.stringBufferReplaceAll:·safepoints.ttsp                                                       thrpt   97           3,004                ms
StringBenchmarks.stringBufferReplaceAll:·safepoints.ttsp.avg                                                   thrpt                0,031                ms
StringBenchmarks.stringBufferReplaceAll:·safepoints.ttsp.count                                                 thrpt               97,000                 #
StringBenchmarks.stringBufferReplaceAll:·safepoints.ttsp.p0.00                                                 thrpt                0,018                ms
StringBenchmarks.stringBufferReplaceAll:·safepoints.ttsp.p0.50                                                 thrpt                0,032                ms
StringBenchmarks.stringBufferReplaceAll:·safepoints.ttsp.p0.90                                                 thrpt                0,049                ms
StringBenchmarks.stringBufferReplaceAll:·safepoints.ttsp.p0.95                                                 thrpt                0,054                ms
StringBenchmarks.stringBufferReplaceAll:·safepoints.ttsp.p0.99                                                 thrpt                0,120                ms
StringBenchmarks.stringBufferReplaceAll:·safepoints.ttsp.p0.999                                                thrpt                0,120                ms
StringBenchmarks.stringBufferReplaceAll:·safepoints.ttsp.p0.9999                                               thrpt                0,120                ms
StringBenchmarks.stringBufferReplaceAll:·safepoints.ttsp.p1.00                                                 thrpt                0,120                ms
StringBenchmarks.stringBufferReplaceAll:·threads.alive                                                         thrpt                6,000           threads
StringBenchmarks.stringBufferReplaceAll:·threads.daemon                                                        thrpt                5,000           threads
StringBenchmarks.stringBufferReplaceAll:·threads.started                                                       thrpt               10,000           threads
StringBenchmarks.stringConcatMultiChars                                                                        thrpt          1453678,964             ops/s
StringBenchmarks.stringConcatMultiChars:·gc.alloc.rate                                                         thrpt             9673,792            MB/sec
StringBenchmarks.stringConcatMultiChars:·gc.alloc.rate.norm                                                    thrpt             7332,666              B/op
StringBenchmarks.stringConcatMultiChars:·gc.churn.PS_Eden_Space                                                thrpt             9624,103            MB/sec
StringBenchmarks.stringConcatMultiChars:·gc.churn.PS_Eden_Space.norm                                           thrpt             7295,002              B/op
StringBenchmarks.stringConcatMultiChars:·gc.churn.PS_Survivor_Space                                            thrpt                0,113            MB/sec
StringBenchmarks.stringConcatMultiChars:·gc.churn.PS_Survivor_Space.norm                                       thrpt                0,086              B/op
StringBenchmarks.stringConcatMultiChars:·gc.count                                                              thrpt              102,000            counts
StringBenchmarks.stringConcatMultiChars:·gc.time                                                               thrpt               87,000                ms
StringBenchmarks.stringConcatMultiChars:·rt.safepointSyncTime                                                  thrpt                0,039                ms
StringBenchmarks.stringConcatMultiChars:·rt.safepointTime                                                      thrpt                1,742                ms
StringBenchmarks.stringConcatMultiChars:·rt.safepoints                                                         thrpt              122,000            counts
StringBenchmarks.stringConcatMultiChars:·rt.sync.contendedLockAttempts                                         thrpt               60,000             locks
StringBenchmarks.stringConcatMultiChars:·rt.sync.fatMonitors                                                   thrpt              128,000          monitors
StringBenchmarks.stringConcatMultiChars:·rt.sync.futileWakeups                                                 thrpt                7,000            counts
StringBenchmarks.stringConcatMultiChars:·rt.sync.monitorDeflations                                             thrpt               57,000          monitors
StringBenchmarks.stringConcatMultiChars:·rt.sync.monitorInflations                                             thrpt               59,000          monitors
StringBenchmarks.stringConcatMultiChars:·rt.sync.notifications                                                 thrpt               26,000            counts
StringBenchmarks.stringConcatMultiChars:·rt.sync.parks                                                         thrpt               39,000            counts
StringBenchmarks.stringConcatMultiChars:·safepoints.interval                                                   thrpt            11169,000                ms
StringBenchmarks.stringConcatMultiChars:·safepoints.pause                                                      thrpt  103         103,726                ms
StringBenchmarks.stringConcatMultiChars:·safepoints.pause.avg                                                  thrpt                1,007                ms
StringBenchmarks.stringConcatMultiChars:·safepoints.pause.count                                                thrpt              103,000                 #
StringBenchmarks.stringConcatMultiChars:·safepoints.pause.p0.00                                                thrpt                0,131                ms
StringBenchmarks.stringConcatMultiChars:·safepoints.pause.p0.50                                                thrpt                1,075                ms
StringBenchmarks.stringConcatMultiChars:·safepoints.pause.p0.90                                                thrpt                1,289                ms
StringBenchmarks.stringConcatMultiChars:·safepoints.pause.p0.95                                                thrpt                1,398                ms
StringBenchmarks.stringConcatMultiChars:·safepoints.pause.p0.99                                                thrpt                1,456                ms
StringBenchmarks.stringConcatMultiChars:·safepoints.pause.p0.999                                               thrpt                1,456                ms
StringBenchmarks.stringConcatMultiChars:·safepoints.pause.p0.9999                                              thrpt                1,456                ms
StringBenchmarks.stringConcatMultiChars:·safepoints.pause.p1.00                                                thrpt                1,456                ms
StringBenchmarks.stringConcatMultiChars:·safepoints.ttsp                                                       thrpt  103           3,279                ms
StringBenchmarks.stringConcatMultiChars:·safepoints.ttsp.avg                                                   thrpt                0,032                ms
StringBenchmarks.stringConcatMultiChars:·safepoints.ttsp.count                                                 thrpt              103,000                 #
StringBenchmarks.stringConcatMultiChars:·safepoints.ttsp.p0.00                                                 thrpt                0,017                ms
StringBenchmarks.stringConcatMultiChars:·safepoints.ttsp.p0.50                                                 thrpt                0,032                ms
StringBenchmarks.stringConcatMultiChars:·safepoints.ttsp.p0.90                                                 thrpt                0,052                ms
StringBenchmarks.stringConcatMultiChars:·safepoints.ttsp.p0.95                                                 thrpt                0,053                ms
StringBenchmarks.stringConcatMultiChars:·safepoints.ttsp.p0.99                                                 thrpt                0,071                ms
StringBenchmarks.stringConcatMultiChars:·safepoints.ttsp.p0.999                                                thrpt                0,071                ms
StringBenchmarks.stringConcatMultiChars:·safepoints.ttsp.p0.9999                                               thrpt                0,071                ms
StringBenchmarks.stringConcatMultiChars:·safepoints.ttsp.p1.00                                                 thrpt                0,071                ms
StringBenchmarks.stringConcatMultiChars:·threads.alive                                                         thrpt                6,000           threads
StringBenchmarks.stringConcatMultiChars:·threads.daemon                                                        thrpt                5,000           threads
StringBenchmarks.stringConcatMultiChars:·threads.started                                                       thrpt               10,000           threads
StringBenchmarks.stringReplaceAll                                                                              thrpt            69265,528             ops/s
StringBenchmarks.stringReplaceAll:·gc.alloc.rate                                                               thrpt             3476,226            MB/sec
StringBenchmarks.stringReplaceAll:·gc.alloc.rate.norm                                                          thrpt            55312,006              B/op
StringBenchmarks.stringReplaceAll:·gc.churn.PS_Eden_Space                                                      thrpt             3470,819            MB/sec
StringBenchmarks.stringReplaceAll:·gc.churn.PS_Eden_Space.norm                                                 thrpt            55225,968              B/op
StringBenchmarks.stringReplaceAll:·gc.churn.PS_Survivor_Space                                                  thrpt                0,110            MB/sec
StringBenchmarks.stringReplaceAll:·gc.churn.PS_Survivor_Space.norm                                             thrpt                1,750              B/op
StringBenchmarks.stringReplaceAll:·gc.count                                                                    thrpt               98,000            counts
StringBenchmarks.stringReplaceAll:·gc.time                                                                     thrpt               78,000                ms
StringBenchmarks.stringReplaceAll:·rt.safepointSyncTime                                                        thrpt                0,038                ms
StringBenchmarks.stringReplaceAll:·rt.safepointTime                                                            thrpt                1,635                ms
StringBenchmarks.stringReplaceAll:·rt.safepoints                                                               thrpt              115,000            counts
StringBenchmarks.stringReplaceAll:·rt.sync.contendedLockAttempts                                               thrpt               27,000             locks
StringBenchmarks.stringReplaceAll:·rt.sync.fatMonitors                                                         thrpt              128,000          monitors
StringBenchmarks.stringReplaceAll:·rt.sync.futileWakeups                                                       thrpt                2,000            counts
StringBenchmarks.stringReplaceAll:·rt.sync.monitorDeflations                                                   thrpt               57,000          monitors
StringBenchmarks.stringReplaceAll:·rt.sync.monitorInflations                                                   thrpt               59,000          monitors
StringBenchmarks.stringReplaceAll:·rt.sync.notifications                                                       thrpt               23,000            counts
StringBenchmarks.stringReplaceAll:·rt.sync.parks                                                               thrpt               27,000            counts
StringBenchmarks.stringReplaceAll:·safepoints.interval                                                         thrpt            11166,000                ms
StringBenchmarks.stringReplaceAll:·safepoints.pause                                                            thrpt  100         101,733                ms
StringBenchmarks.stringReplaceAll:·safepoints.pause.avg                                                        thrpt                1,017                ms
StringBenchmarks.stringReplaceAll:·safepoints.pause.count                                                      thrpt              100,000                 #
StringBenchmarks.stringReplaceAll:·safepoints.pause.p0.00                                                      thrpt                0,290                ms
StringBenchmarks.stringReplaceAll:·safepoints.pause.p0.50                                                      thrpt                0,954                ms
StringBenchmarks.stringReplaceAll:·safepoints.pause.p0.90                                                      thrpt                1,260                ms
StringBenchmarks.stringReplaceAll:·safepoints.pause.p0.95                                                      thrpt                1,370                ms
StringBenchmarks.stringReplaceAll:·safepoints.pause.p0.99                                                      thrpt                7,088                ms
StringBenchmarks.stringReplaceAll:·safepoints.pause.p0.999                                                     thrpt                7,135                ms
StringBenchmarks.stringReplaceAll:·safepoints.pause.p0.9999                                                    thrpt                7,135                ms
StringBenchmarks.stringReplaceAll:·safepoints.pause.p1.00                                                      thrpt                7,135                ms
StringBenchmarks.stringReplaceAll:·safepoints.ttsp                                                             thrpt  100           3,230                ms
StringBenchmarks.stringReplaceAll:·safepoints.ttsp.avg                                                         thrpt                0,032                ms
StringBenchmarks.stringReplaceAll:·safepoints.ttsp.count                                                       thrpt              100,000                 #
StringBenchmarks.stringReplaceAll:·safepoints.ttsp.p0.00                                                       thrpt                0,017                ms
StringBenchmarks.stringReplaceAll:·safepoints.ttsp.p0.50                                                       thrpt                0,034                ms
StringBenchmarks.stringReplaceAll:·safepoints.ttsp.p0.90                                                       thrpt                0,047                ms
StringBenchmarks.stringReplaceAll:·safepoints.ttsp.p0.95                                                       thrpt                0,052                ms
StringBenchmarks.stringReplaceAll:·safepoints.ttsp.p0.99                                                       thrpt                0,089                ms
StringBenchmarks.stringReplaceAll:·safepoints.ttsp.p0.999                                                      thrpt                0,089                ms
StringBenchmarks.stringReplaceAll:·safepoints.ttsp.p0.9999                                                     thrpt                0,089                ms
StringBenchmarks.stringReplaceAll:·safepoints.ttsp.p1.00                                                       thrpt                0,089                ms
StringBenchmarks.stringReplaceAll:·threads.alive                                                               thrpt                6,000           threads
StringBenchmarks.stringReplaceAll:·threads.daemon                                                              thrpt                5,000           threads
StringBenchmarks.stringReplaceAll:·threads.started                                                             thrpt               10,000           threads
IOAsyncAPIComparisonBenchmarks.copyFileUsingBufferedStreamAndHugeChunks                                           ss             3547,143             ms/op
IOAsyncAPIComparisonBenchmarks.copyFileUsingBufferedStreamAndHugeChunks:·gc.alloc.rate                            ss               15,468            MB/sec
IOAsyncAPIComparisonBenchmarks.copyFileUsingBufferedStreamAndHugeChunks:·gc.alloc.rate.norm                       ss         67155344,000              B/op
IOAsyncAPIComparisonBenchmarks.copyFileUsingBufferedStreamAndHugeChunks:·gc.count                                 ss                  ≈ 0            counts
IOAsyncAPIComparisonBenchmarks.copyFileUsingBufferedStreamAndHugeChunks:·rt.safepointSyncTime                     ss                0,025                ms
IOAsyncAPIComparisonBenchmarks.copyFileUsingBufferedStreamAndHugeChunks:·rt.safepointTime                         ss                1,378                ms
IOAsyncAPIComparisonBenchmarks.copyFileUsingBufferedStreamAndHugeChunks:·rt.safepoints                            ss               88,000            counts
IOAsyncAPIComparisonBenchmarks.copyFileUsingBufferedStreamAndHugeChunks:·rt.sync.contendedLockAttempts            ss               52,000             locks
IOAsyncAPIComparisonBenchmarks.copyFileUsingBufferedStreamAndHugeChunks:·rt.sync.fatMonitors                      ss              128,000          monitors
IOAsyncAPIComparisonBenchmarks.copyFileUsingBufferedStreamAndHugeChunks:·rt.sync.futileWakeups                    ss                5,000            counts
IOAsyncAPIComparisonBenchmarks.copyFileUsingBufferedStreamAndHugeChunks:·rt.sync.monitorDeflations                ss               60,000          monitors
IOAsyncAPIComparisonBenchmarks.copyFileUsingBufferedStreamAndHugeChunks:·rt.sync.monitorInflations                ss               62,000          monitors
IOAsyncAPIComparisonBenchmarks.copyFileUsingBufferedStreamAndHugeChunks:·rt.sync.notifications                    ss               12,000            counts
IOAsyncAPIComparisonBenchmarks.copyFileUsingBufferedStreamAndHugeChunks:·rt.sync.parks                            ss               22,000            counts
IOAsyncAPIComparisonBenchmarks.copyFileUsingBufferedStreamAndHugeChunks:·safepoints.interval                      ss             4787,000                ms
IOAsyncAPIComparisonBenchmarks.copyFileUsingBufferedStreamAndHugeChunks:·safepoints.pause                         ss    3          11,571                ms
IOAsyncAPIComparisonBenchmarks.copyFileUsingBufferedStreamAndHugeChunks:·safepoints.pause.avg                     ss                3,857                ms
IOAsyncAPIComparisonBenchmarks.copyFileUsingBufferedStreamAndHugeChunks:·safepoints.pause.count                   ss                3,000                 #
IOAsyncAPIComparisonBenchmarks.copyFileUsingBufferedStreamAndHugeChunks:·safepoints.pause.p0.00                   ss                0,064                ms
IOAsyncAPIComparisonBenchmarks.copyFileUsingBufferedStreamAndHugeChunks:·safepoints.pause.p0.50                   ss                0,088                ms
IOAsyncAPIComparisonBenchmarks.copyFileUsingBufferedStreamAndHugeChunks:·safepoints.pause.p0.90                   ss               11,420                ms
IOAsyncAPIComparisonBenchmarks.copyFileUsingBufferedStreamAndHugeChunks:·safepoints.pause.p0.95                   ss               11,420                ms
IOAsyncAPIComparisonBenchmarks.copyFileUsingBufferedStreamAndHugeChunks:·safepoints.pause.p0.99                   ss               11,420                ms
IOAsyncAPIComparisonBenchmarks.copyFileUsingBufferedStreamAndHugeChunks:·safepoints.pause.p0.999                  ss               11,420                ms
IOAsyncAPIComparisonBenchmarks.copyFileUsingBufferedStreamAndHugeChunks:·safepoints.pause.p0.9999                 ss               11,420                ms
IOAsyncAPIComparisonBenchmarks.copyFileUsingBufferedStreamAndHugeChunks:·safepoints.pause.p1.00                   ss               11,420                ms
IOAsyncAPIComparisonBenchmarks.copyFileUsingBufferedStreamAndHugeChunks:·safepoints.ttsp                          ss    3           0,067                ms
IOAsyncAPIComparisonBenchmarks.copyFileUsingBufferedStreamAndHugeChunks:·safepoints.ttsp.avg                      ss                0,022                ms
IOAsyncAPIComparisonBenchmarks.copyFileUsingBufferedStreamAndHugeChunks:·safepoints.ttsp.count                    ss                3,000                 #
IOAsyncAPIComparisonBenchmarks.copyFileUsingBufferedStreamAndHugeChunks:·safepoints.ttsp.p0.00                    ss                0,013                ms
IOAsyncAPIComparisonBenchmarks.copyFileUsingBufferedStreamAndHugeChunks:·safepoints.ttsp.p0.50                    ss                0,019                ms
IOAsyncAPIComparisonBenchmarks.copyFileUsingBufferedStreamAndHugeChunks:·safepoints.ttsp.p0.90                    ss                0,034                ms
IOAsyncAPIComparisonBenchmarks.copyFileUsingBufferedStreamAndHugeChunks:·safepoints.ttsp.p0.95                    ss                0,034                ms
IOAsyncAPIComparisonBenchmarks.copyFileUsingBufferedStreamAndHugeChunks:·safepoints.ttsp.p0.99                    ss                0,034                ms
IOAsyncAPIComparisonBenchmarks.copyFileUsingBufferedStreamAndHugeChunks:·safepoints.ttsp.p0.999                   ss                0,034                ms
IOAsyncAPIComparisonBenchmarks.copyFileUsingBufferedStreamAndHugeChunks:·safepoints.ttsp.p0.9999                  ss                0,034                ms
IOAsyncAPIComparisonBenchmarks.copyFileUsingBufferedStreamAndHugeChunks:·safepoints.ttsp.p1.00                    ss                0,034                ms
IOAsyncAPIComparisonBenchmarks.copyFileUsingBufferedStreamAndHugeChunks:·threads.alive                            ss                6,000           threads
IOAsyncAPIComparisonBenchmarks.copyFileUsingBufferedStreamAndHugeChunks:·threads.daemon                           ss                5,000           threads
IOAsyncAPIComparisonBenchmarks.copyFileUsingBufferedStreamAndHugeChunks:·threads.started                          ss               10,000           threads
IOAsyncAPIComparisonBenchmarks.copyFileUsingBufferedStreamAndSmallChunks                                          ss             2766,384             ms/op
IOAsyncAPIComparisonBenchmarks.copyFileUsingBufferedStreamAndSmallChunks:·gc.alloc.rate                           ss                0,010            MB/sec
IOAsyncAPIComparisonBenchmarks.copyFileUsingBufferedStreamAndSmallChunks:·gc.alloc.rate.norm                      ss            44512,000              B/op
IOAsyncAPIComparisonBenchmarks.copyFileUsingBufferedStreamAndSmallChunks:·gc.count                                ss                  ≈ 0            counts
IOAsyncAPIComparisonBenchmarks.copyFileUsingBufferedStreamAndSmallChunks:·rt.safepointSyncTime                    ss                0,006                ms
IOAsyncAPIComparisonBenchmarks.copyFileUsingBufferedStreamAndSmallChunks:·rt.safepointTime                        ss                0,580                ms
IOAsyncAPIComparisonBenchmarks.copyFileUsingBufferedStreamAndSmallChunks:·rt.safepoints                           ss               13,000            counts
IOAsyncAPIComparisonBenchmarks.copyFileUsingBufferedStreamAndSmallChunks:·rt.sync.contendedLockAttempts           ss               44,000             locks
IOAsyncAPIComparisonBenchmarks.copyFileUsingBufferedStreamAndSmallChunks:·rt.sync.fatMonitors                     ss              128,000          monitors
IOAsyncAPIComparisonBenchmarks.copyFileUsingBufferedStreamAndSmallChunks:·rt.sync.futileWakeups                   ss                3,000            counts
IOAsyncAPIComparisonBenchmarks.copyFileUsingBufferedStreamAndSmallChunks:·rt.sync.monitorDeflations               ss               55,000          monitors
IOAsyncAPIComparisonBenchmarks.copyFileUsingBufferedStreamAndSmallChunks:·rt.sync.monitorInflations               ss               57,000          monitors
IOAsyncAPIComparisonBenchmarks.copyFileUsingBufferedStreamAndSmallChunks:·rt.sync.notifications                   ss               11,000            counts
IOAsyncAPIComparisonBenchmarks.copyFileUsingBufferedStreamAndSmallChunks:·rt.sync.parks                           ss               18,000            counts
IOAsyncAPIComparisonBenchmarks.copyFileUsingBufferedStreamAndSmallChunks:·safepoints.interval                     ss             4890,000                ms
IOAsyncAPIComparisonBenchmarks.copyFileUsingBufferedStreamAndSmallChunks:·safepoints.pause                        ss    3           0,415                ms
IOAsyncAPIComparisonBenchmarks.copyFileUsingBufferedStreamAndSmallChunks:·safepoints.pause.avg                    ss                0,138                ms
IOAsyncAPIComparisonBenchmarks.copyFileUsingBufferedStreamAndSmallChunks:·safepoints.pause.count                  ss                3,000                 #
IOAsyncAPIComparisonBenchmarks.copyFileUsingBufferedStreamAndSmallChunks:·safepoints.pause.p0.00                  ss                0,091                ms
IOAsyncAPIComparisonBenchmarks.copyFileUsingBufferedStreamAndSmallChunks:·safepoints.pause.p0.50                  ss                0,133                ms
IOAsyncAPIComparisonBenchmarks.copyFileUsingBufferedStreamAndSmallChunks:·safepoints.pause.p0.90                  ss                0,190                ms
IOAsyncAPIComparisonBenchmarks.copyFileUsingBufferedStreamAndSmallChunks:·safepoints.pause.p0.95                  ss                0,190                ms
IOAsyncAPIComparisonBenchmarks.copyFileUsingBufferedStreamAndSmallChunks:·safepoints.pause.p0.99                  ss                0,190                ms
IOAsyncAPIComparisonBenchmarks.copyFileUsingBufferedStreamAndSmallChunks:·safepoints.pause.p0.999                 ss                0,190                ms
IOAsyncAPIComparisonBenchmarks.copyFileUsingBufferedStreamAndSmallChunks:·safepoints.pause.p0.9999                ss                0,190                ms
IOAsyncAPIComparisonBenchmarks.copyFileUsingBufferedStreamAndSmallChunks:·safepoints.pause.p1.00                  ss                0,190                ms
IOAsyncAPIComparisonBenchmarks.copyFileUsingBufferedStreamAndSmallChunks:·safepoints.ttsp                         ss    3           0,276                ms
IOAsyncAPIComparisonBenchmarks.copyFileUsingBufferedStreamAndSmallChunks:·safepoints.ttsp.avg                     ss                0,092                ms
IOAsyncAPIComparisonBenchmarks.copyFileUsingBufferedStreamAndSmallChunks:·safepoints.ttsp.count                   ss                3,000                 #
IOAsyncAPIComparisonBenchmarks.copyFileUsingBufferedStreamAndSmallChunks:·safepoints.ttsp.p0.00                   ss                0,048                ms
IOAsyncAPIComparisonBenchmarks.copyFileUsingBufferedStreamAndSmallChunks:·safepoints.ttsp.p0.50                   ss                0,091                ms
IOAsyncAPIComparisonBenchmarks.copyFileUsingBufferedStreamAndSmallChunks:·safepoints.ttsp.p0.90                   ss                0,137                ms
IOAsyncAPIComparisonBenchmarks.copyFileUsingBufferedStreamAndSmallChunks:·safepoints.ttsp.p0.95                   ss                0,137                ms
IOAsyncAPIComparisonBenchmarks.copyFileUsingBufferedStreamAndSmallChunks:·safepoints.ttsp.p0.99                   ss                0,137                ms
IOAsyncAPIComparisonBenchmarks.copyFileUsingBufferedStreamAndSmallChunks:·safepoints.ttsp.p0.999                  ss                0,137                ms
IOAsyncAPIComparisonBenchmarks.copyFileUsingBufferedStreamAndSmallChunks:·safepoints.ttsp.p0.9999                 ss                0,137                ms
IOAsyncAPIComparisonBenchmarks.copyFileUsingBufferedStreamAndSmallChunks:·safepoints.ttsp.p1.00                   ss                0,137                ms
IOAsyncAPIComparisonBenchmarks.copyFileUsingBufferedStreamAndSmallChunks:·threads.alive                           ss                6,000           threads
IOAsyncAPIComparisonBenchmarks.copyFileUsingBufferedStreamAndSmallChunks:·threads.daemon                          ss                5,000           threads
IOAsyncAPIComparisonBenchmarks.copyFileUsingBufferedStreamAndSmallChunks:·threads.started                         ss               10,000           threads
IOAsyncAPIComparisonBenchmarks.copyFileUsingDirectBufferedStreamAndHugeChunks                                     ss             4823,277             ms/op
IOAsyncAPIComparisonBenchmarks.copyFileUsingDirectBufferedStreamAndHugeChunks:·gc.alloc.rate                      ss               59,183            MB/sec
IOAsyncAPIComparisonBenchmarks.copyFileUsingDirectBufferedStreamAndHugeChunks:·gc.alloc.rate.norm                 ss        335574152,000              B/op
IOAsyncAPIComparisonBenchmarks.copyFileUsingDirectBufferedStreamAndHugeChunks:·gc.count                           ss                  ≈ 0            counts
IOAsyncAPIComparisonBenchmarks.copyFileUsingDirectBufferedStreamAndHugeChunks:·rt.safepointSyncTime               ss                0,003                ms
IOAsyncAPIComparisonBenchmarks.copyFileUsingDirectBufferedStreamAndHugeChunks:·rt.safepointTime                   ss                0,708                ms
IOAsyncAPIComparisonBenchmarks.copyFileUsingDirectBufferedStreamAndHugeChunks:·rt.safepoints                      ss               11,000            counts
IOAsyncAPIComparisonBenchmarks.copyFileUsingDirectBufferedStreamAndHugeChunks:·rt.sync.contendedLockAttempts      ss               31,000             locks
IOAsyncAPIComparisonBenchmarks.copyFileUsingDirectBufferedStreamAndHugeChunks:·rt.sync.fatMonitors                ss              128,000          monitors
IOAsyncAPIComparisonBenchmarks.copyFileUsingDirectBufferedStreamAndHugeChunks:·rt.sync.futileWakeups              ss                1,000            counts
IOAsyncAPIComparisonBenchmarks.copyFileUsingDirectBufferedStreamAndHugeChunks:·rt.sync.monitorDeflations          ss               53,000          monitors
IOAsyncAPIComparisonBenchmarks.copyFileUsingDirectBufferedStreamAndHugeChunks:·rt.sync.monitorInflations          ss               55,000          monitors
IOAsyncAPIComparisonBenchmarks.copyFileUsingDirectBufferedStreamAndHugeChunks:·rt.sync.notifications              ss               10,000            counts
IOAsyncAPIComparisonBenchmarks.copyFileUsingDirectBufferedStreamAndHugeChunks:·rt.sync.parks                      ss               13,000            counts
IOAsyncAPIComparisonBenchmarks.copyFileUsingDirectBufferedStreamAndHugeChunks:·safepoints.interval                ss             6085,000                ms
IOAsyncAPIComparisonBenchmarks.copyFileUsingDirectBufferedStreamAndHugeChunks:·safepoints.pause                   ss    4          49,256                ms
IOAsyncAPIComparisonBenchmarks.copyFileUsingDirectBufferedStreamAndHugeChunks:·safepoints.pause.avg               ss               12,314                ms
IOAsyncAPIComparisonBenchmarks.copyFileUsingDirectBufferedStreamAndHugeChunks:·safepoints.pause.count             ss                4,000                 #
IOAsyncAPIComparisonBenchmarks.copyFileUsingDirectBufferedStreamAndHugeChunks:·safepoints.pause.p0.00             ss                0,057                ms
IOAsyncAPIComparisonBenchmarks.copyFileUsingDirectBufferedStreamAndHugeChunks:·safepoints.pause.p0.50             ss                5,168                ms
IOAsyncAPIComparisonBenchmarks.copyFileUsingDirectBufferedStreamAndHugeChunks:·safepoints.pause.p0.90             ss               38,863                ms
IOAsyncAPIComparisonBenchmarks.copyFileUsingDirectBufferedStreamAndHugeChunks:·safepoints.pause.p0.95             ss               38,863                ms
IOAsyncAPIComparisonBenchmarks.copyFileUsingDirectBufferedStreamAndHugeChunks:·safepoints.pause.p0.99             ss               38,863                ms
IOAsyncAPIComparisonBenchmarks.copyFileUsingDirectBufferedStreamAndHugeChunks:·safepoints.pause.p0.999            ss               38,863                ms
IOAsyncAPIComparisonBenchmarks.copyFileUsingDirectBufferedStreamAndHugeChunks:·safepoints.pause.p0.9999           ss               38,863                ms
IOAsyncAPIComparisonBenchmarks.copyFileUsingDirectBufferedStreamAndHugeChunks:·safepoints.pause.p1.00             ss               38,863                ms
IOAsyncAPIComparisonBenchmarks.copyFileUsingDirectBufferedStreamAndHugeChunks:·safepoints.ttsp                    ss    4           0,101                ms
IOAsyncAPIComparisonBenchmarks.copyFileUsingDirectBufferedStreamAndHugeChunks:·safepoints.ttsp.avg                ss                0,025                ms
IOAsyncAPIComparisonBenchmarks.copyFileUsingDirectBufferedStreamAndHugeChunks:·safepoints.ttsp.count              ss                4,000                 #
IOAsyncAPIComparisonBenchmarks.copyFileUsingDirectBufferedStreamAndHugeChunks:·safepoints.ttsp.p0.00              ss                0,017                ms
IOAsyncAPIComparisonBenchmarks.copyFileUsingDirectBufferedStreamAndHugeChunks:·safepoints.ttsp.p0.50              ss                0,023                ms
IOAsyncAPIComparisonBenchmarks.copyFileUsingDirectBufferedStreamAndHugeChunks:·safepoints.ttsp.p0.90              ss                0,038                ms
IOAsyncAPIComparisonBenchmarks.copyFileUsingDirectBufferedStreamAndHugeChunks:·safepoints.ttsp.p0.95              ss                0,038                ms
IOAsyncAPIComparisonBenchmarks.copyFileUsingDirectBufferedStreamAndHugeChunks:·safepoints.ttsp.p0.99              ss                0,038                ms
IOAsyncAPIComparisonBenchmarks.copyFileUsingDirectBufferedStreamAndHugeChunks:·safepoints.ttsp.p0.999             ss                0,038                ms
IOAsyncAPIComparisonBenchmarks.copyFileUsingDirectBufferedStreamAndHugeChunks:·safepoints.ttsp.p0.9999            ss                0,038                ms
IOAsyncAPIComparisonBenchmarks.copyFileUsingDirectBufferedStreamAndHugeChunks:·safepoints.ttsp.p1.00              ss                0,038                ms
IOAsyncAPIComparisonBenchmarks.copyFileUsingDirectBufferedStreamAndHugeChunks:·threads.alive                      ss                6,000           threads
IOAsyncAPIComparisonBenchmarks.copyFileUsingDirectBufferedStreamAndHugeChunks:·threads.daemon                     ss                5,000           threads
IOAsyncAPIComparisonBenchmarks.copyFileUsingDirectBufferedStreamAndHugeChunks:·threads.started                    ss               10,000           threads
IOAsyncAPIComparisonBenchmarks.copyFileUsingDirectBufferedStreamAndSmallChunks                                    ss             2689,110             ms/op
IOAsyncAPIComparisonBenchmarks.copyFileUsingDirectBufferedStreamAndSmallChunks:·gc.alloc.rate                     ss                0,012            MB/sec
IOAsyncAPIComparisonBenchmarks.copyFileUsingDirectBufferedStreamAndSmallChunks:·gc.alloc.rate.norm                ss            50408,000              B/op
IOAsyncAPIComparisonBenchmarks.copyFileUsingDirectBufferedStreamAndSmallChunks:·gc.count                          ss                  ≈ 0            counts
IOAsyncAPIComparisonBenchmarks.copyFileUsingDirectBufferedStreamAndSmallChunks:·rt.safepointSyncTime              ss                0,007                ms
IOAsyncAPIComparisonBenchmarks.copyFileUsingDirectBufferedStreamAndSmallChunks:·rt.safepointTime                  ss                0,578                ms
IOAsyncAPIComparisonBenchmarks.copyFileUsingDirectBufferedStreamAndSmallChunks:·rt.safepoints                     ss               15,000            counts
IOAsyncAPIComparisonBenchmarks.copyFileUsingDirectBufferedStreamAndSmallChunks:·rt.sync.contendedLockAttempts     ss               25,000             locks
IOAsyncAPIComparisonBenchmarks.copyFileUsingDirectBufferedStreamAndSmallChunks:·rt.sync.fatMonitors               ss              128,000          monitors
IOAsyncAPIComparisonBenchmarks.copyFileUsingDirectBufferedStreamAndSmallChunks:·rt.sync.futileWakeups             ss                7,000            counts
IOAsyncAPIComparisonBenchmarks.copyFileUsingDirectBufferedStreamAndSmallChunks:·rt.sync.monitorDeflations         ss               55,000          monitors
IOAsyncAPIComparisonBenchmarks.copyFileUsingDirectBufferedStreamAndSmallChunks:·rt.sync.monitorInflations         ss               57,000          monitors
IOAsyncAPIComparisonBenchmarks.copyFileUsingDirectBufferedStreamAndSmallChunks:·rt.sync.notifications             ss               10,000            counts
IOAsyncAPIComparisonBenchmarks.copyFileUsingDirectBufferedStreamAndSmallChunks:·rt.sync.parks                     ss               22,000            counts
IOAsyncAPIComparisonBenchmarks.copyFileUsingDirectBufferedStreamAndSmallChunks:·safepoints.interval               ss             4799,000                ms
IOAsyncAPIComparisonBenchmarks.copyFileUsingDirectBufferedStreamAndSmallChunks:·safepoints.pause                  ss    4           0,617                ms
IOAsyncAPIComparisonBenchmarks.copyFileUsingDirectBufferedStreamAndSmallChunks:·safepoints.pause.avg              ss                0,154                ms
IOAsyncAPIComparisonBenchmarks.copyFileUsingDirectBufferedStreamAndSmallChunks:·safepoints.pause.count            ss                4,000                 #
IOAsyncAPIComparisonBenchmarks.copyFileUsingDirectBufferedStreamAndSmallChunks:·safepoints.pause.p0.00            ss                0,056                ms
IOAsyncAPIComparisonBenchmarks.copyFileUsingDirectBufferedStreamAndSmallChunks:·safepoints.pause.p0.50            ss                0,161                ms
IOAsyncAPIComparisonBenchmarks.copyFileUsingDirectBufferedStreamAndSmallChunks:·safepoints.pause.p0.90            ss                0,238                ms
IOAsyncAPIComparisonBenchmarks.copyFileUsingDirectBufferedStreamAndSmallChunks:·safepoints.pause.p0.95            ss                0,238                ms
IOAsyncAPIComparisonBenchmarks.copyFileUsingDirectBufferedStreamAndSmallChunks:·safepoints.pause.p0.99            ss                0,238                ms
IOAsyncAPIComparisonBenchmarks.copyFileUsingDirectBufferedStreamAndSmallChunks:·safepoints.pause.p0.999           ss                0,238                ms
IOAsyncAPIComparisonBenchmarks.copyFileUsingDirectBufferedStreamAndSmallChunks:·safepoints.pause.p0.9999          ss                0,238                ms
IOAsyncAPIComparisonBenchmarks.copyFileUsingDirectBufferedStreamAndSmallChunks:·safepoints.pause.p1.00            ss                0,238                ms
IOAsyncAPIComparisonBenchmarks.copyFileUsingDirectBufferedStreamAndSmallChunks:·safepoints.ttsp                   ss    4           0,319                ms
IOAsyncAPIComparisonBenchmarks.copyFileUsingDirectBufferedStreamAndSmallChunks:·safepoints.ttsp.avg               ss                0,080                ms
IOAsyncAPIComparisonBenchmarks.copyFileUsingDirectBufferedStreamAndSmallChunks:·safepoints.ttsp.count             ss                4,000                 #
IOAsyncAPIComparisonBenchmarks.copyFileUsingDirectBufferedStreamAndSmallChunks:·safepoints.ttsp.p0.00             ss                0,015                ms
IOAsyncAPIComparisonBenchmarks.copyFileUsingDirectBufferedStreamAndSmallChunks:·safepoints.ttsp.p0.50             ss                0,084                ms
IOAsyncAPIComparisonBenchmarks.copyFileUsingDirectBufferedStreamAndSmallChunks:·safepoints.ttsp.p0.90             ss                0,135                ms
IOAsyncAPIComparisonBenchmarks.copyFileUsingDirectBufferedStreamAndSmallChunks:·safepoints.ttsp.p0.95             ss                0,135                ms
IOAsyncAPIComparisonBenchmarks.copyFileUsingDirectBufferedStreamAndSmallChunks:·safepoints.ttsp.p0.99             ss                0,135                ms
IOAsyncAPIComparisonBenchmarks.copyFileUsingDirectBufferedStreamAndSmallChunks:·safepoints.ttsp.p0.999            ss                0,135                ms
IOAsyncAPIComparisonBenchmarks.copyFileUsingDirectBufferedStreamAndSmallChunks:·safepoints.ttsp.p0.9999           ss                0,135                ms
IOAsyncAPIComparisonBenchmarks.copyFileUsingDirectBufferedStreamAndSmallChunks:·safepoints.ttsp.p1.00             ss                0,135                ms
IOAsyncAPIComparisonBenchmarks.copyFileUsingDirectBufferedStreamAndSmallChunks:·threads.alive                     ss                6,000           threads
IOAsyncAPIComparisonBenchmarks.copyFileUsingDirectBufferedStreamAndSmallChunks:·threads.daemon                    ss                5,000           threads
IOAsyncAPIComparisonBenchmarks.copyFileUsingDirectBufferedStreamAndSmallChunks:·threads.started                   ss               10,000           threads
IOAsyncAPIComparisonBenchmarks.copyFileUsingFileStreamAndHugeChunks                                               ss             4584,674             ms/op
IOAsyncAPIComparisonBenchmarks.copyFileUsingFileStreamAndHugeChunks:·gc.alloc.rate                                ss               12,371            MB/sec
IOAsyncAPIComparisonBenchmarks.copyFileUsingFileStreamAndHugeChunks:·gc.alloc.rate.norm                           ss         67137848,000              B/op
IOAsyncAPIComparisonBenchmarks.copyFileUsingFileStreamAndHugeChunks:·gc.count                                     ss                  ≈ 0            counts
IOAsyncAPIComparisonBenchmarks.copyFileUsingFileStreamAndHugeChunks:·rt.safepointSyncTime                         ss                0,097                ms
IOAsyncAPIComparisonBenchmarks.copyFileUsingFileStreamAndHugeChunks:·rt.safepointTime                             ss                0,794                ms
IOAsyncAPIComparisonBenchmarks.copyFileUsingFileStreamAndHugeChunks:·rt.safepoints                                ss               14,000            counts
IOAsyncAPIComparisonBenchmarks.copyFileUsingFileStreamAndHugeChunks:·rt.sync.contendedLockAttempts                ss               36,000             locks
IOAsyncAPIComparisonBenchmarks.copyFileUsingFileStreamAndHugeChunks:·rt.sync.fatMonitors                          ss              128,000          monitors
IOAsyncAPIComparisonBenchmarks.copyFileUsingFileStreamAndHugeChunks:·rt.sync.futileWakeups                        ss                4,000            counts
IOAsyncAPIComparisonBenchmarks.copyFileUsingFileStreamAndHugeChunks:·rt.sync.monitorDeflations                    ss               53,000          monitors
IOAsyncAPIComparisonBenchmarks.copyFileUsingFileStreamAndHugeChunks:·rt.sync.monitorInflations                    ss               55,000          monitors
IOAsyncAPIComparisonBenchmarks.copyFileUsingFileStreamAndHugeChunks:·rt.sync.notifications                        ss               10,000            counts
IOAsyncAPIComparisonBenchmarks.copyFileUsingFileStreamAndHugeChunks:·rt.sync.parks                                ss               18,000            counts
IOAsyncAPIComparisonBenchmarks.copyFileUsingFileStreamAndHugeChunks:·safepoints.interval                          ss             5841,000                ms
IOAsyncAPIComparisonBenchmarks.copyFileUsingFileStreamAndHugeChunks:·safepoints.pause                             ss    5          47,773                ms
IOAsyncAPIComparisonBenchmarks.copyFileUsingFileStreamAndHugeChunks:·safepoints.pause.avg                         ss                9,555                ms
IOAsyncAPIComparisonBenchmarks.copyFileUsingFileStreamAndHugeChunks:·safepoints.pause.count                       ss                5,000                 #
IOAsyncAPIComparisonBenchmarks.copyFileUsingFileStreamAndHugeChunks:·safepoints.pause.p0.00                       ss                0,081                ms
IOAsyncAPIComparisonBenchmarks.copyFileUsingFileStreamAndHugeChunks:·safepoints.pause.p0.50                       ss                0,143                ms
IOAsyncAPIComparisonBenchmarks.copyFileUsingFileStreamAndHugeChunks:·safepoints.pause.p0.90                       ss               36,831                ms
IOAsyncAPIComparisonBenchmarks.copyFileUsingFileStreamAndHugeChunks:·safepoints.pause.p0.95                       ss               36,831                ms
IOAsyncAPIComparisonBenchmarks.copyFileUsingFileStreamAndHugeChunks:·safepoints.pause.p0.99                       ss               36,831                ms
IOAsyncAPIComparisonBenchmarks.copyFileUsingFileStreamAndHugeChunks:·safepoints.pause.p0.999                      ss               36,831                ms
IOAsyncAPIComparisonBenchmarks.copyFileUsingFileStreamAndHugeChunks:·safepoints.pause.p0.9999                     ss               36,831                ms
IOAsyncAPIComparisonBenchmarks.copyFileUsingFileStreamAndHugeChunks:·safepoints.pause.p1.00                       ss               36,831                ms
IOAsyncAPIComparisonBenchmarks.copyFileUsingFileStreamAndHugeChunks:·safepoints.ttsp                              ss    5           0,251                ms
IOAsyncAPIComparisonBenchmarks.copyFileUsingFileStreamAndHugeChunks:·safepoints.ttsp.avg                          ss                0,050                ms
IOAsyncAPIComparisonBenchmarks.copyFileUsingFileStreamAndHugeChunks:·safepoints.ttsp.count                        ss                5,000                 #
IOAsyncAPIComparisonBenchmarks.copyFileUsingFileStreamAndHugeChunks:·safepoints.ttsp.p0.00                        ss                0,023                ms
IOAsyncAPIComparisonBenchmarks.copyFileUsingFileStreamAndHugeChunks:·safepoints.ttsp.p0.50                        ss                0,032                ms
IOAsyncAPIComparisonBenchmarks.copyFileUsingFileStreamAndHugeChunks:·safepoints.ttsp.p0.90                        ss                0,105                ms
IOAsyncAPIComparisonBenchmarks.copyFileUsingFileStreamAndHugeChunks:·safepoints.ttsp.p0.95                        ss                0,105                ms
IOAsyncAPIComparisonBenchmarks.copyFileUsingFileStreamAndHugeChunks:·safepoints.ttsp.p0.99                        ss                0,105                ms
IOAsyncAPIComparisonBenchmarks.copyFileUsingFileStreamAndHugeChunks:·safepoints.ttsp.p0.999                       ss                0,105                ms
IOAsyncAPIComparisonBenchmarks.copyFileUsingFileStreamAndHugeChunks:·safepoints.ttsp.p0.9999                      ss                0,105                ms
IOAsyncAPIComparisonBenchmarks.copyFileUsingFileStreamAndHugeChunks:·safepoints.ttsp.p1.00                        ss                0,105                ms
IOAsyncAPIComparisonBenchmarks.copyFileUsingFileStreamAndHugeChunks:·threads.alive                                ss                6,000           threads
IOAsyncAPIComparisonBenchmarks.copyFileUsingFileStreamAndHugeChunks:·threads.daemon                               ss                5,000           threads
IOAsyncAPIComparisonBenchmarks.copyFileUsingFileStreamAndHugeChunks:·threads.started                              ss               10,000           threads
IOAsyncAPIComparisonBenchmarks.copyFileUsingFileStreamAndSmallChunks                                              ss             3596,647             ms/op
IOAsyncAPIComparisonBenchmarks.copyFileUsingFileStreamAndSmallChunks:·gc.alloc.rate                               ss                0,008            MB/sec
IOAsyncAPIComparisonBenchmarks.copyFileUsingFileStreamAndSmallChunks:·gc.alloc.rate.norm                          ss            33168,000              B/op
IOAsyncAPIComparisonBenchmarks.copyFileUsingFileStreamAndSmallChunks:·gc.count                                    ss                  ≈ 0            counts
IOAsyncAPIComparisonBenchmarks.copyFileUsingFileStreamAndSmallChunks:·rt.safepointSyncTime                        ss                0,017                ms
IOAsyncAPIComparisonBenchmarks.copyFileUsingFileStreamAndSmallChunks:·rt.safepointTime                            ss                0,566                ms
IOAsyncAPIComparisonBenchmarks.copyFileUsingFileStreamAndSmallChunks:·rt.safepoints                               ss               11,000            counts
IOAsyncAPIComparisonBenchmarks.copyFileUsingFileStreamAndSmallChunks:·rt.sync.contendedLockAttempts               ss               59,000             locks
IOAsyncAPIComparisonBenchmarks.copyFileUsingFileStreamAndSmallChunks:·rt.sync.fatMonitors                         ss              128,000          monitors
IOAsyncAPIComparisonBenchmarks.copyFileUsingFileStreamAndSmallChunks:·rt.sync.futileWakeups                       ss                8,000            counts
IOAsyncAPIComparisonBenchmarks.copyFileUsingFileStreamAndSmallChunks:·rt.sync.monitorDeflations                   ss               54,000          monitors
IOAsyncAPIComparisonBenchmarks.copyFileUsingFileStreamAndSmallChunks:·rt.sync.monitorInflations                   ss               56,000          monitors
IOAsyncAPIComparisonBenchmarks.copyFileUsingFileStreamAndSmallChunks:·rt.sync.notifications                       ss               10,000            counts
IOAsyncAPIComparisonBenchmarks.copyFileUsingFileStreamAndSmallChunks:·rt.sync.parks                               ss               20,000            counts
IOAsyncAPIComparisonBenchmarks.copyFileUsingFileStreamAndSmallChunks:·safepoints.interval                         ss             4836,000                ms
IOAsyncAPIComparisonBenchmarks.copyFileUsingFileStreamAndSmallChunks:·safepoints.pause                            ss    4          10,261                ms
IOAsyncAPIComparisonBenchmarks.copyFileUsingFileStreamAndSmallChunks:·safepoints.pause.avg                        ss                2,565                ms
IOAsyncAPIComparisonBenchmarks.copyFileUsingFileStreamAndSmallChunks:·safepoints.pause.count                      ss                4,000                 #
IOAsyncAPIComparisonBenchmarks.copyFileUsingFileStreamAndSmallChunks:·safepoints.pause.p0.00                      ss                0,057                ms
IOAsyncAPIComparisonBenchmarks.copyFileUsingFileStreamAndSmallChunks:·safepoints.pause.p0.50                      ss                0,129                ms
IOAsyncAPIComparisonBenchmarks.copyFileUsingFileStreamAndSmallChunks:·safepoints.pause.p0.90                      ss                9,945                ms
IOAsyncAPIComparisonBenchmarks.copyFileUsingFileStreamAndSmallChunks:·safepoints.pause.p0.95                      ss                9,945                ms
IOAsyncAPIComparisonBenchmarks.copyFileUsingFileStreamAndSmallChunks:·safepoints.pause.p0.99                      ss                9,945                ms
IOAsyncAPIComparisonBenchmarks.copyFileUsingFileStreamAndSmallChunks:·safepoints.pause.p0.999                     ss                9,945                ms
IOAsyncAPIComparisonBenchmarks.copyFileUsingFileStreamAndSmallChunks:·safepoints.pause.p0.9999                    ss                9,945                ms
IOAsyncAPIComparisonBenchmarks.copyFileUsingFileStreamAndSmallChunks:·safepoints.pause.p1.00                      ss                9,945                ms
IOAsyncAPIComparisonBenchmarks.copyFileUsingFileStreamAndSmallChunks:·safepoints.ttsp                             ss    4           0,264                ms
IOAsyncAPIComparisonBenchmarks.copyFileUsingFileStreamAndSmallChunks:·safepoints.ttsp.avg                         ss                0,066                ms
IOAsyncAPIComparisonBenchmarks.copyFileUsingFileStreamAndSmallChunks:·safepoints.ttsp.count                       ss                4,000                 #
IOAsyncAPIComparisonBenchmarks.copyFileUsingFileStreamAndSmallChunks:·safepoints.ttsp.p0.00                       ss                0,018                ms
IOAsyncAPIComparisonBenchmarks.copyFileUsingFileStreamAndSmallChunks:·safepoints.ttsp.p0.50                       ss                0,073                ms
IOAsyncAPIComparisonBenchmarks.copyFileUsingFileStreamAndSmallChunks:·safepoints.ttsp.p0.90                       ss                0,101                ms
IOAsyncAPIComparisonBenchmarks.copyFileUsingFileStreamAndSmallChunks:·safepoints.ttsp.p0.95                       ss                0,101                ms
IOAsyncAPIComparisonBenchmarks.copyFileUsingFileStreamAndSmallChunks:·safepoints.ttsp.p0.99                       ss                0,101                ms
IOAsyncAPIComparisonBenchmarks.copyFileUsingFileStreamAndSmallChunks:·safepoints.ttsp.p0.999                      ss                0,101                ms
IOAsyncAPIComparisonBenchmarks.copyFileUsingFileStreamAndSmallChunks:·safepoints.ttsp.p0.9999                     ss                0,101                ms
IOAsyncAPIComparisonBenchmarks.copyFileUsingFileStreamAndSmallChunks:·safepoints.ttsp.p1.00                       ss                0,101                ms
IOAsyncAPIComparisonBenchmarks.copyFileUsingFileStreamAndSmallChunks:·threads.alive                               ss                6,000           threads
IOAsyncAPIComparisonBenchmarks.copyFileUsingFileStreamAndSmallChunks:·threads.daemon                              ss                5,000           threads
IOAsyncAPIComparisonBenchmarks.copyFileUsingFileStreamAndSmallChunks:·threads.started                             ss               10,000           threads
IOAsyncAPIComparisonBenchmarks.copyFileUsingMappedByteBuffer                                                      ss             1466,142             ms/op
IOAsyncAPIComparisonBenchmarks.copyFileUsingMappedByteBuffer:·gc.alloc.rate                                       ss              497,528            MB/sec
IOAsyncAPIComparisonBenchmarks.copyFileUsingMappedByteBuffer:·gc.alloc.rate.norm                                  ss       1073770536,000              B/op
IOAsyncAPIComparisonBenchmarks.copyFileUsingMappedByteBuffer:·gc.count                                            ss                  ≈ 0            counts
IOAsyncAPIComparisonBenchmarks.copyFileUsingMappedByteBuffer:·rt.safepointSyncTime                                ss                0,011                ms
IOAsyncAPIComparisonBenchmarks.copyFileUsingMappedByteBuffer:·rt.safepointTime                                    ss                0,567                ms
IOAsyncAPIComparisonBenchmarks.copyFileUsingMappedByteBuffer:·rt.safepoints                                       ss               13,000            counts
IOAsyncAPIComparisonBenchmarks.copyFileUsingMappedByteBuffer:·rt.sync.contendedLockAttempts                       ss               76,000             locks
IOAsyncAPIComparisonBenchmarks.copyFileUsingMappedByteBuffer:·rt.sync.fatMonitors                                 ss              128,000          monitors
IOAsyncAPIComparisonBenchmarks.copyFileUsingMappedByteBuffer:·rt.sync.futileWakeups                               ss                6,000            counts
IOAsyncAPIComparisonBenchmarks.copyFileUsingMappedByteBuffer:·rt.sync.monitorDeflations                           ss               53,000          monitors
IOAsyncAPIComparisonBenchmarks.copyFileUsingMappedByteBuffer:·rt.sync.monitorInflations                           ss               55,000          monitors
IOAsyncAPIComparisonBenchmarks.copyFileUsingMappedByteBuffer:·rt.sync.notifications                               ss               10,000            counts
IOAsyncAPIComparisonBenchmarks.copyFileUsingMappedByteBuffer:·rt.sync.parks                                       ss               21,000            counts
IOAsyncAPIComparisonBenchmarks.copyFileUsingMappedByteBuffer:·safepoints.interval                                 ss             2735,000                ms
IOAsyncAPIComparisonBenchmarks.copyFileUsingMappedByteBuffer:·safepoints.pause                                    ss    3           7,105                ms
IOAsyncAPIComparisonBenchmarks.copyFileUsingMappedByteBuffer:·safepoints.pause.avg                                ss                2,368                ms
IOAsyncAPIComparisonBenchmarks.copyFileUsingMappedByteBuffer:·safepoints.pause.count                              ss                3,000                 #
IOAsyncAPIComparisonBenchmarks.copyFileUsingMappedByteBuffer:·safepoints.pause.p0.00                              ss                0,123                ms
IOAsyncAPIComparisonBenchmarks.copyFileUsingMappedByteBuffer:·safepoints.pause.p0.50                              ss                0,543                ms
IOAsyncAPIComparisonBenchmarks.copyFileUsingMappedByteBuffer:·safepoints.pause.p0.90                              ss                6,439                ms
IOAsyncAPIComparisonBenchmarks.copyFileUsingMappedByteBuffer:·safepoints.pause.p0.95                              ss                6,439                ms
IOAsyncAPIComparisonBenchmarks.copyFileUsingMappedByteBuffer:·safepoints.pause.p0.99                              ss                6,439                ms
IOAsyncAPIComparisonBenchmarks.copyFileUsingMappedByteBuffer:·safepoints.pause.p0.999                             ss                6,439                ms
IOAsyncAPIComparisonBenchmarks.copyFileUsingMappedByteBuffer:·safepoints.pause.p0.9999                            ss                6,439                ms
IOAsyncAPIComparisonBenchmarks.copyFileUsingMappedByteBuffer:·safepoints.pause.p1.00                              ss                6,439                ms
IOAsyncAPIComparisonBenchmarks.copyFileUsingMappedByteBuffer:·safepoints.ttsp                                     ss    3           0,697                ms
IOAsyncAPIComparisonBenchmarks.copyFileUsingMappedByteBuffer:·safepoints.ttsp.avg                                 ss                0,232                ms
IOAsyncAPIComparisonBenchmarks.copyFileUsingMappedByteBuffer:·safepoints.ttsp.count                               ss                3,000                 #
IOAsyncAPIComparisonBenchmarks.copyFileUsingMappedByteBuffer:·safepoints.ttsp.p0.00                               ss                0,036                ms
IOAsyncAPIComparisonBenchmarks.copyFileUsingMappedByteBuffer:·safepoints.ttsp.p0.50                               ss                0,175                ms
IOAsyncAPIComparisonBenchmarks.copyFileUsingMappedByteBuffer:·safepoints.ttsp.p0.90                               ss                0,485                ms
IOAsyncAPIComparisonBenchmarks.copyFileUsingMappedByteBuffer:·safepoints.ttsp.p0.95                               ss                0,485                ms
IOAsyncAPIComparisonBenchmarks.copyFileUsingMappedByteBuffer:·safepoints.ttsp.p0.99                               ss                0,485                ms
IOAsyncAPIComparisonBenchmarks.copyFileUsingMappedByteBuffer:·safepoints.ttsp.p0.999                              ss                0,485                ms
IOAsyncAPIComparisonBenchmarks.copyFileUsingMappedByteBuffer:·safepoints.ttsp.p0.9999                             ss                0,485                ms
IOAsyncAPIComparisonBenchmarks.copyFileUsingMappedByteBuffer:·safepoints.ttsp.p1.00                               ss                0,485                ms
IOAsyncAPIComparisonBenchmarks.copyFileUsingMappedByteBuffer:·threads.alive                                       ss                6,000           threads
IOAsyncAPIComparisonBenchmarks.copyFileUsingMappedByteBuffer:·threads.daemon                                      ss                5,000           threads
IOAsyncAPIComparisonBenchmarks.copyFileUsingMappedByteBuffer:·threads.started                                     ss               10,000           threads
IOAsyncFileSeekBenchmarks.seekAndCopyFileUsingHugeChunks                                                          ss             2082,241             ms/op
IOAsyncFileSeekBenchmarks.seekAndCopyFileUsingHugeChunks:·gc.alloc.rate                                           ss              331,421            MB/sec
IOAsyncFileSeekBenchmarks.seekAndCopyFileUsingHugeChunks:·gc.alloc.rate.norm                                      ss       1090546664,000              B/op
IOAsyncFileSeekBenchmarks.seekAndCopyFileUsingHugeChunks:·gc.churn.PS_Eden_Space                                  ss              313,791            MB/sec
IOAsyncFileSeekBenchmarks.seekAndCopyFileUsingHugeChunks:·gc.churn.PS_Eden_Space.norm                             ss       1032533248,000              B/op
IOAsyncFileSeekBenchmarks.seekAndCopyFileUsingHugeChunks:·gc.churn.PS_Survivor_Space                              ss                0,030            MB/sec
IOAsyncFileSeekBenchmarks.seekAndCopyFileUsingHugeChunks:·gc.churn.PS_Survivor_Space.norm                         ss            98304,000              B/op
IOAsyncFileSeekBenchmarks.seekAndCopyFileUsingHugeChunks:·gc.count                                                ss                2,000            counts
IOAsyncFileSeekBenchmarks.seekAndCopyFileUsingHugeChunks:·gc.time                                                 ss                2,000                ms
IOAsyncFileSeekBenchmarks.seekAndCopyFileUsingHugeChunks:·rt.safepointSyncTime                                    ss                0,011                ms
IOAsyncFileSeekBenchmarks.seekAndCopyFileUsingHugeChunks:·rt.safepointTime                                        ss                0,762                ms
IOAsyncFileSeekBenchmarks.seekAndCopyFileUsingHugeChunks:·rt.safepoints                                           ss               22,000            counts
IOAsyncFileSeekBenchmarks.seekAndCopyFileUsingHugeChunks:·rt.sync.contendedLockAttempts                           ss               38,000             locks
IOAsyncFileSeekBenchmarks.seekAndCopyFileUsingHugeChunks:·rt.sync.fatMonitors                                     ss              128,000          monitors
IOAsyncFileSeekBenchmarks.seekAndCopyFileUsingHugeChunks:·rt.sync.futileWakeups                                   ss                3,000            counts
IOAsyncFileSeekBenchmarks.seekAndCopyFileUsingHugeChunks:·rt.sync.monitorDeflations                               ss               54,000          monitors
IOAsyncFileSeekBenchmarks.seekAndCopyFileUsingHugeChunks:·rt.sync.monitorInflations                               ss               56,000          monitors
IOAsyncFileSeekBenchmarks.seekAndCopyFileUsingHugeChunks:·rt.sync.notifications                                   ss               12,000            counts
IOAsyncFileSeekBenchmarks.seekAndCopyFileUsingHugeChunks:·rt.sync.parks                                           ss               21,000            counts
IOAsyncFileSeekBenchmarks.seekAndCopyFileUsingHugeChunks:·safepoints.interval                                     ss             3787,000                ms
IOAsyncFileSeekBenchmarks.seekAndCopyFileUsingHugeChunks:·safepoints.pause                                        ss    5           2,779                ms
IOAsyncFileSeekBenchmarks.seekAndCopyFileUsingHugeChunks:·safepoints.pause.avg                                    ss                0,556                ms
IOAsyncFileSeekBenchmarks.seekAndCopyFileUsingHugeChunks:·safepoints.pause.count                                  ss                5,000                 #
IOAsyncFileSeekBenchmarks.seekAndCopyFileUsingHugeChunks:·safepoints.pause.p0.00                                  ss                0,072                ms
IOAsyncFileSeekBenchmarks.seekAndCopyFileUsingHugeChunks:·safepoints.pause.p0.50                                  ss                0,454                ms
IOAsyncFileSeekBenchmarks.seekAndCopyFileUsingHugeChunks:·safepoints.pause.p0.90                                  ss                1,169                ms
IOAsyncFileSeekBenchmarks.seekAndCopyFileUsingHugeChunks:·safepoints.pause.p0.95                                  ss                1,169                ms
IOAsyncFileSeekBenchmarks.seekAndCopyFileUsingHugeChunks:·safepoints.pause.p0.99                                  ss                1,169                ms
IOAsyncFileSeekBenchmarks.seekAndCopyFileUsingHugeChunks:·safepoints.pause.p0.999                                 ss                1,169                ms
IOAsyncFileSeekBenchmarks.seekAndCopyFileUsingHugeChunks:·safepoints.pause.p0.9999                                ss                1,169                ms
IOAsyncFileSeekBenchmarks.seekAndCopyFileUsingHugeChunks:·safepoints.pause.p1.00                                  ss                1,169                ms
IOAsyncFileSeekBenchmarks.seekAndCopyFileUsingHugeChunks:·safepoints.ttsp                                         ss    5           0,545                ms
IOAsyncFileSeekBenchmarks.seekAndCopyFileUsingHugeChunks:·safepoints.ttsp.avg                                     ss                0,109                ms
IOAsyncFileSeekBenchmarks.seekAndCopyFileUsingHugeChunks:·safepoints.ttsp.count                                   ss                5,000                 #
IOAsyncFileSeekBenchmarks.seekAndCopyFileUsingHugeChunks:·safepoints.ttsp.p0.00                                   ss                0,018                ms
IOAsyncFileSeekBenchmarks.seekAndCopyFileUsingHugeChunks:·safepoints.ttsp.p0.50                                   ss                0,044                ms
IOAsyncFileSeekBenchmarks.seekAndCopyFileUsingHugeChunks:·safepoints.ttsp.p0.90                                   ss                0,378                ms
IOAsyncFileSeekBenchmarks.seekAndCopyFileUsingHugeChunks:·safepoints.ttsp.p0.95                                   ss                0,378                ms
IOAsyncFileSeekBenchmarks.seekAndCopyFileUsingHugeChunks:·safepoints.ttsp.p0.99                                   ss                0,378                ms
IOAsyncFileSeekBenchmarks.seekAndCopyFileUsingHugeChunks:·safepoints.ttsp.p0.999                                  ss                0,378                ms
IOAsyncFileSeekBenchmarks.seekAndCopyFileUsingHugeChunks:·safepoints.ttsp.p0.9999                                 ss                0,378                ms
IOAsyncFileSeekBenchmarks.seekAndCopyFileUsingHugeChunks:·safepoints.ttsp.p1.00                                   ss                0,378                ms
IOAsyncFileSeekBenchmarks.seekAndCopyFileUsingHugeChunks:·threads.alive                                           ss                6,000           threads
IOAsyncFileSeekBenchmarks.seekAndCopyFileUsingHugeChunks:·threads.daemon                                          ss                5,000           threads
IOAsyncFileSeekBenchmarks.seekAndCopyFileUsingHugeChunks:·threads.started                                         ss               10,000           threads
IOAsyncFileSeekBenchmarks.seekAndCopyFileUsingSmallChunks                                                         ss             4702,973             ms/op
IOAsyncFileSeekBenchmarks.seekAndCopyFileUsingSmallChunks:·gc.alloc.rate                                          ss              176,308            MB/sec
IOAsyncFileSeekBenchmarks.seekAndCopyFileUsingSmallChunks:·gc.alloc.rate.norm                                     ss       1082654408,000              B/op
IOAsyncFileSeekBenchmarks.seekAndCopyFileUsingSmallChunks:·gc.churn.PS_Eden_Space                                 ss              173,405            MB/sec
IOAsyncFileSeekBenchmarks.seekAndCopyFileUsingSmallChunks:·gc.churn.PS_Eden_Space.norm                            ss       1064828928,000              B/op
IOAsyncFileSeekBenchmarks.seekAndCopyFileUsingSmallChunks:·gc.churn.PS_Survivor_Space                             ss                0,016            MB/sec
IOAsyncFileSeekBenchmarks.seekAndCopyFileUsingSmallChunks:·gc.churn.PS_Survivor_Space.norm                        ss            98304,000              B/op
IOAsyncFileSeekBenchmarks.seekAndCopyFileUsingSmallChunks:·gc.count                                               ss               24,000            counts
IOAsyncFileSeekBenchmarks.seekAndCopyFileUsingSmallChunks:·gc.time                                                ss               21,000                ms
IOAsyncFileSeekBenchmarks.seekAndCopyFileUsingSmallChunks:·rt.safepointSyncTime                                   ss                0,018                ms
IOAsyncFileSeekBenchmarks.seekAndCopyFileUsingSmallChunks:·rt.safepointTime                                       ss                1,055                ms
IOAsyncFileSeekBenchmarks.seekAndCopyFileUsingSmallChunks:·rt.safepoints                                          ss               53,000            counts
IOAsyncFileSeekBenchmarks.seekAndCopyFileUsingSmallChunks:·rt.sync.contendedLockAttempts                          ss               63,000             locks
IOAsyncFileSeekBenchmarks.seekAndCopyFileUsingSmallChunks:·rt.sync.fatMonitors                                    ss              128,000          monitors
IOAsyncFileSeekBenchmarks.seekAndCopyFileUsingSmallChunks:·rt.sync.futileWakeups                                  ss                9,000            counts
IOAsyncFileSeekBenchmarks.seekAndCopyFileUsingSmallChunks:·rt.sync.monitorDeflations                              ss               58,000          monitors
IOAsyncFileSeekBenchmarks.seekAndCopyFileUsingSmallChunks:·rt.sync.monitorInflations                              ss               60,000          monitors
IOAsyncFileSeekBenchmarks.seekAndCopyFileUsingSmallChunks:·rt.sync.notifications                                  ss               12,000            counts
IOAsyncFileSeekBenchmarks.seekAndCopyFileUsingSmallChunks:·rt.sync.parks                                          ss               28,000            counts
IOAsyncFileSeekBenchmarks.seekAndCopyFileUsingSmallChunks:·safepoints.interval                                    ss             6515,000                ms
IOAsyncFileSeekBenchmarks.seekAndCopyFileUsingSmallChunks:·safepoints.pause                                       ss   26          25,383                ms
IOAsyncFileSeekBenchmarks.seekAndCopyFileUsingSmallChunks:·safepoints.pause.avg                                   ss                0,976                ms
IOAsyncFileSeekBenchmarks.seekAndCopyFileUsingSmallChunks:·safepoints.pause.count                                 ss               26,000                 #
IOAsyncFileSeekBenchmarks.seekAndCopyFileUsingSmallChunks:·safepoints.pause.p0.00                                 ss                0,086                ms
IOAsyncFileSeekBenchmarks.seekAndCopyFileUsingSmallChunks:·safepoints.pause.p0.50                                 ss                1,008                ms
IOAsyncFileSeekBenchmarks.seekAndCopyFileUsingSmallChunks:·safepoints.pause.p0.90                                 ss                1,430                ms
IOAsyncFileSeekBenchmarks.seekAndCopyFileUsingSmallChunks:·safepoints.pause.p0.95                                 ss                1,579                ms
IOAsyncFileSeekBenchmarks.seekAndCopyFileUsingSmallChunks:·safepoints.pause.p0.99                                 ss                1,599                ms
IOAsyncFileSeekBenchmarks.seekAndCopyFileUsingSmallChunks:·safepoints.pause.p0.999                                ss                1,599                ms
IOAsyncFileSeekBenchmarks.seekAndCopyFileUsingSmallChunks:·safepoints.pause.p0.9999                               ss                1,599                ms
IOAsyncFileSeekBenchmarks.seekAndCopyFileUsingSmallChunks:·safepoints.pause.p1.00                                 ss                1,599                ms
IOAsyncFileSeekBenchmarks.seekAndCopyFileUsingSmallChunks:·safepoints.ttsp                                        ss   26           0,701                ms
IOAsyncFileSeekBenchmarks.seekAndCopyFileUsingSmallChunks:·safepoints.ttsp.avg                                    ss                0,027                ms
IOAsyncFileSeekBenchmarks.seekAndCopyFileUsingSmallChunks:·safepoints.ttsp.count                                  ss               26,000                 #
IOAsyncFileSeekBenchmarks.seekAndCopyFileUsingSmallChunks:·safepoints.ttsp.p0.00                                  ss                0,016                ms
IOAsyncFileSeekBenchmarks.seekAndCopyFileUsingSmallChunks:·safepoints.ttsp.p0.50                                  ss                0,030                ms
IOAsyncFileSeekBenchmarks.seekAndCopyFileUsingSmallChunks:·safepoints.ttsp.p0.90                                  ss                0,038                ms
IOAsyncFileSeekBenchmarks.seekAndCopyFileUsingSmallChunks:·safepoints.ttsp.p0.95                                  ss                0,049                ms
IOAsyncFileSeekBenchmarks.seekAndCopyFileUsingSmallChunks:·safepoints.ttsp.p0.99                                  ss                0,049                ms
IOAsyncFileSeekBenchmarks.seekAndCopyFileUsingSmallChunks:·safepoints.ttsp.p0.999                                 ss                0,049                ms
IOAsyncFileSeekBenchmarks.seekAndCopyFileUsingSmallChunks:·safepoints.ttsp.p0.9999                                ss                0,049                ms
IOAsyncFileSeekBenchmarks.seekAndCopyFileUsingSmallChunks:·safepoints.ttsp.p1.00                                  ss                0,049                ms
IOAsyncFileSeekBenchmarks.seekAndCopyFileUsingSmallChunks:·threads.alive                                          ss                6,000           threads
IOAsyncFileSeekBenchmarks.seekAndCopyFileUsingSmallChunks:·threads.daemon                                         ss                5,000           threads
IOAsyncFileSeekBenchmarks.seekAndCopyFileUsingSmallChunks:·threads.started                                        ss               10,000           threads
IOAsyncFileSeekBenchmarks.seekAndReadFileUsingHugeChunks                                                          ss              717,203             ms/op
IOAsyncFileSeekBenchmarks.seekAndReadFileUsingHugeChunks:·gc.alloc.rate                                           ss              829,780            MB/sec
IOAsyncFileSeekBenchmarks.seekAndReadFileUsingHugeChunks:·gc.alloc.rate.norm                                      ss       1073769432,000              B/op
IOAsyncFileSeekBenchmarks.seekAndReadFileUsingHugeChunks:·gc.churn.PS_Eden_Space                                  ss              824,208            MB/sec
IOAsyncFileSeekBenchmarks.seekAndReadFileUsingHugeChunks:·gc.churn.PS_Eden_Space.norm                             ss       1066559312,000              B/op
IOAsyncFileSeekBenchmarks.seekAndReadFileUsingHugeChunks:·gc.churn.PS_Survivor_Space                              ss                0,101            MB/sec
IOAsyncFileSeekBenchmarks.seekAndReadFileUsingHugeChunks:·gc.churn.PS_Survivor_Space.norm                         ss           131072,000              B/op
IOAsyncFileSeekBenchmarks.seekAndReadFileUsingHugeChunks:·gc.count                                                ss                2,000            counts
IOAsyncFileSeekBenchmarks.seekAndReadFileUsingHugeChunks:·gc.time                                                 ss                3,000                ms
IOAsyncFileSeekBenchmarks.seekAndReadFileUsingHugeChunks:·rt.safepointSyncTime                                    ss                0,011                ms
IOAsyncFileSeekBenchmarks.seekAndReadFileUsingHugeChunks:·rt.safepointTime                                        ss                0,767                ms
IOAsyncFileSeekBenchmarks.seekAndReadFileUsingHugeChunks:·rt.safepoints                                           ss               19,000            counts
IOAsyncFileSeekBenchmarks.seekAndReadFileUsingHugeChunks:·rt.sync.contendedLockAttempts                           ss               42,000             locks
IOAsyncFileSeekBenchmarks.seekAndReadFileUsingHugeChunks:·rt.sync.fatMonitors                                     ss              128,000          monitors
IOAsyncFileSeekBenchmarks.seekAndReadFileUsingHugeChunks:·rt.sync.futileWakeups                                   ss                2,000            counts
IOAsyncFileSeekBenchmarks.seekAndReadFileUsingHugeChunks:·rt.sync.monitorDeflations                               ss               54,000          monitors
IOAsyncFileSeekBenchmarks.seekAndReadFileUsingHugeChunks:·rt.sync.monitorInflations                               ss               56,000          monitors
IOAsyncFileSeekBenchmarks.seekAndReadFileUsingHugeChunks:·rt.sync.notifications                                   ss               12,000            counts
IOAsyncFileSeekBenchmarks.seekAndReadFileUsingHugeChunks:·rt.sync.parks                                           ss               18,000            counts
IOAsyncFileSeekBenchmarks.seekAndReadFileUsingHugeChunks:·safepoints.interval                                     ss             1881,000                ms
IOAsyncFileSeekBenchmarks.seekAndReadFileUsingHugeChunks:·safepoints.pause                                        ss    3           3,625                ms
IOAsyncFileSeekBenchmarks.seekAndReadFileUsingHugeChunks:·safepoints.pause.avg                                    ss                1,208                ms
IOAsyncFileSeekBenchmarks.seekAndReadFileUsingHugeChunks:·safepoints.pause.count                                  ss                3,000                 #
IOAsyncFileSeekBenchmarks.seekAndReadFileUsingHugeChunks:·safepoints.pause.p0.00                                  ss                0,168                ms
IOAsyncFileSeekBenchmarks.seekAndReadFileUsingHugeChunks:·safepoints.pause.p0.50                                  ss                1,384                ms
IOAsyncFileSeekBenchmarks.seekAndReadFileUsingHugeChunks:·safepoints.pause.p0.90                                  ss                2,073                ms
IOAsyncFileSeekBenchmarks.seekAndReadFileUsingHugeChunks:·safepoints.pause.p0.95                                  ss                2,073                ms
IOAsyncFileSeekBenchmarks.seekAndReadFileUsingHugeChunks:·safepoints.pause.p0.99                                  ss                2,073                ms
IOAsyncFileSeekBenchmarks.seekAndReadFileUsingHugeChunks:·safepoints.pause.p0.999                                 ss                2,073                ms
IOAsyncFileSeekBenchmarks.seekAndReadFileUsingHugeChunks:·safepoints.pause.p0.9999                                ss                2,073                ms
IOAsyncFileSeekBenchmarks.seekAndReadFileUsingHugeChunks:·safepoints.pause.p1.00                                  ss                2,073                ms
IOAsyncFileSeekBenchmarks.seekAndReadFileUsingHugeChunks:·safepoints.ttsp                                         ss    3           0,071                ms
IOAsyncFileSeekBenchmarks.seekAndReadFileUsingHugeChunks:·safepoints.ttsp.avg                                     ss                0,024                ms
IOAsyncFileSeekBenchmarks.seekAndReadFileUsingHugeChunks:·safepoints.ttsp.count                                   ss                3,000                 #
IOAsyncFileSeekBenchmarks.seekAndReadFileUsingHugeChunks:·safepoints.ttsp.p0.00                                   ss                0,012                ms
IOAsyncFileSeekBenchmarks.seekAndReadFileUsingHugeChunks:·safepoints.ttsp.p0.50                                   ss                0,029                ms
IOAsyncFileSeekBenchmarks.seekAndReadFileUsingHugeChunks:·safepoints.ttsp.p0.90                                   ss                0,029                ms
IOAsyncFileSeekBenchmarks.seekAndReadFileUsingHugeChunks:·safepoints.ttsp.p0.95                                   ss                0,029                ms
IOAsyncFileSeekBenchmarks.seekAndReadFileUsingHugeChunks:·safepoints.ttsp.p0.99                                   ss                0,029                ms
IOAsyncFileSeekBenchmarks.seekAndReadFileUsingHugeChunks:·safepoints.ttsp.p0.999                                  ss                0,029                ms
IOAsyncFileSeekBenchmarks.seekAndReadFileUsingHugeChunks:·safepoints.ttsp.p0.9999                                 ss                0,029                ms
IOAsyncFileSeekBenchmarks.seekAndReadFileUsingHugeChunks:·safepoints.ttsp.p1.00                                   ss                0,029                ms
IOAsyncFileSeekBenchmarks.seekAndReadFileUsingHugeChunks:·threads.alive                                           ss                6,000           threads
IOAsyncFileSeekBenchmarks.seekAndReadFileUsingHugeChunks:·threads.daemon                                          ss                5,000           threads
IOAsyncFileSeekBenchmarks.seekAndReadFileUsingHugeChunks:·threads.started                                         ss               10,000           threads
IOAsyncFileSeekBenchmarks.seekAndReadFileUsingSmallChunks                                                         ss             2609,723             ms/op
IOAsyncFileSeekBenchmarks.seekAndReadFileUsingSmallChunks:·gc.alloc.rate                                          ss              330,572            MB/sec
IOAsyncFileSeekBenchmarks.seekAndReadFileUsingSmallChunks:·gc.alloc.rate.norm                                     ss       1082650200,000              B/op
IOAsyncFileSeekBenchmarks.seekAndReadFileUsingSmallChunks:·gc.churn.PS_Eden_Space                                 ss              325,130            MB/sec
IOAsyncFileSeekBenchmarks.seekAndReadFileUsingSmallChunks:·gc.churn.PS_Eden_Space.norm                            ss       1064828928,000              B/op
IOAsyncFileSeekBenchmarks.seekAndReadFileUsingSmallChunks:·gc.churn.PS_Survivor_Space                             ss                0,060            MB/sec
IOAsyncFileSeekBenchmarks.seekAndReadFileUsingSmallChunks:·gc.churn.PS_Survivor_Space.norm                        ss           196608,000              B/op
IOAsyncFileSeekBenchmarks.seekAndReadFileUsingSmallChunks:·gc.count                                               ss               24,000            counts
IOAsyncFileSeekBenchmarks.seekAndReadFileUsingSmallChunks:·gc.time                                                ss               23,000                ms
IOAsyncFileSeekBenchmarks.seekAndReadFileUsingSmallChunks:·rt.safepointSyncTime                                   ss                0,029                ms
IOAsyncFileSeekBenchmarks.seekAndReadFileUsingSmallChunks:·rt.safepointTime                                       ss                1,163                ms
IOAsyncFileSeekBenchmarks.seekAndReadFileUsingSmallChunks:·rt.safepoints                                          ss               54,000            counts
IOAsyncFileSeekBenchmarks.seekAndReadFileUsingSmallChunks:·rt.sync.contendedLockAttempts                          ss              101,000             locks
IOAsyncFileSeekBenchmarks.seekAndReadFileUsingSmallChunks:·rt.sync.fatMonitors                                    ss              128,000          monitors
IOAsyncFileSeekBenchmarks.seekAndReadFileUsingSmallChunks:·rt.sync.futileWakeups                                  ss                3,000            counts
IOAsyncFileSeekBenchmarks.seekAndReadFileUsingSmallChunks:·rt.sync.monitorDeflations                              ss               58,000          monitors
IOAsyncFileSeekBenchmarks.seekAndReadFileUsingSmallChunks:·rt.sync.monitorInflations                              ss               60,000          monitors
IOAsyncFileSeekBenchmarks.seekAndReadFileUsingSmallChunks:·rt.sync.notifications                                  ss               12,000            counts
IOAsyncFileSeekBenchmarks.seekAndReadFileUsingSmallChunks:·rt.sync.parks                                          ss               16,000            counts
IOAsyncFileSeekBenchmarks.seekAndReadFileUsingSmallChunks:·safepoints.interval                                    ss             3785,000                ms
IOAsyncFileSeekBenchmarks.seekAndReadFileUsingSmallChunks:·safepoints.pause                                       ss   28          67,813                ms
IOAsyncFileSeekBenchmarks.seekAndReadFileUsingSmallChunks:·safepoints.pause.avg                                   ss                2,422                ms
IOAsyncFileSeekBenchmarks.seekAndReadFileUsingSmallChunks:·safepoints.pause.count                                 ss               28,000                 #
IOAsyncFileSeekBenchmarks.seekAndReadFileUsingSmallChunks:·safepoints.pause.p0.00                                 ss                0,103                ms
IOAsyncFileSeekBenchmarks.seekAndReadFileUsingSmallChunks:·safepoints.pause.p0.50                                 ss                1,089                ms
IOAsyncFileSeekBenchmarks.seekAndReadFileUsingSmallChunks:·safepoints.pause.p0.90                                 ss                2,162                ms
IOAsyncFileSeekBenchmarks.seekAndReadFileUsingSmallChunks:·safepoints.pause.p0.95                                 ss               22,052                ms
IOAsyncFileSeekBenchmarks.seekAndReadFileUsingSmallChunks:·safepoints.pause.p0.99                                 ss               34,472                ms
IOAsyncFileSeekBenchmarks.seekAndReadFileUsingSmallChunks:·safepoints.pause.p0.999                                ss               34,472                ms
IOAsyncFileSeekBenchmarks.seekAndReadFileUsingSmallChunks:·safepoints.pause.p0.9999                               ss               34,472                ms
IOAsyncFileSeekBenchmarks.seekAndReadFileUsingSmallChunks:·safepoints.pause.p1.00                                 ss               34,472                ms
IOAsyncFileSeekBenchmarks.seekAndReadFileUsingSmallChunks:·safepoints.ttsp                                        ss   28           0,822                ms
IOAsyncFileSeekBenchmarks.seekAndReadFileUsingSmallChunks:·safepoints.ttsp.avg                                    ss                0,029                ms
IOAsyncFileSeekBenchmarks.seekAndReadFileUsingSmallChunks:·safepoints.ttsp.count                                  ss               28,000                 #
IOAsyncFileSeekBenchmarks.seekAndReadFileUsingSmallChunks:·safepoints.ttsp.p0.00                                  ss                0,016                ms
IOAsyncFileSeekBenchmarks.seekAndReadFileUsingSmallChunks:·safepoints.ttsp.p0.50                                  ss                0,020                ms
IOAsyncFileSeekBenchmarks.seekAndReadFileUsingSmallChunks:·safepoints.ttsp.p0.90                                  ss                0,050                ms
IOAsyncFileSeekBenchmarks.seekAndReadFileUsingSmallChunks:·safepoints.ttsp.p0.95                                  ss                0,101                ms
IOAsyncFileSeekBenchmarks.seekAndReadFileUsingSmallChunks:·safepoints.ttsp.p0.99                                  ss                0,132                ms
IOAsyncFileSeekBenchmarks.seekAndReadFileUsingSmallChunks:·safepoints.ttsp.p0.999                                 ss                0,132                ms
IOAsyncFileSeekBenchmarks.seekAndReadFileUsingSmallChunks:·safepoints.ttsp.p0.9999                                ss                0,132                ms
IOAsyncFileSeekBenchmarks.seekAndReadFileUsingSmallChunks:·safepoints.ttsp.p1.00                                  ss                0,132                ms
IOAsyncFileSeekBenchmarks.seekAndReadFileUsingSmallChunks:·threads.alive                                          ss                6,000           threads
IOAsyncFileSeekBenchmarks.seekAndReadFileUsingSmallChunks:·threads.daemon                                         ss                5,000           threads
IOAsyncFileSeekBenchmarks.seekAndReadFileUsingSmallChunks:·threads.started                                        ss               10,000           threads
IOAsyncFileSeekBenchmarks.seekAndWriteFileUsingHugeChunks                                                         ss              747,670             ms/op
IOAsyncFileSeekBenchmarks.seekAndWriteFileUsingHugeChunks:·gc.alloc.rate                                          ss                0,019            MB/sec
IOAsyncFileSeekBenchmarks.seekAndWriteFileUsingHugeChunks:·gc.alloc.rate.norm                                     ss            26624,000              B/op
IOAsyncFileSeekBenchmarks.seekAndWriteFileUsingHugeChunks:·gc.count                                               ss                  ≈ 0            counts
IOAsyncFileSeekBenchmarks.seekAndWriteFileUsingHugeChunks:·rt.safepointSyncTime                                   ss                0,028                ms
IOAsyncFileSeekBenchmarks.seekAndWriteFileUsingHugeChunks:·rt.safepointTime                                       ss                0,594                ms
IOAsyncFileSeekBenchmarks.seekAndWriteFileUsingHugeChunks:·rt.safepoints                                          ss               11,000            counts
IOAsyncFileSeekBenchmarks.seekAndWriteFileUsingHugeChunks:·rt.sync.contendedLockAttempts                          ss               76,000             locks
IOAsyncFileSeekBenchmarks.seekAndWriteFileUsingHugeChunks:·rt.sync.fatMonitors                                    ss              128,000          monitors
IOAsyncFileSeekBenchmarks.seekAndWriteFileUsingHugeChunks:·rt.sync.futileWakeups                                  ss                3,000            counts
IOAsyncFileSeekBenchmarks.seekAndWriteFileUsingHugeChunks:·rt.sync.monitorDeflations                              ss               53,000          monitors
IOAsyncFileSeekBenchmarks.seekAndWriteFileUsingHugeChunks:·rt.sync.monitorInflations                              ss               55,000          monitors
IOAsyncFileSeekBenchmarks.seekAndWriteFileUsingHugeChunks:·rt.sync.notifications                                  ss               10,000            counts
IOAsyncFileSeekBenchmarks.seekAndWriteFileUsingHugeChunks:·rt.sync.parks                                          ss               19,000            counts
IOAsyncFileSeekBenchmarks.seekAndWriteFileUsingHugeChunks:·safepoints.interval                                    ss             1977,000                ms
IOAsyncFileSeekBenchmarks.seekAndWriteFileUsingHugeChunks:·safepoints.pause                                       ss    3          12,679                ms
IOAsyncFileSeekBenchmarks.seekAndWriteFileUsingHugeChunks:·safepoints.pause.avg                                   ss                4,226                ms
IOAsyncFileSeekBenchmarks.seekAndWriteFileUsingHugeChunks:·safepoints.pause.count                                 ss                3,000                 #
IOAsyncFileSeekBenchmarks.seekAndWriteFileUsingHugeChunks:·safepoints.pause.p0.00                                 ss                0,186                ms
IOAsyncFileSeekBenchmarks.seekAndWriteFileUsingHugeChunks:·safepoints.pause.p0.50                                 ss                2,417                ms
IOAsyncFileSeekBenchmarks.seekAndWriteFileUsingHugeChunks:·safepoints.pause.p0.90                                 ss               10,076                ms
IOAsyncFileSeekBenchmarks.seekAndWriteFileUsingHugeChunks:·safepoints.pause.p0.95                                 ss               10,076                ms
IOAsyncFileSeekBenchmarks.seekAndWriteFileUsingHugeChunks:·safepoints.pause.p0.99                                 ss               10,076                ms
IOAsyncFileSeekBenchmarks.seekAndWriteFileUsingHugeChunks:·safepoints.pause.p0.999                                ss               10,076                ms
IOAsyncFileSeekBenchmarks.seekAndWriteFileUsingHugeChunks:·safepoints.pause.p0.9999                               ss               10,076                ms
IOAsyncFileSeekBenchmarks.seekAndWriteFileUsingHugeChunks:·safepoints.pause.p1.00                                 ss               10,076                ms
IOAsyncFileSeekBenchmarks.seekAndWriteFileUsingHugeChunks:·safepoints.ttsp                                        ss    3           2,379                ms
IOAsyncFileSeekBenchmarks.seekAndWriteFileUsingHugeChunks:·safepoints.ttsp.avg                                    ss                0,793                ms
IOAsyncFileSeekBenchmarks.seekAndWriteFileUsingHugeChunks:·safepoints.ttsp.count                                  ss                3,000                 #
IOAsyncFileSeekBenchmarks.seekAndWriteFileUsingHugeChunks:·safepoints.ttsp.p0.00                                  ss                0,034                ms
IOAsyncFileSeekBenchmarks.seekAndWriteFileUsingHugeChunks:·safepoints.ttsp.p0.50                                  ss                0,088                ms
IOAsyncFileSeekBenchmarks.seekAndWriteFileUsingHugeChunks:·safepoints.ttsp.p0.90                                  ss                2,257                ms
IOAsyncFileSeekBenchmarks.seekAndWriteFileUsingHugeChunks:·safepoints.ttsp.p0.95                                  ss                2,257                ms
IOAsyncFileSeekBenchmarks.seekAndWriteFileUsingHugeChunks:·safepoints.ttsp.p0.99                                  ss                2,257                ms
IOAsyncFileSeekBenchmarks.seekAndWriteFileUsingHugeChunks:·safepoints.ttsp.p0.999                                 ss                2,257                ms
IOAsyncFileSeekBenchmarks.seekAndWriteFileUsingHugeChunks:·safepoints.ttsp.p0.9999                                ss                2,257                ms
IOAsyncFileSeekBenchmarks.seekAndWriteFileUsingHugeChunks:·safepoints.ttsp.p1.00                                  ss                2,257                ms
IOAsyncFileSeekBenchmarks.seekAndWriteFileUsingHugeChunks:·threads.alive                                          ss                6,000           threads
IOAsyncFileSeekBenchmarks.seekAndWriteFileUsingHugeChunks:·threads.daemon                                         ss                5,000           threads
IOAsyncFileSeekBenchmarks.seekAndWriteFileUsingHugeChunks:·threads.started                                        ss               10,000           threads
IOAsyncFileSeekBenchmarks.seekAndWriteFileUsingSmallChunks                                                        ss             3196,313             ms/op
IOAsyncFileSeekBenchmarks.seekAndWriteFileUsingSmallChunks:·gc.alloc.rate                                         ss                0,007            MB/sec
IOAsyncFileSeekBenchmarks.seekAndWriteFileUsingSmallChunks:·gc.alloc.rate.norm                                    ss            26600,000              B/op
IOAsyncFileSeekBenchmarks.seekAndWriteFileUsingSmallChunks:·gc.count                                              ss                  ≈ 0            counts
IOAsyncFileSeekBenchmarks.seekAndWriteFileUsingSmallChunks:·rt.safepointSyncTime                                  ss                0,037                ms
IOAsyncFileSeekBenchmarks.seekAndWriteFileUsingSmallChunks:·rt.safepointTime                                      ss                0,703                ms
IOAsyncFileSeekBenchmarks.seekAndWriteFileUsingSmallChunks:·rt.safepoints                                         ss               13,000            counts
IOAsyncFileSeekBenchmarks.seekAndWriteFileUsingSmallChunks:·rt.sync.contendedLockAttempts                         ss                8,000             locks
IOAsyncFileSeekBenchmarks.seekAndWriteFileUsingSmallChunks:·rt.sync.fatMonitors                                   ss              128,000          monitors
IOAsyncFileSeekBenchmarks.seekAndWriteFileUsingSmallChunks:·rt.sync.futileWakeups                                 ss                2,000            counts
IOAsyncFileSeekBenchmarks.seekAndWriteFileUsingSmallChunks:·rt.sync.monitorDeflations                             ss               52,000          monitors
IOAsyncFileSeekBenchmarks.seekAndWriteFileUsingSmallChunks:·rt.sync.monitorInflations                             ss               54,000          monitors
IOAsyncFileSeekBenchmarks.seekAndWriteFileUsingSmallChunks:·rt.sync.notifications                                 ss               13,000            counts
IOAsyncFileSeekBenchmarks.seekAndWriteFileUsingSmallChunks:·rt.sync.parks                                         ss               17,000            counts
IOAsyncFileSeekBenchmarks.seekAndWriteFileUsingSmallChunks:·safepoints.interval                                   ss             4403,000                ms
IOAsyncFileSeekBenchmarks.seekAndWriteFileUsingSmallChunks:·safepoints.pause                                      ss    3           0,302                ms
IOAsyncFileSeekBenchmarks.seekAndWriteFileUsingSmallChunks:·safepoints.pause.avg                                  ss                0,101                ms
IOAsyncFileSeekBenchmarks.seekAndWriteFileUsingSmallChunks:·safepoints.pause.count                                ss                3,000                 #
IOAsyncFileSeekBenchmarks.seekAndWriteFileUsingSmallChunks:·safepoints.pause.p0.00                                ss                0,079                ms
IOAsyncFileSeekBenchmarks.seekAndWriteFileUsingSmallChunks:·safepoints.pause.p0.50                                ss                0,090                ms
IOAsyncFileSeekBenchmarks.seekAndWriteFileUsingSmallChunks:·safepoints.pause.p0.90                                ss                0,133                ms
IOAsyncFileSeekBenchmarks.seekAndWriteFileUsingSmallChunks:·safepoints.pause.p0.95                                ss                0,133                ms
IOAsyncFileSeekBenchmarks.seekAndWriteFileUsingSmallChunks:·safepoints.pause.p0.99                                ss                0,133                ms
IOAsyncFileSeekBenchmarks.seekAndWriteFileUsingSmallChunks:·safepoints.pause.p0.999                               ss                0,133                ms
IOAsyncFileSeekBenchmarks.seekAndWriteFileUsingSmallChunks:·safepoints.pause.p0.9999                              ss                0,133                ms
IOAsyncFileSeekBenchmarks.seekAndWriteFileUsingSmallChunks:·safepoints.pause.p1.00                                ss                0,133                ms
IOAsyncFileSeekBenchmarks.seekAndWriteFileUsingSmallChunks:·safepoints.ttsp                                       ss    3           0,141                ms
IOAsyncFileSeekBenchmarks.seekAndWriteFileUsingSmallChunks:·safepoints.ttsp.avg                                   ss                0,047                ms
IOAsyncFileSeekBenchmarks.seekAndWriteFileUsingSmallChunks:·safepoints.ttsp.count                                 ss                3,000                 #
IOAsyncFileSeekBenchmarks.seekAndWriteFileUsingSmallChunks:·safepoints.ttsp.p0.00                                 ss                0,021                ms
IOAsyncFileSeekBenchmarks.seekAndWriteFileUsingSmallChunks:·safepoints.ttsp.p0.50                                 ss                0,043                ms
IOAsyncFileSeekBenchmarks.seekAndWriteFileUsingSmallChunks:·safepoints.ttsp.p0.90                                 ss                0,077                ms
IOAsyncFileSeekBenchmarks.seekAndWriteFileUsingSmallChunks:·safepoints.ttsp.p0.95                                 ss                0,077                ms
IOAsyncFileSeekBenchmarks.seekAndWriteFileUsingSmallChunks:·safepoints.ttsp.p0.99                                 ss                0,077                ms
IOAsyncFileSeekBenchmarks.seekAndWriteFileUsingSmallChunks:·safepoints.ttsp.p0.999                                ss                0,077                ms
IOAsyncFileSeekBenchmarks.seekAndWriteFileUsingSmallChunks:·safepoints.ttsp.p0.9999                               ss                0,077                ms
IOAsyncFileSeekBenchmarks.seekAndWriteFileUsingSmallChunks:·safepoints.ttsp.p1.00                                 ss                0,077                ms
IOAsyncFileSeekBenchmarks.seekAndWriteFileUsingSmallChunks:·threads.alive                                         ss                6,000           threads
IOAsyncFileSeekBenchmarks.seekAndWriteFileUsingSmallChunks:·threads.daemon                                        ss                5,000           threads
IOAsyncFileSeekBenchmarks.seekAndWriteFileUsingSmallChunks:·threads.started                                       ss               10,000           threads
IOSyncAPIComparisonBenchmarks.copyFileUsingBufferedStreamAndHugeChunks                                            ss              435,330             ms/op
IOSyncAPIComparisonBenchmarks.copyFileUsingBufferedStreamAndHugeChunks:·gc.alloc.rate                             ss               66,817            MB/sec
IOSyncAPIComparisonBenchmarks.copyFileUsingBufferedStreamAndHugeChunks:·gc.alloc.rate.norm                        ss         67150416,000              B/op
IOSyncAPIComparisonBenchmarks.copyFileUsingBufferedStreamAndHugeChunks:·gc.count                                  ss                  ≈ 0            counts
IOSyncAPIComparisonBenchmarks.copyFileUsingBufferedStreamAndHugeChunks:·rt.safepointSyncTime                      ss                0,012                ms
IOSyncAPIComparisonBenchmarks.copyFileUsingBufferedStreamAndHugeChunks:·rt.safepointTime                          ss                0,726                ms
IOSyncAPIComparisonBenchmarks.copyFileUsingBufferedStreamAndHugeChunks:·rt.safepoints                             ss               19,000            counts
IOSyncAPIComparisonBenchmarks.copyFileUsingBufferedStreamAndHugeChunks:·rt.sync.contendedLockAttempts             ss               81,000             locks
IOSyncAPIComparisonBenchmarks.copyFileUsingBufferedStreamAndHugeChunks:·rt.sync.fatMonitors                       ss              128,000          monitors
IOSyncAPIComparisonBenchmarks.copyFileUsingBufferedStreamAndHugeChunks:·rt.sync.futileWakeups                     ss                4,000            counts
IOSyncAPIComparisonBenchmarks.copyFileUsingBufferedStreamAndHugeChunks:·rt.sync.monitorDeflations                 ss               56,000          monitors
IOSyncAPIComparisonBenchmarks.copyFileUsingBufferedStreamAndHugeChunks:·rt.sync.monitorInflations                 ss               58,000          monitors
IOSyncAPIComparisonBenchmarks.copyFileUsingBufferedStreamAndHugeChunks:·rt.sync.notifications                     ss               12,000            counts
IOSyncAPIComparisonBenchmarks.copyFileUsingBufferedStreamAndHugeChunks:·rt.sync.parks                             ss               18,000            counts
IOSyncAPIComparisonBenchmarks.copyFileUsingBufferedStreamAndHugeChunks:·safepoints.interval                       ss             1634,000                ms
IOSyncAPIComparisonBenchmarks.copyFileUsingBufferedStreamAndHugeChunks:·safepoints.pause                          ss    4          10,879                ms
IOSyncAPIComparisonBenchmarks.copyFileUsingBufferedStreamAndHugeChunks:·safepoints.pause.avg                      ss                2,720                ms
IOSyncAPIComparisonBenchmarks.copyFileUsingBufferedStreamAndHugeChunks:·safepoints.pause.count                    ss                4,000                 #
IOSyncAPIComparisonBenchmarks.copyFileUsingBufferedStreamAndHugeChunks:·safepoints.pause.p0.00                    ss                0,039                ms
IOSyncAPIComparisonBenchmarks.copyFileUsingBufferedStreamAndHugeChunks:·safepoints.pause.p0.50                    ss                0,095                ms
IOSyncAPIComparisonBenchmarks.copyFileUsingBufferedStreamAndHugeChunks:·safepoints.pause.p0.90                    ss               10,650                ms
IOSyncAPIComparisonBenchmarks.copyFileUsingBufferedStreamAndHugeChunks:·safepoints.pause.p0.95                    ss               10,650                ms
IOSyncAPIComparisonBenchmarks.copyFileUsingBufferedStreamAndHugeChunks:·safepoints.pause.p0.99                    ss               10,650                ms
IOSyncAPIComparisonBenchmarks.copyFileUsingBufferedStreamAndHugeChunks:·safepoints.pause.p0.999                   ss               10,650                ms
IOSyncAPIComparisonBenchmarks.copyFileUsingBufferedStreamAndHugeChunks:·safepoints.pause.p0.9999                  ss               10,650                ms
IOSyncAPIComparisonBenchmarks.copyFileUsingBufferedStreamAndHugeChunks:·safepoints.pause.p1.00                    ss               10,650                ms
IOSyncAPIComparisonBenchmarks.copyFileUsingBufferedStreamAndHugeChunks:·safepoints.ttsp                           ss    4           0,091                ms
IOSyncAPIComparisonBenchmarks.copyFileUsingBufferedStreamAndHugeChunks:·safepoints.ttsp.avg                       ss                0,023                ms
IOSyncAPIComparisonBenchmarks.copyFileUsingBufferedStreamAndHugeChunks:·safepoints.ttsp.count                     ss                4,000                 #
IOSyncAPIComparisonBenchmarks.copyFileUsingBufferedStreamAndHugeChunks:·safepoints.ttsp.p0.00                     ss                0,014                ms
IOSyncAPIComparisonBenchmarks.copyFileUsingBufferedStreamAndHugeChunks:·safepoints.ttsp.p0.50                     ss                0,017                ms
IOSyncAPIComparisonBenchmarks.copyFileUsingBufferedStreamAndHugeChunks:·safepoints.ttsp.p0.90                     ss                0,044                ms
IOSyncAPIComparisonBenchmarks.copyFileUsingBufferedStreamAndHugeChunks:·safepoints.ttsp.p0.95                     ss                0,044                ms
IOSyncAPIComparisonBenchmarks.copyFileUsingBufferedStreamAndHugeChunks:·safepoints.ttsp.p0.99                     ss                0,044                ms
IOSyncAPIComparisonBenchmarks.copyFileUsingBufferedStreamAndHugeChunks:·safepoints.ttsp.p0.999                    ss                0,044                ms
IOSyncAPIComparisonBenchmarks.copyFileUsingBufferedStreamAndHugeChunks:·safepoints.ttsp.p0.9999                   ss                0,044                ms
IOSyncAPIComparisonBenchmarks.copyFileUsingBufferedStreamAndHugeChunks:·safepoints.ttsp.p1.00                     ss                0,044                ms
IOSyncAPIComparisonBenchmarks.copyFileUsingBufferedStreamAndHugeChunks:·threads.alive                             ss                6,000           threads
IOSyncAPIComparisonBenchmarks.copyFileUsingBufferedStreamAndHugeChunks:·threads.daemon                            ss                5,000           threads
IOSyncAPIComparisonBenchmarks.copyFileUsingBufferedStreamAndHugeChunks:·threads.started                           ss               10,000           threads
IOSyncAPIComparisonBenchmarks.copyFileUsingBufferedStreamAndSmallChunks                                           ss              192,910             ms/op
IOSyncAPIComparisonBenchmarks.copyFileUsingBufferedStreamAndSmallChunks:·gc.alloc.rate                            ss                0,078            MB/sec
IOSyncAPIComparisonBenchmarks.copyFileUsingBufferedStreamAndSmallChunks:·gc.alloc.rate.norm                       ss            58672,000              B/op
IOSyncAPIComparisonBenchmarks.copyFileUsingBufferedStreamAndSmallChunks:·gc.count                                 ss                  ≈ 0            counts
IOSyncAPIComparisonBenchmarks.copyFileUsingBufferedStreamAndSmallChunks:·rt.safepointSyncTime                     ss                0,003                ms
IOSyncAPIComparisonBenchmarks.copyFileUsingBufferedStreamAndSmallChunks:·rt.safepointTime                         ss                0,527                ms
IOSyncAPIComparisonBenchmarks.copyFileUsingBufferedStreamAndSmallChunks:·rt.safepoints                            ss                9,000            counts
IOSyncAPIComparisonBenchmarks.copyFileUsingBufferedStreamAndSmallChunks:·rt.sync.contendedLockAttempts            ss               76,000             locks
IOSyncAPIComparisonBenchmarks.copyFileUsingBufferedStreamAndSmallChunks:·rt.sync.fatMonitors                      ss              128,000          monitors
IOSyncAPIComparisonBenchmarks.copyFileUsingBufferedStreamAndSmallChunks:·rt.sync.futileWakeups                    ss                2,000            counts
IOSyncAPIComparisonBenchmarks.copyFileUsingBufferedStreamAndSmallChunks:·rt.sync.monitorDeflations                ss               55,000          monitors
IOSyncAPIComparisonBenchmarks.copyFileUsingBufferedStreamAndSmallChunks:·rt.sync.monitorInflations                ss               57,000          monitors
IOSyncAPIComparisonBenchmarks.copyFileUsingBufferedStreamAndSmallChunks:·rt.sync.notifications                    ss               10,000            counts
IOSyncAPIComparisonBenchmarks.copyFileUsingBufferedStreamAndSmallChunks:·rt.sync.parks                            ss               15,000            counts
IOSyncAPIComparisonBenchmarks.copyFileUsingBufferedStreamAndSmallChunks:·safepoints.interval                      ss             1363,000                ms
IOSyncAPIComparisonBenchmarks.copyFileUsingBufferedStreamAndSmallChunks:·safepoints.pause                         ss    2           0,605                ms
IOSyncAPIComparisonBenchmarks.copyFileUsingBufferedStreamAndSmallChunks:·safepoints.pause.avg                     ss                0,303                ms
IOSyncAPIComparisonBenchmarks.copyFileUsingBufferedStreamAndSmallChunks:·safepoints.pause.count                   ss                2,000                 #
IOSyncAPIComparisonBenchmarks.copyFileUsingBufferedStreamAndSmallChunks:·safepoints.pause.p0.00                   ss                0,187                ms
IOSyncAPIComparisonBenchmarks.copyFileUsingBufferedStreamAndSmallChunks:·safepoints.pause.p0.50                   ss                0,303                ms
IOSyncAPIComparisonBenchmarks.copyFileUsingBufferedStreamAndSmallChunks:·safepoints.pause.p0.90                   ss                0,419                ms
IOSyncAPIComparisonBenchmarks.copyFileUsingBufferedStreamAndSmallChunks:·safepoints.pause.p0.95                   ss                0,419                ms
IOSyncAPIComparisonBenchmarks.copyFileUsingBufferedStreamAndSmallChunks:·safepoints.pause.p0.99                   ss                0,419                ms
IOSyncAPIComparisonBenchmarks.copyFileUsingBufferedStreamAndSmallChunks:·safepoints.pause.p0.999                  ss                0,419                ms
IOSyncAPIComparisonBenchmarks.copyFileUsingBufferedStreamAndSmallChunks:·safepoints.pause.p0.9999                 ss                0,419                ms
IOSyncAPIComparisonBenchmarks.copyFileUsingBufferedStreamAndSmallChunks:·safepoints.pause.p1.00                   ss                0,419                ms
IOSyncAPIComparisonBenchmarks.copyFileUsingBufferedStreamAndSmallChunks:·safepoints.ttsp                          ss    2           0,295                ms
IOSyncAPIComparisonBenchmarks.copyFileUsingBufferedStreamAndSmallChunks:·safepoints.ttsp.avg                      ss                0,148                ms
IOSyncAPIComparisonBenchmarks.copyFileUsingBufferedStreamAndSmallChunks:·safepoints.ttsp.count                    ss                2,000                 #
IOSyncAPIComparisonBenchmarks.copyFileUsingBufferedStreamAndSmallChunks:·safepoints.ttsp.p0.00                    ss                0,070                ms
IOSyncAPIComparisonBenchmarks.copyFileUsingBufferedStreamAndSmallChunks:·safepoints.ttsp.p0.50                    ss                0,148                ms
IOSyncAPIComparisonBenchmarks.copyFileUsingBufferedStreamAndSmallChunks:·safepoints.ttsp.p0.90                    ss                0,225                ms
IOSyncAPIComparisonBenchmarks.copyFileUsingBufferedStreamAndSmallChunks:·safepoints.ttsp.p0.95                    ss                0,225                ms
IOSyncAPIComparisonBenchmarks.copyFileUsingBufferedStreamAndSmallChunks:·safepoints.ttsp.p0.99                    ss                0,225                ms
IOSyncAPIComparisonBenchmarks.copyFileUsingBufferedStreamAndSmallChunks:·safepoints.ttsp.p0.999                   ss                0,225                ms
IOSyncAPIComparisonBenchmarks.copyFileUsingBufferedStreamAndSmallChunks:·safepoints.ttsp.p0.9999                  ss                0,225                ms
IOSyncAPIComparisonBenchmarks.copyFileUsingBufferedStreamAndSmallChunks:·safepoints.ttsp.p1.00                    ss                0,225                ms
IOSyncAPIComparisonBenchmarks.copyFileUsingBufferedStreamAndSmallChunks:·threads.alive                            ss                6,000           threads
IOSyncAPIComparisonBenchmarks.copyFileUsingBufferedStreamAndSmallChunks:·threads.daemon                           ss                5,000           threads
IOSyncAPIComparisonBenchmarks.copyFileUsingBufferedStreamAndSmallChunks:·threads.started                          ss               10,000           threads
IOSyncAPIComparisonBenchmarks.copyFileUsingDirectBufferedStreamAndHugeChunks                                      ss              512,343             ms/op
IOSyncAPIComparisonBenchmarks.copyFileUsingDirectBufferedStreamAndHugeChunks:·gc.alloc.rate                       ss              307,109            MB/sec
IOSyncAPIComparisonBenchmarks.copyFileUsingDirectBufferedStreamAndHugeChunks:·gc.alloc.rate.norm                  ss        335569216,000              B/op
IOSyncAPIComparisonBenchmarks.copyFileUsingDirectBufferedStreamAndHugeChunks:·gc.count                            ss                  ≈ 0            counts
IOSyncAPIComparisonBenchmarks.copyFileUsingDirectBufferedStreamAndHugeChunks:·rt.safepointSyncTime                ss                0,004                ms
IOSyncAPIComparisonBenchmarks.copyFileUsingDirectBufferedStreamAndHugeChunks:·rt.safepointTime                    ss                0,671                ms
IOSyncAPIComparisonBenchmarks.copyFileUsingDirectBufferedStreamAndHugeChunks:·rt.safepoints                       ss               11,000            counts
IOSyncAPIComparisonBenchmarks.copyFileUsingDirectBufferedStreamAndHugeChunks:·rt.sync.contendedLockAttempts       ss               69,000             locks
IOSyncAPIComparisonBenchmarks.copyFileUsingDirectBufferedStreamAndHugeChunks:·rt.sync.fatMonitors                 ss              128,000          monitors
IOSyncAPIComparisonBenchmarks.copyFileUsingDirectBufferedStreamAndHugeChunks:·rt.sync.futileWakeups               ss                9,000            counts
IOSyncAPIComparisonBenchmarks.copyFileUsingDirectBufferedStreamAndHugeChunks:·rt.sync.monitorDeflations           ss               53,000          monitors
IOSyncAPIComparisonBenchmarks.copyFileUsingDirectBufferedStreamAndHugeChunks:·rt.sync.monitorInflations           ss               55,000          monitors
IOSyncAPIComparisonBenchmarks.copyFileUsingDirectBufferedStreamAndHugeChunks:·rt.sync.notifications               ss               10,000            counts
IOSyncAPIComparisonBenchmarks.copyFileUsingDirectBufferedStreamAndHugeChunks:·rt.sync.parks                       ss               22,000            counts
IOSyncAPIComparisonBenchmarks.copyFileUsingDirectBufferedStreamAndHugeChunks:·safepoints.interval                 ss             1704,000                ms
IOSyncAPIComparisonBenchmarks.copyFileUsingDirectBufferedStreamAndHugeChunks:·safepoints.pause                    ss    3          49,503                ms
IOSyncAPIComparisonBenchmarks.copyFileUsingDirectBufferedStreamAndHugeChunks:·safepoints.pause.avg                ss               16,501                ms
IOSyncAPIComparisonBenchmarks.copyFileUsingDirectBufferedStreamAndHugeChunks:·safepoints.pause.count              ss                3,000                 #
IOSyncAPIComparisonBenchmarks.copyFileUsingDirectBufferedStreamAndHugeChunks:·safepoints.pause.p0.00              ss                0,155                ms
IOSyncAPIComparisonBenchmarks.copyFileUsingDirectBufferedStreamAndHugeChunks:·safepoints.pause.p0.50              ss               10,420                ms
IOSyncAPIComparisonBenchmarks.copyFileUsingDirectBufferedStreamAndHugeChunks:·safepoints.pause.p0.90              ss               38,928                ms
IOSyncAPIComparisonBenchmarks.copyFileUsingDirectBufferedStreamAndHugeChunks:·safepoints.pause.p0.95              ss               38,928                ms
IOSyncAPIComparisonBenchmarks.copyFileUsingDirectBufferedStreamAndHugeChunks:·safepoints.pause.p0.99              ss               38,928                ms
IOSyncAPIComparisonBenchmarks.copyFileUsingDirectBufferedStreamAndHugeChunks:·safepoints.pause.p0.999             ss               38,928                ms
IOSyncAPIComparisonBenchmarks.copyFileUsingDirectBufferedStreamAndHugeChunks:·safepoints.pause.p0.9999            ss               38,928                ms
IOSyncAPIComparisonBenchmarks.copyFileUsingDirectBufferedStreamAndHugeChunks:·safepoints.pause.p1.00              ss               38,928                ms
IOSyncAPIComparisonBenchmarks.copyFileUsingDirectBufferedStreamAndHugeChunks:·safepoints.ttsp                     ss    3           0,105                ms
IOSyncAPIComparisonBenchmarks.copyFileUsingDirectBufferedStreamAndHugeChunks:·safepoints.ttsp.avg                 ss                0,035                ms
IOSyncAPIComparisonBenchmarks.copyFileUsingDirectBufferedStreamAndHugeChunks:·safepoints.ttsp.count               ss                3,000                 #
IOSyncAPIComparisonBenchmarks.copyFileUsingDirectBufferedStreamAndHugeChunks:·safepoints.ttsp.p0.00               ss                0,027                ms
IOSyncAPIComparisonBenchmarks.copyFileUsingDirectBufferedStreamAndHugeChunks:·safepoints.ttsp.p0.50               ss                0,029                ms
IOSyncAPIComparisonBenchmarks.copyFileUsingDirectBufferedStreamAndHugeChunks:·safepoints.ttsp.p0.90               ss                0,048                ms
IOSyncAPIComparisonBenchmarks.copyFileUsingDirectBufferedStreamAndHugeChunks:·safepoints.ttsp.p0.95               ss                0,048                ms
IOSyncAPIComparisonBenchmarks.copyFileUsingDirectBufferedStreamAndHugeChunks:·safepoints.ttsp.p0.99               ss                0,048                ms
IOSyncAPIComparisonBenchmarks.copyFileUsingDirectBufferedStreamAndHugeChunks:·safepoints.ttsp.p0.999              ss                0,048                ms
IOSyncAPIComparisonBenchmarks.copyFileUsingDirectBufferedStreamAndHugeChunks:·safepoints.ttsp.p0.9999             ss                0,048                ms
IOSyncAPIComparisonBenchmarks.copyFileUsingDirectBufferedStreamAndHugeChunks:·safepoints.ttsp.p1.00               ss                0,048                ms
IOSyncAPIComparisonBenchmarks.copyFileUsingDirectBufferedStreamAndHugeChunks:·threads.alive                       ss                6,000           threads
IOSyncAPIComparisonBenchmarks.copyFileUsingDirectBufferedStreamAndHugeChunks:·threads.daemon                      ss                5,000           threads
IOSyncAPIComparisonBenchmarks.copyFileUsingDirectBufferedStreamAndHugeChunks:·threads.started                     ss               10,000           threads
IOSyncAPIComparisonBenchmarks.copyFileUsingDirectBufferedStreamAndSmallChunks                                     ss              189,514             ms/op
IOSyncAPIComparisonBenchmarks.copyFileUsingDirectBufferedStreamAndSmallChunks:·gc.alloc.rate                      ss                0,143            MB/sec
IOSyncAPIComparisonBenchmarks.copyFileUsingDirectBufferedStreamAndSmallChunks:·gc.alloc.rate.norm                 ss           106856,000              B/op
IOSyncAPIComparisonBenchmarks.copyFileUsingDirectBufferedStreamAndSmallChunks:·gc.count                           ss                  ≈ 0            counts
IOSyncAPIComparisonBenchmarks.copyFileUsingDirectBufferedStreamAndSmallChunks:·rt.safepointSyncTime               ss                0,002                ms
IOSyncAPIComparisonBenchmarks.copyFileUsingDirectBufferedStreamAndSmallChunks:·rt.safepointTime                   ss                0,513                ms
IOSyncAPIComparisonBenchmarks.copyFileUsingDirectBufferedStreamAndSmallChunks:·rt.safepoints                      ss                9,000            counts
IOSyncAPIComparisonBenchmarks.copyFileUsingDirectBufferedStreamAndSmallChunks:·rt.sync.contendedLockAttempts      ss               58,000             locks
IOSyncAPIComparisonBenchmarks.copyFileUsingDirectBufferedStreamAndSmallChunks:·rt.sync.fatMonitors                ss              128,000          monitors
IOSyncAPIComparisonBenchmarks.copyFileUsingDirectBufferedStreamAndSmallChunks:·rt.sync.futileWakeups              ss                7,000            counts
IOSyncAPIComparisonBenchmarks.copyFileUsingDirectBufferedStreamAndSmallChunks:·rt.sync.monitorDeflations          ss               55,000          monitors
IOSyncAPIComparisonBenchmarks.copyFileUsingDirectBufferedStreamAndSmallChunks:·rt.sync.monitorInflations          ss               57,000          monitors
IOSyncAPIComparisonBenchmarks.copyFileUsingDirectBufferedStreamAndSmallChunks:·rt.sync.notifications              ss               12,000            counts
IOSyncAPIComparisonBenchmarks.copyFileUsingDirectBufferedStreamAndSmallChunks:·rt.sync.parks                      ss               27,000            counts
IOSyncAPIComparisonBenchmarks.copyFileUsingDirectBufferedStreamAndSmallChunks:·safepoints.interval                ss             1364,000                ms
IOSyncAPIComparisonBenchmarks.copyFileUsingDirectBufferedStreamAndSmallChunks:·safepoints.pause                   ss    2           0,416                ms
IOSyncAPIComparisonBenchmarks.copyFileUsingDirectBufferedStreamAndSmallChunks:·safepoints.pause.avg               ss                0,208                ms
IOSyncAPIComparisonBenchmarks.copyFileUsingDirectBufferedStreamAndSmallChunks:·safepoints.pause.count             ss                2,000                 #
IOSyncAPIComparisonBenchmarks.copyFileUsingDirectBufferedStreamAndSmallChunks:·safepoints.pause.p0.00             ss                0,096                ms
IOSyncAPIComparisonBenchmarks.copyFileUsingDirectBufferedStreamAndSmallChunks:·safepoints.pause.p0.50             ss                0,208                ms
IOSyncAPIComparisonBenchmarks.copyFileUsingDirectBufferedStreamAndSmallChunks:·safepoints.pause.p0.90             ss                0,320                ms
IOSyncAPIComparisonBenchmarks.copyFileUsingDirectBufferedStreamAndSmallChunks:·safepoints.pause.p0.95             ss                0,320                ms
IOSyncAPIComparisonBenchmarks.copyFileUsingDirectBufferedStreamAndSmallChunks:·safepoints.pause.p0.99             ss                0,320                ms
IOSyncAPIComparisonBenchmarks.copyFileUsingDirectBufferedStreamAndSmallChunks:·safepoints.pause.p0.999            ss                0,320                ms
IOSyncAPIComparisonBenchmarks.copyFileUsingDirectBufferedStreamAndSmallChunks:·safepoints.pause.p0.9999           ss                0,320                ms
IOSyncAPIComparisonBenchmarks.copyFileUsingDirectBufferedStreamAndSmallChunks:·safepoints.pause.p1.00             ss                0,320                ms
IOSyncAPIComparisonBenchmarks.copyFileUsingDirectBufferedStreamAndSmallChunks:·safepoints.ttsp                    ss    2           0,088                ms
IOSyncAPIComparisonBenchmarks.copyFileUsingDirectBufferedStreamAndSmallChunks:·safepoints.ttsp.avg                ss                0,044                ms
IOSyncAPIComparisonBenchmarks.copyFileUsingDirectBufferedStreamAndSmallChunks:·safepoints.ttsp.count              ss                2,000                 #
IOSyncAPIComparisonBenchmarks.copyFileUsingDirectBufferedStreamAndSmallChunks:·safepoints.ttsp.p0.00              ss                0,035                ms
IOSyncAPIComparisonBenchmarks.copyFileUsingDirectBufferedStreamAndSmallChunks:·safepoints.ttsp.p0.50              ss                0,044                ms
IOSyncAPIComparisonBenchmarks.copyFileUsingDirectBufferedStreamAndSmallChunks:·safepoints.ttsp.p0.90              ss                0,054                ms
IOSyncAPIComparisonBenchmarks.copyFileUsingDirectBufferedStreamAndSmallChunks:·safepoints.ttsp.p0.95              ss                0,054                ms
IOSyncAPIComparisonBenchmarks.copyFileUsingDirectBufferedStreamAndSmallChunks:·safepoints.ttsp.p0.99              ss                0,054                ms
IOSyncAPIComparisonBenchmarks.copyFileUsingDirectBufferedStreamAndSmallChunks:·safepoints.ttsp.p0.999             ss                0,054                ms
IOSyncAPIComparisonBenchmarks.copyFileUsingDirectBufferedStreamAndSmallChunks:·safepoints.ttsp.p0.9999            ss                0,054                ms
IOSyncAPIComparisonBenchmarks.copyFileUsingDirectBufferedStreamAndSmallChunks:·safepoints.ttsp.p1.00              ss                0,054                ms
IOSyncAPIComparisonBenchmarks.copyFileUsingDirectBufferedStreamAndSmallChunks:·threads.alive                      ss                6,000           threads
IOSyncAPIComparisonBenchmarks.copyFileUsingDirectBufferedStreamAndSmallChunks:·threads.daemon                     ss                5,000           threads
IOSyncAPIComparisonBenchmarks.copyFileUsingDirectBufferedStreamAndSmallChunks:·threads.started                    ss               10,000           threads
IOSyncAPIComparisonBenchmarks.copyFileUsingFileStreamAndHugeChunks                                                ss              445,356             ms/op
IOSyncAPIComparisonBenchmarks.copyFileUsingFileStreamAndHugeChunks:·gc.alloc.rate                                 ss               66,378            MB/sec
IOSyncAPIComparisonBenchmarks.copyFileUsingFileStreamAndHugeChunks:·gc.alloc.rate.norm                            ss         67132920,000              B/op
IOSyncAPIComparisonBenchmarks.copyFileUsingFileStreamAndHugeChunks:·gc.count                                      ss                  ≈ 0            counts
IOSyncAPIComparisonBenchmarks.copyFileUsingFileStreamAndHugeChunks:·rt.safepointSyncTime                          ss                0,017                ms
IOSyncAPIComparisonBenchmarks.copyFileUsingFileStreamAndHugeChunks:·rt.safepointTime                              ss                0,537                ms
IOSyncAPIComparisonBenchmarks.copyFileUsingFileStreamAndHugeChunks:·rt.safepoints                                 ss               11,000            counts
IOSyncAPIComparisonBenchmarks.copyFileUsingFileStreamAndHugeChunks:·rt.sync.contendedLockAttempts                 ss               80,000             locks
IOSyncAPIComparisonBenchmarks.copyFileUsingFileStreamAndHugeChunks:·rt.sync.fatMonitors                           ss              128,000          monitors
IOSyncAPIComparisonBenchmarks.copyFileUsingFileStreamAndHugeChunks:·rt.sync.futileWakeups                         ss                3,000            counts
IOSyncAPIComparisonBenchmarks.copyFileUsingFileStreamAndHugeChunks:·rt.sync.monitorDeflations                     ss               54,000          monitors
IOSyncAPIComparisonBenchmarks.copyFileUsingFileStreamAndHugeChunks:·rt.sync.monitorInflations                     ss               56,000          monitors
IOSyncAPIComparisonBenchmarks.copyFileUsingFileStreamAndHugeChunks:·rt.sync.notifications                         ss               10,000            counts
IOSyncAPIComparisonBenchmarks.copyFileUsingFileStreamAndHugeChunks:·rt.sync.parks                                 ss               14,000            counts
IOSyncAPIComparisonBenchmarks.copyFileUsingFileStreamAndHugeChunks:·safepoints.interval                           ss             1612,000                ms
IOSyncAPIComparisonBenchmarks.copyFileUsingFileStreamAndHugeChunks:·safepoints.pause                              ss    3          11,433                ms
IOSyncAPIComparisonBenchmarks.copyFileUsingFileStreamAndHugeChunks:·safepoints.pause.avg                          ss                3,811                ms
IOSyncAPIComparisonBenchmarks.copyFileUsingFileStreamAndHugeChunks:·safepoints.pause.count                        ss                3,000                 #
IOSyncAPIComparisonBenchmarks.copyFileUsingFileStreamAndHugeChunks:·safepoints.pause.p0.00                        ss                0,099                ms
IOSyncAPIComparisonBenchmarks.copyFileUsingFileStreamAndHugeChunks:·safepoints.pause.p0.50                        ss                0,127                ms
IOSyncAPIComparisonBenchmarks.copyFileUsingFileStreamAndHugeChunks:·safepoints.pause.p0.90                        ss               11,207                ms
IOSyncAPIComparisonBenchmarks.copyFileUsingFileStreamAndHugeChunks:·safepoints.pause.p0.95                        ss               11,207                ms
IOSyncAPIComparisonBenchmarks.copyFileUsingFileStreamAndHugeChunks:·safepoints.pause.p0.99                        ss               11,207                ms
IOSyncAPIComparisonBenchmarks.copyFileUsingFileStreamAndHugeChunks:·safepoints.pause.p0.999                       ss               11,207                ms
IOSyncAPIComparisonBenchmarks.copyFileUsingFileStreamAndHugeChunks:·safepoints.pause.p0.9999                      ss               11,207                ms
IOSyncAPIComparisonBenchmarks.copyFileUsingFileStreamAndHugeChunks:·safepoints.pause.p1.00                        ss               11,207                ms
IOSyncAPIComparisonBenchmarks.copyFileUsingFileStreamAndHugeChunks:·safepoints.ttsp                               ss    3           0,126                ms
IOSyncAPIComparisonBenchmarks.copyFileUsingFileStreamAndHugeChunks:·safepoints.ttsp.avg                           ss                0,042                ms
IOSyncAPIComparisonBenchmarks.copyFileUsingFileStreamAndHugeChunks:·safepoints.ttsp.count                         ss                3,000                 #
IOSyncAPIComparisonBenchmarks.copyFileUsingFileStreamAndHugeChunks:·safepoints.ttsp.p0.00                         ss                0,036                ms
IOSyncAPIComparisonBenchmarks.copyFileUsingFileStreamAndHugeChunks:·safepoints.ttsp.p0.50                         ss                0,043                ms
IOSyncAPIComparisonBenchmarks.copyFileUsingFileStreamAndHugeChunks:·safepoints.ttsp.p0.90                         ss                0,046                ms
IOSyncAPIComparisonBenchmarks.copyFileUsingFileStreamAndHugeChunks:·safepoints.ttsp.p0.95                         ss                0,046                ms
IOSyncAPIComparisonBenchmarks.copyFileUsingFileStreamAndHugeChunks:·safepoints.ttsp.p0.99                         ss                0,046                ms
IOSyncAPIComparisonBenchmarks.copyFileUsingFileStreamAndHugeChunks:·safepoints.ttsp.p0.999                        ss                0,046                ms
IOSyncAPIComparisonBenchmarks.copyFileUsingFileStreamAndHugeChunks:·safepoints.ttsp.p0.9999                       ss                0,046                ms
IOSyncAPIComparisonBenchmarks.copyFileUsingFileStreamAndHugeChunks:·safepoints.ttsp.p1.00                         ss                0,046                ms
IOSyncAPIComparisonBenchmarks.copyFileUsingFileStreamAndHugeChunks:·threads.alive                                 ss                6,000           threads
IOSyncAPIComparisonBenchmarks.copyFileUsingFileStreamAndHugeChunks:·threads.daemon                                ss                5,000           threads
IOSyncAPIComparisonBenchmarks.copyFileUsingFileStreamAndHugeChunks:·threads.started                               ss               10,000           threads
IOSyncAPIComparisonBenchmarks.copyFileUsingFileStreamAndSmallChunks                                               ss              187,816             ms/op
IOSyncAPIComparisonBenchmarks.copyFileUsingFileStreamAndSmallChunks:·gc.alloc.rate                                ss                0,058            MB/sec
IOSyncAPIComparisonBenchmarks.copyFileUsingFileStreamAndSmallChunks:·gc.alloc.rate.norm                           ss            43352,000              B/op
IOSyncAPIComparisonBenchmarks.copyFileUsingFileStreamAndSmallChunks:·gc.count                                     ss                  ≈ 0            counts
IOSyncAPIComparisonBenchmarks.copyFileUsingFileStreamAndSmallChunks:·rt.safepointSyncTime                         ss                0,030                ms
IOSyncAPIComparisonBenchmarks.copyFileUsingFileStreamAndSmallChunks:·rt.safepointTime                             ss                0,592                ms
IOSyncAPIComparisonBenchmarks.copyFileUsingFileStreamAndSmallChunks:·rt.safepoints                                ss                9,000            counts
IOSyncAPIComparisonBenchmarks.copyFileUsingFileStreamAndSmallChunks:·rt.sync.contendedLockAttempts                ss              130,000             locks
IOSyncAPIComparisonBenchmarks.copyFileUsingFileStreamAndSmallChunks:·rt.sync.fatMonitors                          ss              128,000          monitors
IOSyncAPIComparisonBenchmarks.copyFileUsingFileStreamAndSmallChunks:·rt.sync.futileWakeups                        ss                5,000            counts
IOSyncAPIComparisonBenchmarks.copyFileUsingFileStreamAndSmallChunks:·rt.sync.monitorDeflations                    ss               54,000          monitors
IOSyncAPIComparisonBenchmarks.copyFileUsingFileStreamAndSmallChunks:·rt.sync.monitorInflations                    ss               56,000          monitors
IOSyncAPIComparisonBenchmarks.copyFileUsingFileStreamAndSmallChunks:·rt.sync.notifications                        ss               10,000            counts
IOSyncAPIComparisonBenchmarks.copyFileUsingFileStreamAndSmallChunks:·rt.sync.parks                                ss               18,000            counts
IOSyncAPIComparisonBenchmarks.copyFileUsingFileStreamAndSmallChunks:·safepoints.interval                          ss             1362,000                ms
IOSyncAPIComparisonBenchmarks.copyFileUsingFileStreamAndSmallChunks:·safepoints.pause                             ss                0,325                ms
IOSyncAPIComparisonBenchmarks.copyFileUsingFileStreamAndSmallChunks:·safepoints.pause.avg                         ss                0,325                ms
IOSyncAPIComparisonBenchmarks.copyFileUsingFileStreamAndSmallChunks:·safepoints.pause.count                       ss                1,000                 #
IOSyncAPIComparisonBenchmarks.copyFileUsingFileStreamAndSmallChunks:·safepoints.pause.p0.00                       ss                0,325                ms
IOSyncAPIComparisonBenchmarks.copyFileUsingFileStreamAndSmallChunks:·safepoints.pause.p0.50                       ss                0,325                ms
IOSyncAPIComparisonBenchmarks.copyFileUsingFileStreamAndSmallChunks:·safepoints.pause.p0.90                       ss                0,325                ms
IOSyncAPIComparisonBenchmarks.copyFileUsingFileStreamAndSmallChunks:·safepoints.pause.p0.95                       ss                0,325                ms
IOSyncAPIComparisonBenchmarks.copyFileUsingFileStreamAndSmallChunks:·safepoints.pause.p0.99                       ss                0,325                ms
IOSyncAPIComparisonBenchmarks.copyFileUsingFileStreamAndSmallChunks:·safepoints.pause.p0.999                      ss                0,325                ms
IOSyncAPIComparisonBenchmarks.copyFileUsingFileStreamAndSmallChunks:·safepoints.pause.p0.9999                     ss                0,325                ms
IOSyncAPIComparisonBenchmarks.copyFileUsingFileStreamAndSmallChunks:·safepoints.pause.p1.00                       ss                0,325                ms
IOSyncAPIComparisonBenchmarks.copyFileUsingFileStreamAndSmallChunks:·safepoints.ttsp                              ss                0,095                ms
IOSyncAPIComparisonBenchmarks.copyFileUsingFileStreamAndSmallChunks:·safepoints.ttsp.avg                          ss                0,095                ms
IOSyncAPIComparisonBenchmarks.copyFileUsingFileStreamAndSmallChunks:·safepoints.ttsp.count                        ss                1,000                 #
IOSyncAPIComparisonBenchmarks.copyFileUsingFileStreamAndSmallChunks:·safepoints.ttsp.p0.00                        ss                0,095                ms
IOSyncAPIComparisonBenchmarks.copyFileUsingFileStreamAndSmallChunks:·safepoints.ttsp.p0.50                        ss                0,095                ms
IOSyncAPIComparisonBenchmarks.copyFileUsingFileStreamAndSmallChunks:·safepoints.ttsp.p0.90                        ss                0,095                ms
IOSyncAPIComparisonBenchmarks.copyFileUsingFileStreamAndSmallChunks:·safepoints.ttsp.p0.95                        ss                0,095                ms
IOSyncAPIComparisonBenchmarks.copyFileUsingFileStreamAndSmallChunks:·safepoints.ttsp.p0.99                        ss                0,095                ms
IOSyncAPIComparisonBenchmarks.copyFileUsingFileStreamAndSmallChunks:·safepoints.ttsp.p0.999                       ss                0,095                ms
IOSyncAPIComparisonBenchmarks.copyFileUsingFileStreamAndSmallChunks:·safepoints.ttsp.p0.9999                      ss                0,095                ms
IOSyncAPIComparisonBenchmarks.copyFileUsingFileStreamAndSmallChunks:·safepoints.ttsp.p1.00                        ss                0,095                ms
IOSyncAPIComparisonBenchmarks.copyFileUsingFileStreamAndSmallChunks:·threads.alive                                ss                6,000           threads
IOSyncAPIComparisonBenchmarks.copyFileUsingFileStreamAndSmallChunks:·threads.daemon                               ss                5,000           threads
IOSyncAPIComparisonBenchmarks.copyFileUsingFileStreamAndSmallChunks:·threads.started                              ss               10,000           threads
IOSyncAPIComparisonBenchmarks.copyFileUsingMappedByteBuffer                                                       ss              666,294             ms/op
IOSyncAPIComparisonBenchmarks.copyFileUsingMappedByteBuffer:·gc.alloc.rate                                        ss              108,276            MB/sec
IOSyncAPIComparisonBenchmarks.copyFileUsingMappedByteBuffer:·gc.alloc.rate.norm                                   ss        134241520,000              B/op
IOSyncAPIComparisonBenchmarks.copyFileUsingMappedByteBuffer:·gc.count                                             ss                  ≈ 0            counts
IOSyncAPIComparisonBenchmarks.copyFileUsingMappedByteBuffer:·rt.safepointSyncTime                                 ss                0,005                ms
IOSyncAPIComparisonBenchmarks.copyFileUsingMappedByteBuffer:·rt.safepointTime                                     ss                0,476                ms
IOSyncAPIComparisonBenchmarks.copyFileUsingMappedByteBuffer:·rt.safepoints                                        ss               12,000            counts
IOSyncAPIComparisonBenchmarks.copyFileUsingMappedByteBuffer:·rt.sync.contendedLockAttempts                        ss               68,000             locks
IOSyncAPIComparisonBenchmarks.copyFileUsingMappedByteBuffer:·rt.sync.fatMonitors                                  ss              128,000          monitors
IOSyncAPIComparisonBenchmarks.copyFileUsingMappedByteBuffer:·rt.sync.futileWakeups                                ss                5,000            counts
IOSyncAPIComparisonBenchmarks.copyFileUsingMappedByteBuffer:·rt.sync.monitorDeflations                            ss               53,000          monitors
IOSyncAPIComparisonBenchmarks.copyFileUsingMappedByteBuffer:·rt.sync.monitorInflations                            ss               55,000          monitors
IOSyncAPIComparisonBenchmarks.copyFileUsingMappedByteBuffer:·rt.sync.notifications                                ss               10,000            counts
IOSyncAPIComparisonBenchmarks.copyFileUsingMappedByteBuffer:·rt.sync.parks                                        ss               20,000            counts
IOSyncAPIComparisonBenchmarks.copyFileUsingMappedByteBuffer:·safepoints.interval                                  ss             1831,000                ms
IOSyncAPIComparisonBenchmarks.copyFileUsingMappedByteBuffer:·safepoints.pause                                     ss    2           0,561                ms
IOSyncAPIComparisonBenchmarks.copyFileUsingMappedByteBuffer:·safepoints.pause.avg                                 ss                0,281                ms
IOSyncAPIComparisonBenchmarks.copyFileUsingMappedByteBuffer:·safepoints.pause.count                               ss                2,000                 #
IOSyncAPIComparisonBenchmarks.copyFileUsingMappedByteBuffer:·safepoints.pause.p0.00                               ss                0,226                ms
IOSyncAPIComparisonBenchmarks.copyFileUsingMappedByteBuffer:·safepoints.pause.p0.50                               ss                0,281                ms
IOSyncAPIComparisonBenchmarks.copyFileUsingMappedByteBuffer:·safepoints.pause.p0.90                               ss                0,336                ms
IOSyncAPIComparisonBenchmarks.copyFileUsingMappedByteBuffer:·safepoints.pause.p0.95                               ss                0,336                ms
IOSyncAPIComparisonBenchmarks.copyFileUsingMappedByteBuffer:·safepoints.pause.p0.99                               ss                0,336                ms
IOSyncAPIComparisonBenchmarks.copyFileUsingMappedByteBuffer:·safepoints.pause.p0.999                              ss                0,336                ms
IOSyncAPIComparisonBenchmarks.copyFileUsingMappedByteBuffer:·safepoints.pause.p0.9999                             ss                0,336                ms
IOSyncAPIComparisonBenchmarks.copyFileUsingMappedByteBuffer:·safepoints.pause.p1.00                               ss                0,336                ms
IOSyncAPIComparisonBenchmarks.copyFileUsingMappedByteBuffer:·safepoints.ttsp                                      ss    2           0,140                ms
IOSyncAPIComparisonBenchmarks.copyFileUsingMappedByteBuffer:·safepoints.ttsp.avg                                  ss                0,070                ms
IOSyncAPIComparisonBenchmarks.copyFileUsingMappedByteBuffer:·safepoints.ttsp.count                                ss                2,000                 #
IOSyncAPIComparisonBenchmarks.copyFileUsingMappedByteBuffer:·safepoints.ttsp.p0.00                                ss                0,055                ms
IOSyncAPIComparisonBenchmarks.copyFileUsingMappedByteBuffer:·safepoints.ttsp.p0.50                                ss                0,070                ms
IOSyncAPIComparisonBenchmarks.copyFileUsingMappedByteBuffer:·safepoints.ttsp.p0.90                                ss                0,085                ms
IOSyncAPIComparisonBenchmarks.copyFileUsingMappedByteBuffer:·safepoints.ttsp.p0.95                                ss                0,085                ms
IOSyncAPIComparisonBenchmarks.copyFileUsingMappedByteBuffer:·safepoints.ttsp.p0.99                                ss                0,085                ms
IOSyncAPIComparisonBenchmarks.copyFileUsingMappedByteBuffer:·safepoints.ttsp.p0.999                               ss                0,085                ms
IOSyncAPIComparisonBenchmarks.copyFileUsingMappedByteBuffer:·safepoints.ttsp.p0.9999                              ss                0,085                ms
IOSyncAPIComparisonBenchmarks.copyFileUsingMappedByteBuffer:·safepoints.ttsp.p1.00                                ss                0,085                ms
IOSyncAPIComparisonBenchmarks.copyFileUsingMappedByteBuffer:·threads.alive                                        ss                6,000           threads
IOSyncAPIComparisonBenchmarks.copyFileUsingMappedByteBuffer:·threads.daemon                                       ss                5,000           threads
IOSyncAPIComparisonBenchmarks.copyFileUsingMappedByteBuffer:·threads.started                                      ss               10,000           threads
IOSyncFileSeekBenchmarks.seekAndCopyFileUsingHugeChunks                                                           ss              758,515             ms/op
IOSyncFileSeekBenchmarks.seekAndCopyFileUsingHugeChunks:·gc.alloc.rate                                            ss              110,808            MB/sec
IOSyncFileSeekBenchmarks.seekAndCopyFileUsingHugeChunks:·gc.alloc.rate.norm                                       ss        151021576,000              B/op
IOSyncFileSeekBenchmarks.seekAndCopyFileUsingHugeChunks:·gc.churn.PS_Eden_Space                                   ss               76,287            MB/sec
IOSyncFileSeekBenchmarks.seekAndCopyFileUsingHugeChunks:·gc.churn.PS_Eden_Space.norm                              ss        103972040,000              B/op
IOSyncFileSeekBenchmarks.seekAndCopyFileUsingHugeChunks:·gc.churn.PS_Survivor_Space                               ss                0,048            MB/sec
IOSyncFileSeekBenchmarks.seekAndCopyFileUsingHugeChunks:·gc.churn.PS_Survivor_Space.norm                          ss            65536,000              B/op
IOSyncFileSeekBenchmarks.seekAndCopyFileUsingHugeChunks:·gc.count                                                 ss                2,000            counts
IOSyncFileSeekBenchmarks.seekAndCopyFileUsingHugeChunks:·gc.time                                                  ss                3,000                ms
IOSyncFileSeekBenchmarks.seekAndCopyFileUsingHugeChunks:·rt.safepointSyncTime                                     ss                0,031                ms
IOSyncFileSeekBenchmarks.seekAndCopyFileUsingHugeChunks:·rt.safepointTime                                         ss                0,694                ms
IOSyncFileSeekBenchmarks.seekAndCopyFileUsingHugeChunks:·rt.safepoints                                            ss               14,000            counts
IOSyncFileSeekBenchmarks.seekAndCopyFileUsingHugeChunks:·rt.sync.contendedLockAttempts                            ss               64,000             locks
IOSyncFileSeekBenchmarks.seekAndCopyFileUsingHugeChunks:·rt.sync.fatMonitors                                      ss              128,000          monitors
IOSyncFileSeekBenchmarks.seekAndCopyFileUsingHugeChunks:·rt.sync.futileWakeups                                    ss                8,000            counts
IOSyncFileSeekBenchmarks.seekAndCopyFileUsingHugeChunks:·rt.sync.monitorDeflations                                ss               54,000          monitors
IOSyncFileSeekBenchmarks.seekAndCopyFileUsingHugeChunks:·rt.sync.monitorInflations                                ss               56,000          monitors
IOSyncFileSeekBenchmarks.seekAndCopyFileUsingHugeChunks:·rt.sync.notifications                                    ss               14,000            counts
IOSyncFileSeekBenchmarks.seekAndCopyFileUsingHugeChunks:·rt.sync.parks                                            ss               23,000            counts
IOSyncFileSeekBenchmarks.seekAndCopyFileUsingHugeChunks:·safepoints.interval                                      ss             1949,000                ms
IOSyncFileSeekBenchmarks.seekAndCopyFileUsingHugeChunks:·safepoints.pause                                         ss    4          16,505                ms
IOSyncFileSeekBenchmarks.seekAndCopyFileUsingHugeChunks:·safepoints.pause.avg                                     ss                4,126                ms
IOSyncFileSeekBenchmarks.seekAndCopyFileUsingHugeChunks:·safepoints.pause.count                                   ss                4,000                 #
IOSyncFileSeekBenchmarks.seekAndCopyFileUsingHugeChunks:·safepoints.pause.p0.00                                   ss                1,581                ms
IOSyncFileSeekBenchmarks.seekAndCopyFileUsingHugeChunks:·safepoints.pause.p0.50                                   ss                2,375                ms
IOSyncFileSeekBenchmarks.seekAndCopyFileUsingHugeChunks:·safepoints.pause.p0.90                                   ss               10,174                ms
IOSyncFileSeekBenchmarks.seekAndCopyFileUsingHugeChunks:·safepoints.pause.p0.95                                   ss               10,174                ms
IOSyncFileSeekBenchmarks.seekAndCopyFileUsingHugeChunks:·safepoints.pause.p0.99                                   ss               10,174                ms
IOSyncFileSeekBenchmarks.seekAndCopyFileUsingHugeChunks:·safepoints.pause.p0.999                                  ss               10,174                ms
IOSyncFileSeekBenchmarks.seekAndCopyFileUsingHugeChunks:·safepoints.pause.p0.9999                                 ss               10,174                ms
IOSyncFileSeekBenchmarks.seekAndCopyFileUsingHugeChunks:·safepoints.pause.p1.00                                   ss               10,174                ms
IOSyncFileSeekBenchmarks.seekAndCopyFileUsingHugeChunks:·safepoints.ttsp                                          ss    4           2,655                ms
IOSyncFileSeekBenchmarks.seekAndCopyFileUsingHugeChunks:·safepoints.ttsp.avg                                      ss                0,664                ms
IOSyncFileSeekBenchmarks.seekAndCopyFileUsingHugeChunks:·safepoints.ttsp.count                                    ss                4,000                 #
IOSyncFileSeekBenchmarks.seekAndCopyFileUsingHugeChunks:·safepoints.ttsp.p0.00                                    ss                0,021                ms
IOSyncFileSeekBenchmarks.seekAndCopyFileUsingHugeChunks:·safepoints.ttsp.p0.50                                    ss                0,033                ms
IOSyncFileSeekBenchmarks.seekAndCopyFileUsingHugeChunks:·safepoints.ttsp.p0.90                                    ss                2,568                ms
IOSyncFileSeekBenchmarks.seekAndCopyFileUsingHugeChunks:·safepoints.ttsp.p0.95                                    ss                2,568                ms
IOSyncFileSeekBenchmarks.seekAndCopyFileUsingHugeChunks:·safepoints.ttsp.p0.99                                    ss                2,568                ms
IOSyncFileSeekBenchmarks.seekAndCopyFileUsingHugeChunks:·safepoints.ttsp.p0.999                                   ss                2,568                ms
IOSyncFileSeekBenchmarks.seekAndCopyFileUsingHugeChunks:·safepoints.ttsp.p0.9999                                  ss                2,568                ms
IOSyncFileSeekBenchmarks.seekAndCopyFileUsingHugeChunks:·safepoints.ttsp.p1.00                                    ss                2,568                ms
IOSyncFileSeekBenchmarks.seekAndCopyFileUsingHugeChunks:·threads.alive                                            ss                6,000           threads
IOSyncFileSeekBenchmarks.seekAndCopyFileUsingHugeChunks:·threads.daemon                                           ss                5,000           threads
IOSyncFileSeekBenchmarks.seekAndCopyFileUsingHugeChunks:·threads.started                                          ss               10,000           threads
IOSyncFileSeekBenchmarks.seekAndCopyFileUsingSmallChunks                                                          ss             1499,184             ms/op
IOSyncFileSeekBenchmarks.seekAndCopyFileUsingSmallChunks:·gc.alloc.rate                                           ss               63,091            MB/sec
IOSyncFileSeekBenchmarks.seekAndCopyFileUsingSmallChunks:·gc.alloc.rate.norm                                      ss        134391784,000              B/op
IOSyncFileSeekBenchmarks.seekAndCopyFileUsingSmallChunks:·gc.churn.PS_Eden_Space                                  ss               63,009            MB/sec
IOSyncFileSeekBenchmarks.seekAndCopyFileUsingSmallChunks:·gc.churn.PS_Eden_Space.norm                             ss        134217728,000              B/op
IOSyncFileSeekBenchmarks.seekAndCopyFileUsingSmallChunks:·gc.count                                                ss                2,000            counts
IOSyncFileSeekBenchmarks.seekAndCopyFileUsingSmallChunks:·gc.time                                                 ss                1,000                ms
IOSyncFileSeekBenchmarks.seekAndCopyFileUsingSmallChunks:·rt.safepointSyncTime                                    ss                0,035                ms
IOSyncFileSeekBenchmarks.seekAndCopyFileUsingSmallChunks:·rt.safepointTime                                        ss                0,669                ms
IOSyncFileSeekBenchmarks.seekAndCopyFileUsingSmallChunks:·rt.safepoints                                           ss               15,000            counts
IOSyncFileSeekBenchmarks.seekAndCopyFileUsingSmallChunks:·rt.sync.contendedLockAttempts                           ss               35,000             locks
IOSyncFileSeekBenchmarks.seekAndCopyFileUsingSmallChunks:·rt.sync.fatMonitors                                     ss              128,000          monitors
IOSyncFileSeekBenchmarks.seekAndCopyFileUsingSmallChunks:·rt.sync.futileWakeups                                   ss                6,000            counts
IOSyncFileSeekBenchmarks.seekAndCopyFileUsingSmallChunks:·rt.sync.monitorDeflations                               ss               54,000          monitors
IOSyncFileSeekBenchmarks.seekAndCopyFileUsingSmallChunks:·rt.sync.monitorInflations                               ss               56,000          monitors
IOSyncFileSeekBenchmarks.seekAndCopyFileUsingSmallChunks:·rt.sync.notifications                                   ss               12,000            counts
IOSyncFileSeekBenchmarks.seekAndCopyFileUsingSmallChunks:·rt.sync.parks                                           ss               23,000            counts
IOSyncFileSeekBenchmarks.seekAndCopyFileUsingSmallChunks:·safepoints.interval                                     ss             2679,000                ms
IOSyncFileSeekBenchmarks.seekAndCopyFileUsingSmallChunks:·safepoints.pause                                        ss    5          12,045                ms
IOSyncFileSeekBenchmarks.seekAndCopyFileUsingSmallChunks:·safepoints.pause.avg                                    ss                2,409                ms
IOSyncFileSeekBenchmarks.seekAndCopyFileUsingSmallChunks:·safepoints.pause.count                                  ss                5,000                 #
IOSyncFileSeekBenchmarks.seekAndCopyFileUsingSmallChunks:·safepoints.pause.p0.00                                  ss                0,088                ms
IOSyncFileSeekBenchmarks.seekAndCopyFileUsingSmallChunks:·safepoints.pause.p0.50                                  ss                0,571                ms
IOSyncFileSeekBenchmarks.seekAndCopyFileUsingSmallChunks:·safepoints.pause.p0.90                                  ss               10,699                ms
IOSyncFileSeekBenchmarks.seekAndCopyFileUsingSmallChunks:·safepoints.pause.p0.95                                  ss               10,699                ms
IOSyncFileSeekBenchmarks.seekAndCopyFileUsingSmallChunks:·safepoints.pause.p0.99                                  ss               10,699                ms
IOSyncFileSeekBenchmarks.seekAndCopyFileUsingSmallChunks:·safepoints.pause.p0.999                                 ss               10,699                ms
IOSyncFileSeekBenchmarks.seekAndCopyFileUsingSmallChunks:·safepoints.pause.p0.9999                                ss               10,699                ms
IOSyncFileSeekBenchmarks.seekAndCopyFileUsingSmallChunks:·safepoints.pause.p1.00                                  ss               10,699                ms
IOSyncFileSeekBenchmarks.seekAndCopyFileUsingSmallChunks:·safepoints.ttsp                                         ss    5           0,144                ms
IOSyncFileSeekBenchmarks.seekAndCopyFileUsingSmallChunks:·safepoints.ttsp.avg                                     ss                0,029                ms
IOSyncFileSeekBenchmarks.seekAndCopyFileUsingSmallChunks:·safepoints.ttsp.count                                   ss                5,000                 #
IOSyncFileSeekBenchmarks.seekAndCopyFileUsingSmallChunks:·safepoints.ttsp.p0.00                                   ss                0,016                ms
IOSyncFileSeekBenchmarks.seekAndCopyFileUsingSmallChunks:·safepoints.ttsp.p0.50                                   ss                0,017                ms
IOSyncFileSeekBenchmarks.seekAndCopyFileUsingSmallChunks:·safepoints.ttsp.p0.90                                   ss                0,048                ms
IOSyncFileSeekBenchmarks.seekAndCopyFileUsingSmallChunks:·safepoints.ttsp.p0.95                                   ss                0,048                ms
IOSyncFileSeekBenchmarks.seekAndCopyFileUsingSmallChunks:·safepoints.ttsp.p0.99                                   ss                0,048                ms
IOSyncFileSeekBenchmarks.seekAndCopyFileUsingSmallChunks:·safepoints.ttsp.p0.999                                  ss                0,048                ms
IOSyncFileSeekBenchmarks.seekAndCopyFileUsingSmallChunks:·safepoints.ttsp.p0.9999                                 ss                0,048                ms
IOSyncFileSeekBenchmarks.seekAndCopyFileUsingSmallChunks:·safepoints.ttsp.p1.00                                   ss                0,048                ms
IOSyncFileSeekBenchmarks.seekAndCopyFileUsingSmallChunks:·threads.alive                                           ss                6,000           threads
IOSyncFileSeekBenchmarks.seekAndCopyFileUsingSmallChunks:·threads.daemon                                          ss                5,000           threads
IOSyncFileSeekBenchmarks.seekAndCopyFileUsingSmallChunks:·threads.started                                         ss               10,000           threads
IOSyncFileSeekBenchmarks.seekAndReadFileUsingHugeChunks                                                           ss               82,687             ms/op
IOSyncFileSeekBenchmarks.seekAndReadFileUsingHugeChunks:·gc.alloc.rate                                            ss              211,085            MB/sec
IOSyncFileSeekBenchmarks.seekAndReadFileUsingHugeChunks:·gc.alloc.rate.norm                                       ss        134239448,000              B/op
IOSyncFileSeekBenchmarks.seekAndReadFileUsingHugeChunks:·gc.churn.PS_Eden_Space                                   ss              189,340            MB/sec
IOSyncFileSeekBenchmarks.seekAndReadFileUsingHugeChunks:·gc.churn.PS_Eden_Space.norm                              ss        120410736,000              B/op
IOSyncFileSeekBenchmarks.seekAndReadFileUsingHugeChunks:·gc.count                                                 ss                1,000            counts
IOSyncFileSeekBenchmarks.seekAndReadFileUsingHugeChunks:·gc.time                                                  ss                1,000                ms
IOSyncFileSeekBenchmarks.seekAndReadFileUsingHugeChunks:·rt.safepointSyncTime                                     ss                0,019                ms
IOSyncFileSeekBenchmarks.seekAndReadFileUsingHugeChunks:·rt.safepointTime                                         ss                0,650                ms
IOSyncFileSeekBenchmarks.seekAndReadFileUsingHugeChunks:·rt.safepoints                                            ss               12,000            counts
IOSyncFileSeekBenchmarks.seekAndReadFileUsingHugeChunks:·rt.sync.contendedLockAttempts                            ss               92,000             locks
IOSyncFileSeekBenchmarks.seekAndReadFileUsingHugeChunks:·rt.sync.fatMonitors                                      ss              128,000          monitors
IOSyncFileSeekBenchmarks.seekAndReadFileUsingHugeChunks:·rt.sync.futileWakeups                                    ss                5,000            counts
IOSyncFileSeekBenchmarks.seekAndReadFileUsingHugeChunks:·rt.sync.monitorDeflations                                ss               54,000          monitors
IOSyncFileSeekBenchmarks.seekAndReadFileUsingHugeChunks:·rt.sync.monitorInflations                                ss               56,000          monitors
IOSyncFileSeekBenchmarks.seekAndReadFileUsingHugeChunks:·rt.sync.notifications                                    ss               12,000            counts
IOSyncFileSeekBenchmarks.seekAndReadFileUsingHugeChunks:·rt.sync.parks                                            ss               20,000            counts
IOSyncFileSeekBenchmarks.seekAndReadFileUsingHugeChunks:·safepoints.interval                                      ss             1272,000                ms
IOSyncFileSeekBenchmarks.seekAndReadFileUsingHugeChunks:·safepoints.pause                                         ss    2          11,524                ms
IOSyncFileSeekBenchmarks.seekAndReadFileUsingHugeChunks:·safepoints.pause.avg                                     ss                5,762                ms
IOSyncFileSeekBenchmarks.seekAndReadFileUsingHugeChunks:·safepoints.pause.count                                   ss                2,000                 #
IOSyncFileSeekBenchmarks.seekAndReadFileUsingHugeChunks:·safepoints.pause.p0.00                                   ss                1,120                ms
IOSyncFileSeekBenchmarks.seekAndReadFileUsingHugeChunks:·safepoints.pause.p0.50                                   ss                5,762                ms
IOSyncFileSeekBenchmarks.seekAndReadFileUsingHugeChunks:·safepoints.pause.p0.90                                   ss               10,404                ms
IOSyncFileSeekBenchmarks.seekAndReadFileUsingHugeChunks:·safepoints.pause.p0.95                                   ss               10,404                ms
IOSyncFileSeekBenchmarks.seekAndReadFileUsingHugeChunks:·safepoints.pause.p0.99                                   ss               10,404                ms
IOSyncFileSeekBenchmarks.seekAndReadFileUsingHugeChunks:·safepoints.pause.p0.999                                  ss               10,404                ms
IOSyncFileSeekBenchmarks.seekAndReadFileUsingHugeChunks:·safepoints.pause.p0.9999                                 ss               10,404                ms
IOSyncFileSeekBenchmarks.seekAndReadFileUsingHugeChunks:·safepoints.pause.p1.00                                   ss               10,404                ms
IOSyncFileSeekBenchmarks.seekAndReadFileUsingHugeChunks:·safepoints.ttsp                                          ss    2           0,062                ms
IOSyncFileSeekBenchmarks.seekAndReadFileUsingHugeChunks:·safepoints.ttsp.avg                                      ss                0,031                ms
IOSyncFileSeekBenchmarks.seekAndReadFileUsingHugeChunks:·safepoints.ttsp.count                                    ss                2,000                 #
IOSyncFileSeekBenchmarks.seekAndReadFileUsingHugeChunks:·safepoints.ttsp.p0.00                                    ss                0,015                ms
IOSyncFileSeekBenchmarks.seekAndReadFileUsingHugeChunks:·safepoints.ttsp.p0.50                                    ss                0,031                ms
IOSyncFileSeekBenchmarks.seekAndReadFileUsingHugeChunks:·safepoints.ttsp.p0.90                                    ss                0,047                ms
IOSyncFileSeekBenchmarks.seekAndReadFileUsingHugeChunks:·safepoints.ttsp.p0.95                                    ss                0,047                ms
IOSyncFileSeekBenchmarks.seekAndReadFileUsingHugeChunks:·safepoints.ttsp.p0.99                                    ss                0,047                ms
IOSyncFileSeekBenchmarks.seekAndReadFileUsingHugeChunks:·safepoints.ttsp.p0.999                                   ss                0,047                ms
IOSyncFileSeekBenchmarks.seekAndReadFileUsingHugeChunks:·safepoints.ttsp.p0.9999                                  ss                0,047                ms
IOSyncFileSeekBenchmarks.seekAndReadFileUsingHugeChunks:·safepoints.ttsp.p1.00                                    ss                0,047                ms
IOSyncFileSeekBenchmarks.seekAndReadFileUsingHugeChunks:·threads.alive                                            ss                6,000           threads
IOSyncFileSeekBenchmarks.seekAndReadFileUsingHugeChunks:·threads.daemon                                           ss                5,000           threads
IOSyncFileSeekBenchmarks.seekAndReadFileUsingHugeChunks:·threads.started                                          ss               10,000           threads
IOSyncFileSeekBenchmarks.seekAndReadFileUsingSmallChunks                                                          ss              129,028             ms/op
IOSyncFileSeekBenchmarks.seekAndReadFileUsingSmallChunks:·gc.alloc.rate                                           ss              196,013            MB/sec
IOSyncFileSeekBenchmarks.seekAndReadFileUsingSmallChunks:·gc.alloc.rate.norm                                      ss        134375384,000              B/op
IOSyncFileSeekBenchmarks.seekAndReadFileUsingSmallChunks:·gc.churn.PS_Eden_Space                                  ss              195,783            MB/sec
IOSyncFileSeekBenchmarks.seekAndReadFileUsingSmallChunks:·gc.churn.PS_Eden_Space.norm                             ss        134217728,000              B/op
IOSyncFileSeekBenchmarks.seekAndReadFileUsingSmallChunks:·gc.count                                                ss                1,000            counts
IOSyncFileSeekBenchmarks.seekAndReadFileUsingSmallChunks:·gc.time                                                 ss                1,000                ms
IOSyncFileSeekBenchmarks.seekAndReadFileUsingSmallChunks:·rt.safepointSyncTime                                    ss                0,003                ms
IOSyncFileSeekBenchmarks.seekAndReadFileUsingSmallChunks:·rt.safepointTime                                        ss                0,575                ms
IOSyncFileSeekBenchmarks.seekAndReadFileUsingSmallChunks:·rt.safepoints                                           ss               11,000            counts
IOSyncFileSeekBenchmarks.seekAndReadFileUsingSmallChunks:·rt.sync.contendedLockAttempts                           ss               90,000             locks
IOSyncFileSeekBenchmarks.seekAndReadFileUsingSmallChunks:·rt.sync.fatMonitors                                     ss              128,000          monitors
IOSyncFileSeekBenchmarks.seekAndReadFileUsingSmallChunks:·rt.sync.futileWakeups                                   ss                3,000            counts
IOSyncFileSeekBenchmarks.seekAndReadFileUsingSmallChunks:·rt.sync.monitorDeflations                               ss               54,000          monitors
IOSyncFileSeekBenchmarks.seekAndReadFileUsingSmallChunks:·rt.sync.monitorInflations                               ss               56,000          monitors
IOSyncFileSeekBenchmarks.seekAndReadFileUsingSmallChunks:·rt.sync.notifications                                   ss               12,000            counts
IOSyncFileSeekBenchmarks.seekAndReadFileUsingSmallChunks:·rt.sync.parks                                           ss               18,000            counts
IOSyncFileSeekBenchmarks.seekAndReadFileUsingSmallChunks:·safepoints.interval                                     ss             1300,000                ms
IOSyncFileSeekBenchmarks.seekAndReadFileUsingSmallChunks:·safepoints.pause                                        ss    2          12,423                ms
IOSyncFileSeekBenchmarks.seekAndReadFileUsingSmallChunks:·safepoints.pause.avg                                    ss                6,212                ms
IOSyncFileSeekBenchmarks.seekAndReadFileUsingSmallChunks:·safepoints.pause.count                                  ss                2,000                 #
IOSyncFileSeekBenchmarks.seekAndReadFileUsingSmallChunks:·safepoints.pause.p0.00                                  ss                1,069                ms
IOSyncFileSeekBenchmarks.seekAndReadFileUsingSmallChunks:·safepoints.pause.p0.50                                  ss                6,212                ms
IOSyncFileSeekBenchmarks.seekAndReadFileUsingSmallChunks:·safepoints.pause.p0.90                                  ss               11,354                ms
IOSyncFileSeekBenchmarks.seekAndReadFileUsingSmallChunks:·safepoints.pause.p0.95                                  ss               11,354                ms
IOSyncFileSeekBenchmarks.seekAndReadFileUsingSmallChunks:·safepoints.pause.p0.99                                  ss               11,354                ms
IOSyncFileSeekBenchmarks.seekAndReadFileUsingSmallChunks:·safepoints.pause.p0.999                                 ss               11,354                ms
IOSyncFileSeekBenchmarks.seekAndReadFileUsingSmallChunks:·safepoints.pause.p0.9999                                ss               11,354                ms
IOSyncFileSeekBenchmarks.seekAndReadFileUsingSmallChunks:·safepoints.pause.p1.00                                  ss               11,354                ms
IOSyncFileSeekBenchmarks.seekAndReadFileUsingSmallChunks:·safepoints.ttsp                                         ss    2           0,072                ms
IOSyncFileSeekBenchmarks.seekAndReadFileUsingSmallChunks:·safepoints.ttsp.avg                                     ss                0,036                ms
IOSyncFileSeekBenchmarks.seekAndReadFileUsingSmallChunks:·safepoints.ttsp.count                                   ss                2,000                 #
IOSyncFileSeekBenchmarks.seekAndReadFileUsingSmallChunks:·safepoints.ttsp.p0.00                                   ss                0,032                ms
IOSyncFileSeekBenchmarks.seekAndReadFileUsingSmallChunks:·safepoints.ttsp.p0.50                                   ss                0,036                ms
IOSyncFileSeekBenchmarks.seekAndReadFileUsingSmallChunks:·safepoints.ttsp.p0.90                                   ss                0,040                ms
IOSyncFileSeekBenchmarks.seekAndReadFileUsingSmallChunks:·safepoints.ttsp.p0.95                                   ss                0,040                ms
IOSyncFileSeekBenchmarks.seekAndReadFileUsingSmallChunks:·safepoints.ttsp.p0.99                                   ss                0,040                ms
IOSyncFileSeekBenchmarks.seekAndReadFileUsingSmallChunks:·safepoints.ttsp.p0.999                                  ss                0,040                ms
IOSyncFileSeekBenchmarks.seekAndReadFileUsingSmallChunks:·safepoints.ttsp.p0.9999                                 ss                0,040                ms
IOSyncFileSeekBenchmarks.seekAndReadFileUsingSmallChunks:·safepoints.ttsp.p1.00                                   ss                0,040                ms
IOSyncFileSeekBenchmarks.seekAndReadFileUsingSmallChunks:·threads.alive                                           ss                6,000           threads
IOSyncFileSeekBenchmarks.seekAndReadFileUsingSmallChunks:·threads.daemon                                          ss                5,000           threads
IOSyncFileSeekBenchmarks.seekAndReadFileUsingSmallChunks:·threads.started                                         ss               10,000           threads
IOSyncFileSeekBenchmarks.seekAndWriteFileUsingHugeChunks                                                          ss              381,451             ms/op
IOSyncFileSeekBenchmarks.seekAndWriteFileUsingHugeChunks:·gc.alloc.rate                                           ss                0,023            MB/sec
IOSyncFileSeekBenchmarks.seekAndWriteFileUsingHugeChunks:·gc.alloc.rate.norm                                      ss            21160,000              B/op
IOSyncFileSeekBenchmarks.seekAndWriteFileUsingHugeChunks:·gc.count                                                ss                  ≈ 0            counts
IOSyncFileSeekBenchmarks.seekAndWriteFileUsingHugeChunks:·rt.safepointSyncTime                                    ss                0,025                ms
IOSyncFileSeekBenchmarks.seekAndWriteFileUsingHugeChunks:·rt.safepointTime                                        ss                0,551                ms
IOSyncFileSeekBenchmarks.seekAndWriteFileUsingHugeChunks:·rt.safepoints                                           ss                9,000            counts
IOSyncFileSeekBenchmarks.seekAndWriteFileUsingHugeChunks:·rt.sync.contendedLockAttempts                           ss               62,000             locks
IOSyncFileSeekBenchmarks.seekAndWriteFileUsingHugeChunks:·rt.sync.fatMonitors                                     ss              128,000          monitors
IOSyncFileSeekBenchmarks.seekAndWriteFileUsingHugeChunks:·rt.sync.futileWakeups                                   ss                2,000            counts
IOSyncFileSeekBenchmarks.seekAndWriteFileUsingHugeChunks:·rt.sync.monitorDeflations                               ss               53,000          monitors
IOSyncFileSeekBenchmarks.seekAndWriteFileUsingHugeChunks:·rt.sync.monitorInflations                               ss               55,000          monitors
IOSyncFileSeekBenchmarks.seekAndWriteFileUsingHugeChunks:·rt.sync.notifications                                   ss               10,000            counts
IOSyncFileSeekBenchmarks.seekAndWriteFileUsingHugeChunks:·rt.sync.parks                                           ss               17,000            counts
IOSyncFileSeekBenchmarks.seekAndWriteFileUsingHugeChunks:·safepoints.interval                                     ss             1543,000                ms
IOSyncFileSeekBenchmarks.seekAndWriteFileUsingHugeChunks:·safepoints.pause                                        ss    3          10,496                ms
IOSyncFileSeekBenchmarks.seekAndWriteFileUsingHugeChunks:·safepoints.pause.avg                                    ss                3,499                ms
IOSyncFileSeekBenchmarks.seekAndWriteFileUsingHugeChunks:·safepoints.pause.count                                  ss                3,000                 #
IOSyncFileSeekBenchmarks.seekAndWriteFileUsingHugeChunks:·safepoints.pause.p0.00                                  ss                0,127                ms
IOSyncFileSeekBenchmarks.seekAndWriteFileUsingHugeChunks:·safepoints.pause.p0.50                                  ss                0,129                ms
IOSyncFileSeekBenchmarks.seekAndWriteFileUsingHugeChunks:·safepoints.pause.p0.90                                  ss               10,240                ms
IOSyncFileSeekBenchmarks.seekAndWriteFileUsingHugeChunks:·safepoints.pause.p0.95                                  ss               10,240                ms
IOSyncFileSeekBenchmarks.seekAndWriteFileUsingHugeChunks:·safepoints.pause.p0.99                                  ss               10,240                ms
IOSyncFileSeekBenchmarks.seekAndWriteFileUsingHugeChunks:·safepoints.pause.p0.999                                 ss               10,240                ms
IOSyncFileSeekBenchmarks.seekAndWriteFileUsingHugeChunks:·safepoints.pause.p0.9999                                ss               10,240                ms
IOSyncFileSeekBenchmarks.seekAndWriteFileUsingHugeChunks:·safepoints.pause.p1.00                                  ss               10,240                ms
IOSyncFileSeekBenchmarks.seekAndWriteFileUsingHugeChunks:·safepoints.ttsp                                         ss    3           0,219                ms
IOSyncFileSeekBenchmarks.seekAndWriteFileUsingHugeChunks:·safepoints.ttsp.avg                                     ss                0,073                ms
IOSyncFileSeekBenchmarks.seekAndWriteFileUsingHugeChunks:·safepoints.ttsp.count                                   ss                3,000                 #
IOSyncFileSeekBenchmarks.seekAndWriteFileUsingHugeChunks:·safepoints.ttsp.p0.00                                   ss                0,032                ms
IOSyncFileSeekBenchmarks.seekAndWriteFileUsingHugeChunks:·safepoints.ttsp.p0.50                                   ss                0,054                ms
IOSyncFileSeekBenchmarks.seekAndWriteFileUsingHugeChunks:·safepoints.ttsp.p0.90                                   ss                0,133                ms
IOSyncFileSeekBenchmarks.seekAndWriteFileUsingHugeChunks:·safepoints.ttsp.p0.95                                   ss                0,133                ms
IOSyncFileSeekBenchmarks.seekAndWriteFileUsingHugeChunks:·safepoints.ttsp.p0.99                                   ss                0,133                ms
IOSyncFileSeekBenchmarks.seekAndWriteFileUsingHugeChunks:·safepoints.ttsp.p0.999                                  ss                0,133                ms
IOSyncFileSeekBenchmarks.seekAndWriteFileUsingHugeChunks:·safepoints.ttsp.p0.9999                                 ss                0,133                ms
IOSyncFileSeekBenchmarks.seekAndWriteFileUsingHugeChunks:·safepoints.ttsp.p1.00                                   ss                0,133                ms
IOSyncFileSeekBenchmarks.seekAndWriteFileUsingHugeChunks:·threads.alive                                           ss                6,000           threads
IOSyncFileSeekBenchmarks.seekAndWriteFileUsingHugeChunks:·threads.daemon                                          ss                5,000           threads
IOSyncFileSeekBenchmarks.seekAndWriteFileUsingHugeChunks:·threads.started                                         ss               10,000           threads
IOSyncFileSeekBenchmarks.seekAndWriteFileUsingSmallChunks                                                         ss              901,815             ms/op
IOSyncFileSeekBenchmarks.seekAndWriteFileUsingSmallChunks:·gc.alloc.rate                                          ss                0,018            MB/sec
IOSyncFileSeekBenchmarks.seekAndWriteFileUsingSmallChunks:·gc.alloc.rate.norm                                     ss            26584,000              B/op
IOSyncFileSeekBenchmarks.seekAndWriteFileUsingSmallChunks:·gc.count                                               ss                  ≈ 0            counts
IOSyncFileSeekBenchmarks.seekAndWriteFileUsingSmallChunks:·rt.safepointSyncTime                                   ss                0,003                ms
IOSyncFileSeekBenchmarks.seekAndWriteFileUsingSmallChunks:·rt.safepointTime                                       ss                0,724                ms
IOSyncFileSeekBenchmarks.seekAndWriteFileUsingSmallChunks:·rt.safepoints                                          ss               10,000            counts
IOSyncFileSeekBenchmarks.seekAndWriteFileUsingSmallChunks:·rt.sync.contendedLockAttempts                          ss               38,000             locks
IOSyncFileSeekBenchmarks.seekAndWriteFileUsingSmallChunks:·rt.sync.fatMonitors                                    ss              128,000          monitors
IOSyncFileSeekBenchmarks.seekAndWriteFileUsingSmallChunks:·rt.sync.futileWakeups                                  ss                2,000            counts
IOSyncFileSeekBenchmarks.seekAndWriteFileUsingSmallChunks:·rt.sync.monitorDeflations                              ss               53,000          monitors
IOSyncFileSeekBenchmarks.seekAndWriteFileUsingSmallChunks:·rt.sync.monitorInflations                              ss               55,000          monitors
IOSyncFileSeekBenchmarks.seekAndWriteFileUsingSmallChunks:·rt.sync.notifications                                  ss               10,000            counts
IOSyncFileSeekBenchmarks.seekAndWriteFileUsingSmallChunks:·rt.sync.parks                                          ss               16,000            counts
IOSyncFileSeekBenchmarks.seekAndWriteFileUsingSmallChunks:·safepoints.interval                                    ss             2088,000                ms
IOSyncFileSeekBenchmarks.seekAndWriteFileUsingSmallChunks:·safepoints.pause                                       ss    4          49,679                ms
IOSyncFileSeekBenchmarks.seekAndWriteFileUsingSmallChunks:·safepoints.pause.avg                                   ss               12,420                ms
IOSyncFileSeekBenchmarks.seekAndWriteFileUsingSmallChunks:·safepoints.pause.count                                 ss                4,000                 #
IOSyncFileSeekBenchmarks.seekAndWriteFileUsingSmallChunks:·safepoints.pause.p0.00                                 ss                0,106                ms
IOSyncFileSeekBenchmarks.seekAndWriteFileUsingSmallChunks:·safepoints.pause.p0.50                                 ss                4,962                ms
IOSyncFileSeekBenchmarks.seekAndWriteFileUsingSmallChunks:·safepoints.pause.p0.90                                 ss               39,649                ms
IOSyncFileSeekBenchmarks.seekAndWriteFileUsingSmallChunks:·safepoints.pause.p0.95                                 ss               39,649                ms
IOSyncFileSeekBenchmarks.seekAndWriteFileUsingSmallChunks:·safepoints.pause.p0.99                                 ss               39,649                ms
IOSyncFileSeekBenchmarks.seekAndWriteFileUsingSmallChunks:·safepoints.pause.p0.999                                ss               39,649                ms
IOSyncFileSeekBenchmarks.seekAndWriteFileUsingSmallChunks:·safepoints.pause.p0.9999                               ss               39,649                ms
IOSyncFileSeekBenchmarks.seekAndWriteFileUsingSmallChunks:·safepoints.pause.p1.00                                 ss               39,649                ms
IOSyncFileSeekBenchmarks.seekAndWriteFileUsingSmallChunks:·safepoints.ttsp                                        ss    4           0,146                ms
IOSyncFileSeekBenchmarks.seekAndWriteFileUsingSmallChunks:·safepoints.ttsp.avg                                    ss                0,037                ms
IOSyncFileSeekBenchmarks.seekAndWriteFileUsingSmallChunks:·safepoints.ttsp.count                                  ss                4,000                 #
IOSyncFileSeekBenchmarks.seekAndWriteFileUsingSmallChunks:·safepoints.ttsp.p0.00                                  ss                0,014                ms
IOSyncFileSeekBenchmarks.seekAndWriteFileUsingSmallChunks:·safepoints.ttsp.p0.50                                  ss                0,042                ms
IOSyncFileSeekBenchmarks.seekAndWriteFileUsingSmallChunks:·safepoints.ttsp.p0.90                                  ss                0,049                ms
IOSyncFileSeekBenchmarks.seekAndWriteFileUsingSmallChunks:·safepoints.ttsp.p0.95                                  ss                0,049                ms
IOSyncFileSeekBenchmarks.seekAndWriteFileUsingSmallChunks:·safepoints.ttsp.p0.99                                  ss                0,049                ms
IOSyncFileSeekBenchmarks.seekAndWriteFileUsingSmallChunks:·safepoints.ttsp.p0.999                                 ss                0,049                ms
IOSyncFileSeekBenchmarks.seekAndWriteFileUsingSmallChunks:·safepoints.ttsp.p0.9999                                ss                0,049                ms
IOSyncFileSeekBenchmarks.seekAndWriteFileUsingSmallChunks:·safepoints.ttsp.p1.00                                  ss                0,049                ms
IOSyncFileSeekBenchmarks.seekAndWriteFileUsingSmallChunks:·threads.alive                                          ss                6,000           threads
IOSyncFileSeekBenchmarks.seekAndWriteFileUsingSmallChunks:·threads.daemon                                         ss                5,000           threads
IOSyncFileSeekBenchmarks.seekAndWriteFileUsingSmallChunks:·threads.started                                        ss               10,000           threads
2020-11-05 09:59:15,527 INFO  [main!BenchmarkRunner] - Benchmark finished, executed tests count:37
2020-11-05 09:59:16,111 INFO  [main!CollectSystemInformation] - Unclassified JVM and GC properties...
2020-11-05 09:59:16,112 INFO  [main!BenchmarkRunner] - Generating JSON report...
2020-11-05 09:59:16,112 INFO  [main!ReportingService] - Preparing report: encrypt and sign...
2020-11-05 09:59:16,754 INFO  [main!ReportingService] - Report prepared: encrypted and signed
2020-11-05 09:59:16,948 INFO  [main!DeliveryService] - -->Sending benchmark report to URL https://www.gocypher.com/gocypher-benchmarks-reports/services/v1/reports/report
2020-11-05 09:59:18,106 INFO  [main!DeliveryService] - Benchmark report submitted successfully to reportUrl
2020-11-05 09:59:18,107 INFO  [main!DeliveryService] - Your report is available at https://www.gocypher.com/cybench/benchmark/75359dc8-93aa-4f49-b26c-d6a0d9f2e1e8
2020-11-05 09:59:18,107 INFO  [main!DeliveryService] - NOTE: It may take a few minutes for your report to appear online
2020-11-05 09:59:18,112 INFO  [main!BenchmarkRunner] - Saving test results to '.\reports\report.json'
2020-11-05 09:59:18,114 INFO  [main!BenchmarkRunner] - Saving ecnrypted test results to '.\reports\report.cyb'
2020-11-05 09:59:18,117 INFO  [main!BenchmarkRunner] - Removing all temporary auto-generated files....
2020-11-05 09:59:18,216 INFO  [main!BenchmarkRunner] - Removed all temporary auto-generated files!!!
2020-11-05 09:59:18,216 INFO  [main!BenchmarkRunner] - -----------------------------------------------------------------------------------------
2020-11-05 09:59:18,217 INFO  [main!BenchmarkRunner] -                                  Finished CyBench benchmarking (00:06:31.227)
2020-11-05 09:59:18,217 INFO  [main!BenchmarkRunner] - -----------------------------------------------------------------------------------------

Process finished with exit code 0
